REVLPDS  TITLE ' R E V L P D S '
***********************************************************************
*                                                                     *
*         REVLPDS - RELOAD CONDENSE HOLD FILE DATA TO PDS MEMBERS     *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY: GREG PRICE
*
*        DATE WRITTEN: JULY 12 2009 FOR REVIEW R43.0
*                      (CLONED FROM REVLMOD).
*        DATE UPDATED: SEPT 20 2014 FOR REVIEW R45.0
*                      - ADD SUPPORT FOR LARGE PDSE MEMBERS.
*                        (REVGEN FEATURE FLAGS NOW USED.)
*                      MARCH 13 2017 FOR REVIEW R47.1
*                      - ADD SUPPORT FOR SEGMENT OVERLAY PROGRAMS.
*
*        ATTRIBUTES:
*                 RE-ENTRANT.
*                 RMODE MUST BE 24 BECAUSE OF DCB ADDRESS PARAMETERS.
*
*        PURPOSE: A DATA SET LIST 'Z' SELECTION CODE REQUESTS
*                 THAT A PDS IS COMPRESSED.  IT IS IMPLEMENTED AS
*                 A CONDENSE OPERATION WHERE THE PDS MEMBERS ARE
*                 SEQUENTIALIZED TO THE CONDENSE HOLD FILE, THE
*                 PDS IS RESET, AND THE MEMBERS ARE RELOADED.  THE
*                 CONDENSE HOLD FILE IS A SEQUENTIAL DATA SET WITH
*                 FIXED-LENGTH 80-BYTE RECORDS.  THE DATA IS IN
*                 THE SAME FORMAT AS IS PROCESSED BY THE 'REVLMOD'
*                 PROGRAM.
*
*                 THIS PROGRAM PERFORMS THE PDS RESET (EMPTYING)
*                 AND PDS MEMBER RELOAD PHASES.
*
*        WARNING: ALTHOUGH THE SEQUENTIAL INPUT MAY LOOK LIKE INPUT
*                 FOR IEBUPDTE, IT IS NOT SUITABLE FOR PROCESSING
*                 BY THE IEBUPDTE OR PDSLOAD PROGRAMS.  THE DATA
*                 FORMAT IS KNOWN ONLY BY THE MEMRDWRT ROUTINE OF
*                 THE REVIEW2 CSECT AND THIS PROGRAM.  THE FORMAT
*                 OF EACH CONTROL STATEMENT TYPE IS KNOWN ONLY BY
*                 EITHER THE REVOFFLD CSECT OR THE MEMRDWRT ROUTINE
*                 OF THE REVIEW2 CSECT, AND THIS PROGRAM.  NOTE THAT
*                 "THIS PROGRAM" ALSO INCLUDES THE REVLMOD PROGRAM
*                 FROM WHICH THIS PROGRAM WAS CLONED.
*
*        PARAMETER:
*                 THE SINGLE OPTIONAL PROGRAM PARAMETER MUST BE A
*                 16-BYTE STRING:
*                 - THE FIRST 8 BYTES REPLACE 'SYSUT1' AS THE
*                   INPUT SEQUENTIAL FILE.  IF THE FIRST BYTE
*                   IS NULL THEN THE SEQUENTIAL INPUT FILE IS
*                   NOT PROCESSED, AND THE RESULTANT PDS WILL
*                   HAVE NO MEMBERS.
*                 - THE LAST 8 BYTES REPLACE 'SYSUT2' AS THE
*                   OUTPUT PARTITIONED FILE.
*
         EJECT
         LCLC  &REVDATE
         LCLC  &DD
         LCLC  &MM
         LCLC  &YY
&MM      SETC  '&SYSDATE'(1,2)          GET MM
&DD      SETC  '&SYSDATE'(4,2)          GET DD
&YY      SETC  '&SYSDATE'(7,2)          GET YY
&REVDATE SETC  '&YY.-&MM.-&DD'          GET YY-MM-DD
         SPACE
         COPY  REVGEN  <== GET LARGE MEMBER SUPPORT SETTING
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
************************************************************
*                                                          *
*         INITIALIZATION                                   *
*                                                          *
************************************************************
         SPACE
REVLPDS  CSECT
         USING PSA,0
         USING REVLPDS,R15
         B     @LOADMOD
         DROP  R15                 (REVLPDS)
         DC    AL1(23),CL23'REVLPDS R47.1 &REVDATE '
@SIZE    DC    0F'0',AL1(2),AL3($DATAL)
         DC    C'<DYN'             FLAG DYNAMIC AREA SUBPOOL AND SIZE
@LOADMOD STM   R14,R12,12(R13)
         LR    R11,R15
         USING REVLPDS,R11
         LR    R2,R1               COPY PLIST ADDRESS
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         LR    R4,R1
         LA    R5,@BUFFER-@DATA    NO NEED TO CLEAR BPAM BUFFER
         SLR   R15,R15             PROBABLY A NO-OP
         MVCL  R4,R14              CLEAR WORKING STORAGE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R9
         USING @DATA,R9
         SPACE 2
************************************************************
*                                                          *
*         INITIALIZE THE DCBS                              *
*                                                          *
************************************************************
         SPACE
         MVC   SYSUT1D(SYSUT1L),SYSUT1S
         MVC   SYSUT2D(SYSUT2L),SYSUT2S
         AIF   (NOT &ENVBIG).UT2OK
         L     R3,FLCCVT           POINT TO THE CVT
         USING CVT,R3
         CLI   CVTDCB,X'9B'        MVS/ESA OR LATER?
         BNE   UT2DCBOK            NO, CANNOT BE Z/OS
         TM    CVTOSLV6,X'80'      Z/OS VERSION 2 OR LATER?
         BNO   UT2DCBOK            NO
         DROP  R3                  CVT
         MVC   SYSUT2D(SYSUT2L),SYSUT2B
         MVC   UT2DCBED(UT2DCBEL),SYSUT2E
         LA    R0,UT2DCBED         GET ADDRESS OF DCBE
         ST    R0,SYSUT2D          SET INTO DCB
         OI    FLAGS2,BIG          FLAG 32-BIT NOTE/POINT VALUES
UT2DCBOK EQU   *
.UT2OK   ANOP
         MVC   DIRUT2D(DIRUT2L),DIRUT2S
         MVC   UT2DECBD(UT2DECBL),UT2DECBS
         L     R1,0(,R2)           POINT TO PARAMETER
         LH    R0,0(,R1)           GET ITS LENGTH
         CH    R0,=H'16'           EXACTLY 16 BYTES LONG?
         BNE   DDNSOKAY            NO
         USING IHADCB,R12
         LA    R12,SYSUT1D         POINT TO THE INPUT DCB
         MVC   DCBDDNAM,2(R1)      SET INPUT DDNAME
         LA    R12,SYSUT2D         POINT TO THE OUTPUT DCB
         MVC   DCBDDNAM,10(R1)     SET OUTPUT DDNAME
         LA    R12,DIRUT2D         POINT TO THE RESET DCB
         MVC   DCBDDNAM,10(R1)     SET OUTPUT DDNAME
DDNSOKAY EQU   *
         SPACE 2
************************************************************
*                                                          *
*         PERFORM SERIALIZATION                            *
*                                                          *
************************************************************
         SPACE
         LA    R12,DIRUT2D         POINT TO THE RESET DCB
         LA    R0,JFCB
         ST    R0,WORK+4
         MVI   WORK+4,128+X'07'    READ JFCB EXIT
         LA    R0,WORK+4
         STCM  R0,7,DCBEXLSA
         MVI   WORK,X'80'
         RDJFCB ((R12)),MF=(E,WORK)
         TM    JFCBIND2,JFCSHARE   SHARED DATA SET?
         BNO   SHAREOK             NO, EXCLUSIVE ACCESS IN OS IMAGE
         OI    FLAGS,SHRDSET       YES, FLAG THIS
SHAREOK  L     R4,PSATOLD          POINT TO THE CURRENT TCB
         L     R4,TCBTIO-TCB(,R4)  POINT TO THE TIOT
         USING TIOT1,R4
         LA    R4,TIOENTRY         POINT TO THE FIRST TIOT ENTRY
         DROP  R4                  (TIOT1)
         USING TIOENTRY,R4
         SLR   R5,R5               CLEAR FOR INSERT
DDNAMELP CLC   TIOEDDNM,DCBDDNAM   FOUND THE OUTPUT ENTRY?
         BE    GOTDDENT            YES
         ICM   R5,1,TIOELNGH       NO, GET THE ENTRY LENGTH
         BZ    ENQOKAY             MISSING DD - LET OPEN CATCH IT
         AR    R4,R5               POINT TO THE NEXT TIOT ENTRY
         B     DDNAMELP            GO CHECK IT
GOTDDENT ICM   R5,7,TIOEFSRT       POINT TO THE UCB
         BZ    ENQOKAY             CANNOT BE PERMANENT DASD DATA SET
         DROP  R4                  (TIOENTRY)
         CLI   18(R5),X'20'        VERIFY DASD DEVICE CLASS
         BNE   ENQOKAY             CANNOT BE PERMANENT DASD DATA SET
         ST    R5,$UCBADDR         SAVE DASD UCB ADDRESS
         TM    17(R5),X'20'        SHARED DASD?
         BNO   ENQORNOT            NO, NO NEED FOR HARDWARE RESERVE
         OI    FLAGS,SHRDASD       YES, FLAG THIS
         MVC   RESD,RESS           LOAD RESERVE TEMPLATE
         RESERVE (SYSIEWLP,JFCB,E,44,SYSTEMS),RET=NONE,UCB=$UCBADDR,   +
               MF=(E,RESD)
         B     ENQOKAY             RESERVE NOW PERFORMED
ENQORNOT TM    FLAGS,SHRDSET       SHARED DATA SET?
         BNO   ENQOKAY             NO, NO NEED FOR HARDWARE RESERVE
         MVC   ENQD,ENQS           LOAD ENQ TEMPLATE
         ENQ   (SYSIEWLP,JFCB,E,44,SYSTEM),RET=NONE,MF=(E,ENQD)
ENQOKAY  DS    0H                  SERIALIZATION NOW DONE
         SPACE 2
************************************************************
*                                                          *
*         EMPTY THE OUTPUT PDS                             *
*                                                          *
************************************************************
         SPACE
         AIF   (&ENVBIG).LOADMEM
         OI    JFCBTSDM,JFCNWRIT   DO NOT WRITE BACK JFCB
         MVI   WORK,X'80'
         OPEN  (DIRUT2D,INOUT),TYPE=J,MF=(E,WORK)
         SR    R5,R5               RESET DIRECTORY BLOCK COUNTER
         SPACE
COUNTDIR READ  UT2DECBD,SF,DIRUT2D,@BUFFER,'S',MF=E
         CHECK UT2DECBD            WAIT FOR THE READ
         LA    R5,1(,R5)           INCREMENT DIRECTORY BLOCK COUNT
         TM    FLAGS,IOERR         I/O ERROR?
         BO    EMPTYDIR            YES, GIVE UP
         TM    FLAGS,KEYHI         ALREADY READ A HIGH-VALUE KEY?
         BO    READHIGH            YES
         CLC   HIVALUES,@BUFFER    LAST USED DIRECTORY BLOCK?
         BNE   COUNTDIR            NO, GO READ THE NEXT ONE
         OI    FLAGS,KEYHI         YES, REMEMBER IT WAS READ
         B     COUNTDIR            GO READ THE NEXT ONE
READHIGH OI    FLAGS,SPARE         AT LEAST ONE SPARE BLOCK EXISTS
         B     COUNTDIR            GO READ THE NEXT ONE
         SPACE
ENDOFDIR TM    FLAGS,SPARE         ANY SPARE DIRECTORY BLOCKS?
         BO    *+8                 YES, VERY GOOD
         LA    R5,1(,R5)           NO, BETTER ADD ONE
         LA    R0,1
         ST    R0,WORK             SET TTR OF DIRECTORY START
         POINT DIRUT2D,WORK        POINT TO THE DIRECTORY START
         XC    @BUFFER+8(256),@BUFFER+8
         MVI   @BUFFER,X'FF'       SET UP THE FIRST DIRECTORY BLOCK
         MVC   @BUFFER+1(8-1+2+8),@BUFFER
         LA    R0,14               GET USED BLOCK DATA BYTE COUNT
         STH   R0,@BUFFER+8        SET INTO BLOCK DATA START
         WRITE UT2DECBD,SF,DIRUT2D,@BUFFER,'S',MF=E
         CHECK UT2DECBD            WAIT FOR THE WRITE
         TM    FLAGS,IOERR         I/O ERROR?
         BO    EMPTYDIR            YES, GIVE UP
         XC    @BUFFER(18),@BUFFER ZERO KEY AND DATA
         BCT   R5,WRITEDIR         NOW WRITE ZERO BLOCKS
         B     EMPTYDIR            ONLY ONE DIRECTORY BLOCK
WRITEDIR WRITE UT2DECBD,SF,DIRUT2D,@BUFFER,'S',MF=E
         CHECK UT2DECBD            WAIT FOR THE WRITE
         TM    FLAGS,IOERR         I/O ERROR?
         BO    EMPTYDIR            YES, GIVE UP
         BCT   R5,WRITEDIR         WRITE ORIGINAL NUMBER OF BLOCKS
         SPACE
EMPTYDIR MVI   WORK,X'80'
         CLOSE (DIRUT2D),MF=(E,WORK)
         TM    FLAGS,IOERR         ANY I/O ERRORS?
         BNO   LOADMEMS            NO, GO COMMENCE RELOAD
         LA    R1,SYNADMSG         YES
         LA    R0,L'SYNADMSG       REPORT IT
         TPUT  (1),(0),R
         ST    R5,RETCODE          SET RETCODE FROM DIR BLOCK COUNT
         B     DEQCHECK            SKIP RELOAD
         SPACE 2
************************************************************
*                                                          *
*         WRITE DIRECTORY END-OF-FILE MARKER               *
*                                                          *
************************************************************
         SPACE
.LOADMEM ANOP
LOADMEMS LA    R12,SYSUT2D         POINT TO THE OUTPUT DCB
         MVI   WORK,X'80'
         OPEN  (SYSUT2D,OUTPUT),MF=(E,WORK)
         MVC   MAXBLKSI,DCBBLKSI   REMEMBER MAXIMUM BLOCK SIZE
         AIF   (&ENVBIG).STOWI
         MVC   PDS2NAME,=CL8'.'    SUPPLY A DUMMY MEMBER NAME
         STOW  SYSUT2D,STOWENTY,A  WRITE AN END-OF-FILE MARKER
         LA    R10,9               SET ERROR NUMBER
         LTR   R15,R15             SUCCESSFUL STOW?
         BNZ   DATAEROR            NO, PDS NOT FORMATTED CORRECTLY
         STOW  SYSUT2D,STOWENTY,D  DELETE THE DUMMY MEMBER
         AGO   .DIRESET
.STOWI   ANOP
         STOW  SYSUT2D,0,I         RESET THE DIRECTORY TO EMPTY
.DIRESET ANOP
         LA    R10,10              SET ERROR NUMBER
         LTR   R15,R15             SUCCESSFUL STOW?
         BNZ   DATAEROR            NO, UNWORKABLE DIRECTORY
         SPACE 2
************************************************************
*                                                          *
*         ACQUIRE INPUT AND WRITE MEMBER CONTENTS          *
*                                                          *
************************************************************
         SPACE
         LA    R12,SYSUT1D         POINT TO THE INPUT DCB
         CLI   DCBDDNAM,0          DDNAME BEGINS WITH A NULL?
         BE    ALLDONE2            YES, PDS HAS NO MEMBERS TO RELOAD
         MVI   WORK,X'80'
         OPEN  (SYSUT1D,INPUT),MF=(E,WORK)
         LA    R12,SYSUT2D         POINT TO THE OUTPUT DCB
         SPACE
READLOOP EQU   *
         SLR   R3,R3               NOTHING TO PROCESS YET
         SLR   R10,R10             CLEAR ERROR NUMBER
         LA    R4,@BUFFER          RESET OUTPUT BUFFER CURSOR
DATALOOP EQU   *
         GET   SYSUT1D,INREC
         LA    R0,80               GET MAXIMUM DATA LENGTH IN RECORD
         LA    R5,INREC            POINT TO START OF POSSIBLE DATA
         LTR   R3,R3               CURRENTLY PROCESSING A RECORD?
         BP    COPYCARD            YES
         CLC   =C'./',INREC        CONTROL RECORD?
         BE    CNTLREC             YES
         TM    FLAGS,CALIAS        PROCESSING ALIAS?
         BO    NOSTOW              YES, MISSING STOW
         LA    R10,1               SET ERROR NUMBER
         TM    FLAGS,CADD+CSTOW    CURRENTLY PROCESSING A MEMBER?
         BNM   DATAEROR            NO, DATA FORMAT ERROR SO QUIT
         LA    R10,2               SET ERROR NUMBER
         ICM   R3,15,INREC         GET LENGTH OF NEW BLOCK
         BNP   DATAEROR            NONSENSICAL, SO QUIT
         LA    R10,3               SET ERROR NUMBER
         CH    R3,MAXBLKSI         GREATER THAN MAXIMUM?
         BH    DATAEROR            YES, SO QUIT
         STH   R3,DCBBLKSI         SET BLOCK LENGTH FOR ACCESS METHOD
         LA    R0,76               GET MAXIMUM DATA LENGTH IN RECORD
         LA    R5,INREC+4          POINT TO START OF POSSIBLE DATA
COPYCARD LR    R2,R3               NO, GET LENGTH OF THIS BLOCK
         CR    R2,R0               IS BLOCK WITHIN THIS CARD IMAGE?
         BNH   GOTDATLN            YES
         LR    R2,R0               NO, SO GET LENGTH WHICH IS
GOTDATLN SR    R3,R2               UPDATE BYTES TO GO FOR THIS BLOCK
         BCTR  R2,0                DECREMENT FOR EXECUTE
         EX    R2,PUTCHUNK         MOVE INPUT DATA TO OUTPUT BUFFER
         LA    R4,1(R2,R4)         ADJUST OUTPUT BUFFER CURSOR
         LTR   R3,R3               NEED MORE DATA FOR THIS BLOCK?
         BP    DATALOOP            YES, GO GET SOME
         TM    FLAGS2,CNTLST       NEED TO RECONSTRUCT NOTE LIST?
         BNO   WRITEBLK            NO
         NI    FLAGS2,255-CNTLST   YES, RESET FLAG
         LA    R4,@BUFFER          RESET OUTPUT BUFFER CURSOR
         LH    R3,DCBBLKSI         GET THE BLOCK SIZE
         SRL   R3,2                GET TTR COUNT
NOTELOOP LA    R1,TTR@             POINT TO CHAIN ORIGIN
         L     R0,0(,R4)           LOAD RELATIVE BLOCK NUMBER
LISTLOOP ICM   R1,15,0(R1)         GET NEXT CHAINED ELEMENT
         BZ    NOTENEXT            DID NOT HAVE THAT ONE
         BCT   R0,LISTLOOP         KEEP FOLLOWING THE CHAIN
         MVC   0(4,R4),4(R1)       REPLACE BLOCK NUMBER WITH TTR
NOTENEXT LA    R4,4(,R4)           POINT TO NEXT SLOT IN NOTE LIST
         BCT   R3,NOTELOOP         PROCESS NEXT ADDRESS IN LIST
WRITEBLK WRITE UT2DECBD,SF,SYSUT2D,@BUFFER,'S',MF=E
         CHECK UT2DECBD            WAIT FOR THE WRITE
         NOTE  SYSUT2D             GET THE WRITTEN BLOCK ADDRESS
         AIF   (NOT &ENVBIG).TTR0OK
         TM    FLAGS2,BIG          TTTR FORMAT?
         BNO   *+8                 NO, ALREADY HAVE TTR0
         SLL   R1,8                YES, CONVERT TTTR TO TTR0
.TTR0OK  ANOP
         ST    R1,TTRZ             SAVE IT FOR LATER
         TM    DCBRECFM,DCBRECU    ARE SEGMENT OVERLAY PROGRAMS LIKELY?
         BNO   READLOOP            NO, AVOID NOTE LIST CHAIN OVERHEAD
         LA    R3,TTR@             POINT TO CHAIN ORIGIN
CHAINLP1 ICM   R1,15,0(R3)         POINT TO NEXT CHAINED ELEMENT
         BZ    CHAINNEW            FOUND END OF CHAIN
         LR    R3,R1               POINT TO NEXT ELEMENT
         B     CHAINLP1            KEEP FOLLOWING CHAIN
CHAINNEW LA    R0,8                GET CHAINED ELEMENT SIZE
         GETMAIN R,LV=(0)          GET STORAGE FOR A NEW ELEMENT
         XC    0(4,R1),0(R1)       ZERO FORWARD POINTER FOR CHAIN END
         MVC   4(4,R1),TTRZ        LOAD TTR INTO CHAINED ELEMENT
         ST    R1,0(,R3)           ADD NEW ELEMENT TO THE CHAIN
         B     READLOOP            GO GET MORE INPUT
PUTCHUNK MVC   0(0,R4),0(R5)       <<< EXECUTED >>>
         SPACE 2
************************************************************
*                                                          *
*         PROCESS CONTROL STATEMENTS                       *
*                                                          *
************************************************************
         SPACE
CNTLREC  LA    R10,4               SET ERROR NUMBER
         CLI   INREC+2,C' '        DOES THE CONTROL STMT HAVE A LABEL?
         BNE   DATAEROR            YES, DATA FORMAT ERROR SO QUIT
         CLC   INREC+3(9),=C'ADD NAME='
         BE    CTLADD
         CLC   INREC+3(6),=C'ENDUP '
         BE    CTLENDUP
         LA    R10,1               SET ERROR NUMBER
         TM    FLAGS,CADD          CURRENTLY PROCESSING A MEMBER?
         BZ    DATAEROR            NO, DATA FORMAT ERROR SO QUIT
         CLC   INREC+3(10),=C'STOW DATA='
         BE    CTLSTOW
         TM    FLAGS,CALIAS        PROCESSING ALIAS?
         BO    NOSTOW              YES, MISSING STOW
         CLC   INREC+3(6),=C'NOTE1 '
         BE    CTLNOTE1
         CLC   INREC+3(6),=C'NOTE2 '
         BE    CTLNOTE2
         CLC   INREC+3(9),=C'NOTELIST '
         BE    CTLNOTEL
         CLC   INREC+3(11),=C'ALIAS NAME='
         BE    CTLALIAS
         LA    R10,5               SET ERROR NUMBER
         B     DATAEROR            UNKNOWN CONTROL STATEMENT SO QUIT
         SPACE
CTLADD   MVC   PDS2NAME,INREC+12   COPY MEMBER NAME
         OI    FLAGS,CADD          ./ ADD PROCESSED
         NI    FLAGS,255-CSTOW     NEED A STOW TO FINISH NEW MEMBER
         NI    FLAGS2,255-CNTLST   NOTELIST NOT RECEIVED YET
         BAS   R3,FREETTRS         FREE THE TTR CHAIN
         MVI   TTR1+3,X'FF'        FLAG TTR1 NOT YET SET
         MVI   TTR2+3,X'FF'        FLAG TTR2 NOT YET SET
         B     READLOOP
         SPACE
CTLNOTE1 MVC   TTR1,TTRZ           COPY NOTE DATA FOR DIRECTORY ENTRY
         MVI   TTR1+3,0            FLAG TTR1 SET
         B     READLOOP
         SPACE
CTLNOTE2 MVC   TTR2,TTRZ           COPY NOTE DATA FOR DIRECTORY ENTRY
         MVI   TTR2+3,0            FLAG TTR2 SET
         B     READLOOP
         SPACE
CTLNOTEL OI    FLAGS2,CNTLST       NEED TTR CONVERSION FOR THIS BLOCK
         B     READLOOP
         SPACE
CTLSTOW  MVC   PDS2INDC(63),INREC+13
         TM    PDS2INDC,PDS2NTTR   ANY NOTED TTRS TO SUPPLY?
         BZ    NOTESOK             NO
         LA    R10,6               SET ERROR NUMBER
         CLI   TTR1+3,0            FIRST NOTED TTR SET?
         BNE   DATAEROR            NO, MISSING STATEMENT SO QUIT
         MVC   PDS2TTRT,TTR1       COPY FIRST NOTED TTR
         CLI   TTR2+3,0            SECOND NOTED TTR SET?
         BNE   NOTESOK             NO
         MVC   PDS2TTRN,TTR2       COPY SECOND NOTED TTR
NOTESOK  NI    FLAGS,255-CALIAS
         OI    FLAGS,CSTOW         ./ STOW PROCESSED
         STOW  SYSUT2D,STOWENTY,R
         LTR   R15,R15             WAS THE MEMBER REPLACED?
         BZ    STOWGOOD            YES, CONTINUE
         CH    R15,=H'8'           WAS THE MEMBER ADDED?
         BE    STOWGOOD            YES, CONTINUE
         LA    R10,7               SET ERROR NUMBER
         B     DATAEROR
         SPACE
STOWGOOD LA    R0,1
         A     R0,MEMCOUNT         INCREMENT MEMBER COUNT
         ST    R0,MEMCOUNT
         CLI   MEMCOUNT+3,0        TIME FOR A PROGRESS MESSAGE?
         BNE   READLOOP            NO, KEEP PROCESSING
         MVC   STATAREA,STATSTAT   YES, LOAD THE MESSAGE TEMPLATE
         CVD   R0,WORK
         ED    STATAREA+COUNTOFF(10),WORK+4
         LA    R1,STATAREA         POINT TO THE MESSAGE TO SHOW
         LA    R0,X'03'            GET TPUT FULLSCR FLAGS
         SLL   R0,24               PROMOTE TO HIGH BYTE
         OR    R1,R0               GATE INTO RELEVANT REGISTER
         LA    R0,STATMSGL         GET THE STATUS MESSAGE LENGTH
         TPUT  (1),(0),R           SHOW MEMBER COUNT IF UNDER TSO
         B     READLOOP            KEEP PROCESSING
         SPACE
CTLALIAS MVC   PDS2NAME,INREC+14   COPY ALIAS MEMBER NAME
         LA    R10,8               SET ERROR NUMBER
         TM    FLAGS,CADD+CSTOW    FINISHED WITH CURRENT MEMBER?
         BNO   DATAEROR            NO, CAN'T PROCESS ALIAS YET
         NI    FLAGS,255-CSTOW     NEED A STOW TO FINISH ALIAS
         OI    FLAGS,CALIAS        ./ ALIAS PROCESSED
         B     READLOOP
         SPACE
CTLENDUP TM    FLAGS,CADD+CSTOW    FINISHED WITH CURRENT MEMBER?
         BO    ALLDONE             YES, ALL DONE
NOSTOW   LA    R10,8               SET ERROR NUMBER
         SPACE 2
************************************************************
*                                                          *
*         HANDLE ERROR CONDITIONS                          *
*                                                          *
************************************************************
         SPACE
DATAEROR LR    R1,R10              COPY ERROR NUMBER
         BCTR  R1,0                CONVERT TO INDEX NUMBER
         SLL   R1,6                MULTIPLY BY 64 FOR INDEX
         LA    R1,ERRMSGS(R1)      POINT TO ERROR MESSAGE
         MVC   WTOD,WTOS           LOAD WTO TEMPLATE
         MVC   WTOD+4+10(64),0(R1) LOAD MESSAGE TEXT
         WTO   MF=(E,WTOD)         ISSUE ERROR MESSAGE
         LA    R10,2000(,R10)      GET PROGRAM RETURN CODE
         ST    R10,RETCODE         SAVE FOR TERMINATION
         SPACE 2
************************************************************
*                                                          *
*         CLOSE THE DCBS                                   *
*                                                          *
************************************************************
         SPACE
ALLDONE  MVI   WORK,X'80'
         CLOSE (SYSUT1D),MF=(E,WORK)
ALLDONE2 MVI   WORK,X'80'
         CLOSE (SYSUT2D),MF=(E,WORK)
         SPACE 2
************************************************************
*                                                          *
*         TERMINATE SERIALIZATION                          *
*                                                          *
************************************************************
         SPACE
DEQCHECK TM    FLAGS,SHRDASD       NEED A HARDWARE RELEASE?
         BNO   DEQENQ              NO
         DEQ   (SYSIEWLP,JFCB,44,SYSTEMS),RET=NONE,UCB=$UCBADDR,       +
               MF=(E,DQRD)
         B     DEQOKAY
DEQENQ   TM    FLAGS,SHRDSET       ANYTHING TO DEQ?
         BNO   DEQOKAY             NO
         MVC   DQED,DQES           LOAD DEQ TEMPLATE
         DEQ   (SYSIEWLP,JFCB,44,SYSTEM),RET=NONE,MF=(E,DQED)
DEQOKAY  DS    0H
         SPACE 2
************************************************************
*                                                          *
*         TERMINATE                                        *
*                                                          *
************************************************************
         SPACE
         L     R2,RETCODE
         DROP  R12                 (IHADCB)
         BAS   R3,FREETTRS         FREE THE TTR CHAIN
         LR    R1,R13
         L     R13,4(,R13)
         L     R0,@SIZE
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2
         L     R14,12(,R13)
         LM    R0,R12,20(R13)
         BR    R14
         SPACE 2
************************************************************
*                                                          *
*         FREE THE TTR NOTE LIST CHAIN                     *
*                                                          *
************************************************************
         SPACE
FREETTRS ICM   R1,15,TTR@          POINT TO THE FIRST ELEMENT
         BZR   R3                  NO ELEMENTS LEFT
         MVC   TTR@,0(R1)          SAVE THE FORWARD POINTER
         LA    R0,8                GET CHAINED ELEMENT SIZE
         FREEMAIN R,LV=(0),A=(1)   FREE THE ELEMENT
         B     FREETTRS
         SPACE 2
************************************************************
*                                                          *
*         DCB OPEN EXIT                                    *
*                                                          *
************************************************************
         SPACE
         USING IHADCB,R1
UT2OPNX  TM    DCBRECFM,DCBRECU    RECFM=U?
         BMR   R14                 NO, DO NOTHING HERE
         XC    DCBLRECL,DCBLRECL   YES, SET LRECL TO ZERO
         BR    R14                 RETURN
         DROP  R1                  (IHADCB)
         SPACE 2
************************************************************
*                                                          *
*         DCB SYNAD EXIT                                   *
*                                                          *
************************************************************
         SPACE
UT2SYNAD OI    FLAGS,IOERR         FLAG I/O ERROR
         SYNADAF ACSMETH=BSAM
         MVC   SYNADMSG,50(R1)
         SYNADRLS
         BR    R14
         DROP  R9                  (@DATA)
         TITLE '  R E V L P D S   -   C O N S T A N T S  '
SYSUT2XL DC    0F'0',X'85',AL3(UT2OPNX)
         SPACE
RESS     RESERVE (SYSIEWLP,0,E,44,SYSTEMS),RET=NONE,UCB=0,MF=L
RESL     EQU   *-RESS
ENQS     ENQ   (SYSIEWLP,0,E,44,SYSTEM),RET=NONE,MF=L
ENQL     EQU   *-ENQS
DQRS     DEQ   (SYSIEWLP,0,44,SYSTEMS),RET=NONE,UCB=0,MF=L
DQRL     EQU   *-DQRS
DQES     DEQ   (SYSIEWLP,0,44,SYSTEM),RET=NONE,MF=L
DQEL     EQU   *-DQES
         SPACE
         PRINT NOGEN
         SPACE
SYSUT1S  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GM),RECFM=FB,LRECL=80,    +
               EODAD=CTLENDUP
SYSUT1L  EQU   *-SYSUT1S
         SPACE
SYSUT2S  DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=(W),EXLST=SYSUT2XL
SYSUT2L  EQU   *-SYSUT2S
         SPACE
         AIF   (NOT &ENVBIG).DCBLOK
SYSUT2B  DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=(W),EXLST=SYSUT2XL,        +
               DCBE=2
SYSUT2E  DCBE  BLOCKTOKENSIZE=LARGE
ENDOFDIR EQU   1                   PHONY DIRUT2 EODAD ADDRESS
UT2DCBEL EQU   *-SYSUT2E
.DCBLOK  ANOP
         SPACE
DIRUT2S  DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(RP,WP),EODAD=ENDOFDIR,    +
               KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256,SYNAD=UT2SYNAD,  +
               EXLST=SYSUT2XL
DIRUT2L  EQU   *-DIRUT2S
         SPACE
         WRITE UT2DECBS,SF,MF=L
UT2DECBL EQU   *-UT2DECBS
         SPACE
WTOS     WTO   'REVLPDS - 123456789012345678901234567890123456789012345+
               6789012345678901234',ROUTCDE=11,MF=L
WTOL     EQU   *-WTOS
         DS    0D
SYSIEWLP DC    CL8'SYSIEWLP'
HIVALUES DC    XL8'FFFFFFFFFFFFFFFF'
         LTORG
         SPACE
ERRMSGS  DS    0D
         DC    CL64'DATA FORMAT ERROR - MISSING ./ ADD CONTROL STATEMEN+
               T            '
         DC    CL64'DATA FORMAT ERROR - NON-POSITIVE LENGTH INDICATOR E+
               NCOUNTERED   '
         DC    CL64'DATA FORMAT ERROR - LENGTH INDICATOR VALUE LARGER T+
               HAN BLKSIZE  '
         DC    CL64'DATA FORMAT ERROR - CONTROL STATEMENT FOUND TO HAVE+
                A LABEL     '
         DC    CL64'DATA FORMAT ERROR - UNRECOGNISED CONTROL STATEMENT +
                            '
         DC    CL64'DATA FORMAT ERROR - MISSING ./ NOTE1 CONTROL STATEM+
               ENT          '
         DC    CL64'STOW ERROR - CHECK DIRECTORY CAPACITY              +
                            '
         DC    CL64'DATA FORMAT ERROR - MISSING ./ STOW CONTROL STATEME+
               NT           '
         DC    CL64'INITIAL STOW FAILURE                               +
                            '
         DC    CL64'MEMBER DELETE FAILURE                              +
                            '
         SPACE
STATSTAT DC    X'401140401DF8'     NULL-WCC,SBA,(1,1),SF,PROHIS
COUNTOFF EQU   *-STATSTAT          OFFSET OF COUNT DISPLAY FIELD
         DC    X'40206B2020206B202120'
         DC    C' MEMBERS RELOADED '
STATMSGL EQU   *-STATSTAT          LENGTH OF MESSAGE TO TPUT
         SPACE
         DS    0D
         DC    CL16' END OF REVLPDS '
         DS    0D                  END OF CSECT
         TITLE '  R E V L P D S   -   D S E C T S  '
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
WORK     DS    D
INREC    DS    CL80
SYSUT1D  DS    0F,XL(SYSUT1L)
SYSUT2D  DS    0F,XL(SYSUT2L)
         AIF   (NOT &ENVBIG).DCBEOK
UT2DCBED DS    0F,XL(UT2DCBEL)
.DCBEOK  ANOP
DIRUT2D  DS    0F,XL(DIRUT2L)
UT2DECBD DS    0F,XL(UT2DECBL)
$UCBADDR DS    A                   UCB ADDRESS OF OUTPUT DEVICE
TTR@     DS    A                   TTR ELEMENT CHAIN ORIGIN
MEMSEL   DS    CL8
SYNADFLG DS    H
SYNADMSG DS    CL78                I/O ERROR MESSAGE
STOWENTY DS    CL80
         ORG   STOWENTY
         IHAPDS PDSBLDL=NO,DSECT=NO
         ORG
TTRZ     DS    F                   NOTE SAVE AREAS
TTR1     DS    F
TTR2     DS    F
RETCODE  DS    F
MEMCOUNT DS    F                   COUNT OF RELOADED MEMBERS
MAXBLKSI DS    H
FLAGS    DS    X
CADD     EQU   X'80'               PROCESSED ./ ADD CONTROL STMT
CSTOW    EQU   X'40'               PROCESSED ./ STOW CONTROL STMT
CALIAS   EQU   X'20'               PROCESSED ./ ALIAS CONTROL STMT
KEYHI    EQU   X'10'               KEY OF HIGH VALUES ENCOUNTERED
SPARE    EQU   X'08'               BLOCK AFTER KEYHI BLOCK WAS READ
IOERR    EQU   X'04'               I/O ERROR - SYNAD EXIT TAKEN
SHRDASD  EQU   X'02'               OUTPUT DASD IS SHARED
SHRDSET  EQU   X'01'               OUTPUT DISP=SHR
FLAGS2   DS    X
BIG      EQU   X'80'               USING 32-BIT NOTE/POINT VALUES
CNTLST   EQU   X'40'               PROCESSED ./ NOTELIST CONTROL STMT
ENQDEQWA DS    0F                  RESERVE/ENQ/DEQ PARAMETER LIST
RESD     DS    XL(RESL)
         ORG   ENQDEQWA
ENQD     DS    XL(ENQL)
         ORG   ENQDEQWA
DQRD     DS    XL(DQRL)
         ORG   ENQDEQWA
DQED     DS    XL(DQEL)
         ORG
WTOD     DS    XL(WTOL)
STATAREA DS    XL(STATMSGL)        STATUS MESSAGE BUILD AREA
JFCB     DS    0D
         IEFJFCBN LIST=NO
@BUFFER  DS    0D                  BPAM WRITE BUFFER ADDRESS
$BUFLEN  EQU   32760               BPAM WRITE BUFFER LENGTH
$DATAL   EQU   @BUFFER-@DATA+$BUFLEN
         SPACE
         DCBD  DSORG=PO,DEVD=DA
         SPACE
         IHAPSA DSECT=YES
         SPACE
         AIF   (NOT &ENVBIG).CVTOK
         CVT   DSECT=YES
.CVTOK   ANOP
         SPACE
         IKJTCB DSECT=YES,LIST=NO
         SPACE
MYTIOT   DSECT
         IEFTIOT1
         SPACE 2
         END   REVLPDS
