         TITLE '  R E V M E N U  '
**********************************************************************
*
*        CONTROL SECTIONS IN THIS SOURCE FILE:
*
*         REVMENU - DISPLAY RFE MENUS AND PROCESS SELECTIONS.
*         REVPROF - READ AND WRITE PROFILE MEMBERS.
*
**********************************************************************
         SPACE
**********************************************************************
*
*  R43.0  08MAR10 - SHIP 'RFE'.
*  R45.0  30MAR14 - SUPPORT PRIMARY OPTIONS WHICH ARE ALSO MENUS.
*                 - REMOVE $$REVIEW SPECIAL CASE LOGIC FROM REVPROF.
*         30APR14 - ADD OPTIONS '1' AND '2'.  REMOVE OPTIONS 'D' AND
*                   'O' TO OPTION '3' ('3.4' AND '3.8' RESPECTIVELY).
*                   REMOVE OPTION 'T' ALIAS OF OPTION '6'.
*         01JUN14 - ADD OPTION '3.1'.
*         29JUN14 - ADD OPTION '3.2'.
*  R45.1  27AUG14 - EXPAND DATA SET HISTORY FROM 10 TO 16.
*                 - FIX DISPLAY CORRUPTION ON 24-LINE SCREEN.
*         03NOV14 - ADD OPTION '3.3'.
*  R45.2  16NOV14 - ADD OPTION '3.5'.
*  R45.4  07JAN15 - ADD MEMBER-REPLACE AND DISP=MOD SETTINGS TO 3.3.
*  R45.6  09JAN15 - FIX RECURSION VECTOR CORRUPTION AFTER DSELFROM.
*  R45.7  18JAN15 - ADD 'C' AND 'M' SELECTIONS FOR OPTION '3.3'.
*                 - PREVENT COPY OF DATA SET TO ITSELF.
*         07FEB15 - IMPROVE DATA SET NAME RECALL CURSOR HANDLING.
*  R46.2  21JAN16 - DO NOT CHECK FOR REVPROF MEMBER UNDER MVS/370.
*  R46.5  24APR16 - FIX EDIT RECOVERY AFTER PREVIOUS CHANGE.
*         01MAY16 - FIX SHORT PROFILE MEMBER INDICATION.
*         09MAY16 - POSITION CURSOR TO COMMAND'S BAD OPERAND.
*  R46.8  05FEB17 - OFFICIALLY ADOPT YELLOW AS PLOT BORDER COLOUR.
*  R47.0  14FEB17 - NAME THE LOGICAL SESSION DURING INITIALIZATION.
*         20FEB17 - RETAIN OPTION '3.3' COMMAND WITH CURSOR SELECTION.
*  R47.1  06MAR17 - ENSURE STATUS2 TIDIED UP.
*  R47.5  12OCT17 - OPTION '1' STORAGE BROWSE IF DSNAME IS 'ACTIVE'.
*  R47.8  21NOV17 - CENTRE GRAPHICS DISPLAYS FOR WIDE SCREEN.
*                 - FLUSH COMMAND RECALL WHEN CALLING REVTSO.
*                 - PLOT REAL STORAGE ON LARGE SCREEN IF NO GRAPHICS.
*  R47.9  06DEC17 - SUPPORT 8-BYTE TSO USERID AND/OR PREFIX.
*  R48.0  02JAN18 - USE DISP=SHR FOR EDIT RECOVERY OF PDS MEMBER.
*         13JAN18 - ALLOW OPTION 3.3 COPY OF MEMBER WITHIN A PDS.
*  R48.2  25MAR18 - CHANGE CSECT STATEMENTS TO RSECT STATEMENTS.
*  R48.3  17AUG18 - DISABLE OPTION '6' UNDER ISPF.
*  R48.4  09SEP18 - SUPPORT MEMBER NAME MASKING PATTERN.
*         12SEP18 - FIX BAD DSNAME AND VOLUME CURSOR PLACEMENT.
*         17SEP18 - MAKE HISTORICAL DATA SETS TAB-SELECTABLE.
*  R49.0  30MAR19 - ADD AMODE SWITCHING FOR MVS/XA-LIKE SYSTEMS.
*         20APR19 - DYNAMICALLY UPDATE MVS/370 RESOURCE DISPLAYS.
*  R49.2  17AUG19 - ADD AVAILABLE FRAME COUNT TO A 370 DISPLAY.
*  R50.0  04JAN21 - DISPENSE WITH 'REVPROF' DD, ALWAYS USE 'ISPPROF'.
*         02APR21 - USE ISPF SCREEN NUMBER IF PRESENT FOR RECOVERY.
*
**********************************************************************
         EJECT
**********************************************************************
*                                                          *         *
*         DISPLAY REVIEW FRONT END MENU HIERARCHY          *  R43.0  *
*                                                          * DEC2009 *
**********************************************************************
         SPACE
**********************************************************************
*                                                                    *
*        THIS ROUTINE DISPLAYS THE RFE MAIN MENU AND PROCESSES       *
*        THE "OPTION" SELECTION.  MENU SUB-OPTIONS ARE ALSO          *
*        DISPLAYED BY THIS ROUTINE.                                  *
*                                                                    *
**********************************************************************
         SPACE
**********************************************************************
*                                                                    *
* REGISTERS ON ENTRY: R9 -> @DATA                                    *
*                     R13-> SAVE AREA                                *
*                     R14-> RETURN ADDRESS                           *
*                     R15-> REVMENU                                  *
*                                                                    *
* DURING PROCESSING:  R13-> @MENUWK  (LOCAL GETMAINED AREA)          *
*                                                                    *
* RETURN CODES:       R15 = 0  PROCESSING COMPLETE                   *
*                                                                    *
**********************************************************************
         EJECT
REVMENU  RSECT
REVMENU  AMODE 31
         B     @MENU-*(,R15)
@MENULBL EQU   *+1,7
         DC    AL1(7),CL7'REVMENU'
$P_HD#   EQU   10                  PROFILE FIXED HEADER RECORD COUNT
$P_DS#   EQU   16                  PROFILE DSN HISTORY RECORD COUNT
@MENU    STM   R14,R12,12(R13)
         LR    R11,R15             SET BASE
         LA    R8,1
         LA    R10,4095(R8,R11)
         LA    R8,4095(R8,R10)
         USING REVMENU,R11,R10,R8
         LA    R0,@MENUWKL
         MVI   GETMNTRC,30         TRACK GETMAIN IN CASE OF FAILURE
         GETMAIN R,LV=(0)          GET LOCAL WORKING STORAGE
         LA    R15,@MENUWKL
         LR    R14,R1
         SR    R3,R3
         MVCL  R14,R2              CLEAR WORKING STORAGE
         ST    R1,8(,R13)          CHAIN SAVE AREAS
         ST    R13,4(,R1)
         LR    R13,R1              POINT TO GETMAINED AREA
         USING @MENUWK,R13
         MVC   @MENUMK,@MENULBL    MARK USE OF THIS STORAGE AREA
         UNPK  @MENUMK+6(3),RECURS#+3(2)
         TR    @MENUMK+6(2),MENUHEX-240
         MVI   @MENUMK+8,0
         MVI   MENFLGS,$MFPRIM     START WITH PRIMARY OPTION MENU
         SPACE
************************************************************
*                                                          *
*         PROCESS INITIAL OPTION SPECIFICATION             *
*                                                          *
************************************************************
         SPACE
         L     R1,REVECT           NO, POINT TO THE TSO ECT
         USING ECT,R1
         TM    ECTSWS,ECTNOPD      ANY OPERANDS?
         BO    REMENU              NO, SO GO SHOW MENU
         DROP  R1                  ECT
         L     R1,REVCBUF          YES, POINT TO THE COMMAND BUFFER
         LH    R15,2(,R1)          GET PARSED LENGTH
         LA    R15,4(,R15)         GET OPERAND OFFSET
         LA    R14,0(R15,R1)       POINT TO OPERAND
         SH    R15,0(,R1)          SUBTRACT TOTAL BUFFER LENGTH
         BZ    REMENU              IF ZERO UNPARSED THEN NO OPERAND
         LPR   R15,R15             CONVERT PARSED-TOTAL TO TOTAL-PARSED
         LA    R0,64               GET LENGTH LIMIT
         CR    R15,R0              LENGTH A BIT LONG?
         BNH   *+6                 NO
         LR    R15,R0              YES, REDUCE TO LIMIT
         STM   R14,R15,MENSTK@     SAVE FOR MAIN MENU PROCESSING
         B     REMENU              GO EXTRACT FIRST/ONLY STACKED OPTION
         SPACE
************************************************************
*                                                          *
*         BUILD MENU                                       *
*                                                          *
************************************************************
         SPACE
MENTITLD MVC   0(0,R1),1(R14)      <<< EXECUTED >>>
MENLDOPT MVC   0(0,R14),1(R15)     <<< EXECUTED >>>
         SPACE
MENNOSTG MVI   MSG,123             REQUEST ABORTED - STORAGE FULL
CAN2MAIN NI    STATUS,255-STPROF   TURN OFF PROFILE REWRITE FLAG
END2MAIN OI    MENFLGS,$MFPRIM     EXIT TO MAIN MENU
REMENU   BAS   R14,MENUINIT        RESET SOME GLOBAL VARIABLES
         L     R15,=A(REVNAME)
         BASR  R14,R15             ATTEMPT TO NAME THE SESSION
         SPACE
         TM    MENFLGS,$MFPRIM     SHOWING PRIMARY OPTION MENU?
         BNO   MMSTK0              NO, DO NOT PROCESS STACKED OPTIONS
         LM    R14,R15,MENSTK@     GET STACKED OPTIONS DETAILS
         LTR   R15,R15             ANYTHING STACKED?
         BNP   MMSTK0              NO, PROCEED
         XC    CMDAREA,CMDAREA     CLEAR TARGET AREA
         LA    R1,CMDAREA          POINT TO TARGET
MMSTKLP1 CLI   0(R14),C';'         NULL STACK ELEMENT?
         BE    MMSTKSC             YES
         CLI   0(R14),C' '         LEADING BLANK?
         BH    MMSTKCPY            NO
         LA    R14,1(R14)          YES, POINT PAST BLANK
         BCT   R15,MMSTKLP1        DECREMENT REMAINING LENGTH
         B     MMSTKX              END OF STACKED DATA REACHED
MMSTKLP2 CLI   0(R14),C';'         REACHED END OF STACK ELEMENT?
         BE    MMSTKSC             YES
MMSTKCPY MVC   0(1,R1),0(R14)      NO, COPY STACKED CHARACTER
         LA    R1,1(,R1)           ADJUST TARGET POINTER
         LA    R14,1(,R14)         ADJUST SOURCE POINTER
         BCT   R15,MMSTKLP2        DECREMENT REMAINING LENGTH
         B     MMSTKX              END OF STACKED DATA REACHED
MMSTKSC  LA    R14,1(R14)          POINT PAST SEMICOLON
         BCTR  R15,0               DECREMENT REMAINING LENGTH
MMSTKX   STM   R14,R15,MENSTK@     SAVE FOR MAIN MENU PROCESSING
         LA    R0,CMDAREA          POINT TO TARGET
         SR    R1,R0               GET EXTRACTED CHARACTER COUNT
         BNP   MMSTK0              NO OPTION SELECTION EXTRACTED
         ST    R0,OPD0             SET OPTION SELECTION ADDRESS
         STH   R1,OPD0+4           SET OPTION SELECTION LENGTH
         MVI   OPD0+6,PRESENT
         L     R6,=A(KAPS)
         TR    CMDAREA,0(R6)       UPPER CASE IT AND BLANK NULLS
         B     MENUOPT             GO PROCESS SELECTION
         SPACE
MMSTK0   NI    STATUS4,255-$4REFR  RESET REFRESH FLAG
         NI    STATUS10,255-$10CAP SET CAPS OFF
         MVI   HDCOLOR,X'85'       TURQUOISE BLANKS AND NO SCROLL FIELD
         L     R15,=A(REVHEAD)     POINT TO HEADING ROUTINE
         BASR  R14,R15             INITIALISE FIRST TWO SCREEN LINES
*        OI    STATUS10,$10CAP     SET CAPS ON
         L     R4,SCREENBF         POINT TO PRIMARY SCREEN BUFFER
         L     R3,SHADOWBF         POINT TO THE SHADOW BUFFER
         L     R1,SCRNCOLS         GET SCREEN WIDTH
         SRA   R1,1                HALVE IT
         L     R14,MENTIT@         POINT TO MENU TITLE
         SR    R15,R15             CLEAR FOR INSERT
         IC    R15,0(,R14)         GET ITS LENGTH
         LR    R0,R15              COPY ITS LENGTH
         SRA   R0,1                HALVE IT
         BCTR  R15,0               DECREMENT LENGTH FOR EXECUTE
         SR    R1,R0
         AR    R1,R4
         EX    R15,MENTITLD        LOAD MENU TITLE
         SPACE
*  LINE 5 AND ONWARDS
         L     R15,SCRNCOLS
         LR    R14,R15
         LA    R0,80
         SR    R14,R0
         SRA   R14,1
         AR    R15,R15             DOUBLE THE SCREEN WIDTH
         AR    R15,R15             QUADRUPLE IT
         LA    R4,0(R14,R15)       GET FIRST MENU LIST LINE OFFSET
         LA    R3,0(R14,R15)       GET FIRST MENU LIST LINE OFFSET
         AL    R4,SCREENBF         POINT TO FIRST MENU SCREEN LINE
         AL    R3,SHADOWBF         POINT TO FIRST MENU SHADOW LINE
         L     R0,SCRNCOLS
         AR    R0,R0               DOUBLE THE SCREEN WIDTH
         TM    MENFLGS,$MFDSEL     MAKING DATA SET ENTRY PANEL?
         BO    DSELPANL            YES, NO MENU OPTIONS TO LOAD
         L     R15,MENOPT@         POINT TO OPTION TABLE
         SR    R1,R1               CLEAR FOR INSERT
         SPACE
MENUOPLP MVI   0(R4),FLDOUTHI      HIGH INTENSITY FOR OPTION NAME
         MVI   0(R3),X'07'         WHITE FOR OPTION NAME
         MVC   1(4,R3),0(R3)
         LA    R14,4(,R4)          POINT TO LAST OPTION NAME BYTE POSI
         IC    R1,0(,R15)          GET OPTION NAME LENGTH CODE
         SR    R14,R1              ADJUST TO RIGHT-JUSTIFY NAME
         EX    R1,MENLDOPT         LOAD OPTION NAME
         MVI   5(R4),FLDOUTLO      LOW INTENSITY FOR DESCRIPTION
*        MVI   5(R3),X'05'         TURQUOISE FOR DESCRIPTION
*        MVC   6(74,R3),5(R3)      (ALREADY DONE)
         LA    R15,1+1(R1,R15)     POINT TO OPTION DESCRIPTION
         LA    R14,7(,R4)          POINT TO DESCRIPTION POSI
         IC    R1,0(,R15)          GET DESCRIPTION LENGTH CODE
         EX    R1,MENLDOPT         LOAD THE DESCRIPTION
         AR    R4,R0               POINT TO NEXT OPTION LIST LINE
         AR    R3,R0
         LA    R15,1+1(R1,R15)     POINT TO NEXT OPTION TABLE ENTRY
         CLI   0(R15),X'FF'        END OF TABLE?
         BNE   MENUOPLP            NO, GO SHOW NEXT OPTION
         TM    MENFLGS,$MFPRIM     SHOWING PRIMARY OPTION MENU?
         BNO   MENUSHOW            NO, MENU NOW READY TO SHOW
         SPACE
************************************************************
*                                                          *
*         DATA ITEMS ON RIGHT OF SCREEN                    *
*                                                          *
************************************************************
         SPACE
*  PREPARE RIGHT SIDE DATA ITEMS
         LA    R14,MAINRDAT        POINT TO DATA ITEM TABLE
         LA    R15,MAINR#*10       GET ITS SIZE
         LA    R1,C' '             GET PAD CHARACTER
         SLL   R1,24               PROMOTE PAD AND ZERO LENGTH
         MVCL  R14,R0              BLANK OUT DATA ITEMS
         LR    R15,R0              GET SCREEN WIDTH
         LR    R14,R0              GET SCREEN WIDTH
*  USERID
         L     R1,REVPSCB
         USING PSCB,R1
         MVC   MAINRDAT(7),PSCBUSER
         CLI   PSCBUSER,C'>'       8-CHARACTER USERID?
         BNE   *+10                NO, NOT '>7BYTES'
         MVC   MAINRDAT(8),PSCB+84 YES, LOAD PSCBUID8
         DROP  R1                  PSCB
*  SYSTEM
         L     R1,CVTPTR(,0)
         L     R1,CVTSMCA-CVT(,R1)
         MVC   MAINRDAT+10(4),16(R1)
*  TERMINAL
         MVC   MAINRDAT+20(8),$TERMID
*  NETWORK
         MVC   MAINRDAT+30(8),$NETWRK
*  RELEASE
         MVC   MAINRDAT+40(8),MENUREL
*  DAY AND DATE AND TIME
         TIME  DEC
         STM   R0,R1,DOUBLE
         UNPK  MAINRDAT+57(3),DOUBLE+6(2)
         UNPK  MAINRDAT+70(3),DOUBLE(2)
         MVI   MAINRDAT+72,C':'
         UNPK  MAINRDAT+73(3),DOUBLE+1(2)
         MVI   MAINRDAT+75,C' '
         AP    DOUBLE+4(4),=P'1900000'
         OI    DOUBLE+7,X'0F'
         UNPK  MAINRDAT+60(5),DOUBLE+4(3)
         L     R4,DOUBLE+4
         L     R15,=A(IDRDATE)
         BASR  R14,R15
         MVC   MAINRDAT+62(8),DOUBLE
         PACK  DOUBLE,MAINRDAT+60(2)
         CVB   R3,DOUBLE           GET CENTURY
         PACK  DOUBLE,MAINRDAT+62(2)
         CVB   R2,DOUBLE           GET YEAR OF CENTURY
         PACK  DOUBLE,MAINRDAT+65(2)
         CVB   R1,DOUBLE           GET MONTH OF YEAR
         PACK  DOUBLE,MAINRDAT+68(2)
         CVB   R7,DOUBLE           GET DAY OF MONTH
*                                  BEGIN ZELLER'S CONGRUENCE
         SH    R1,=H'2'            GET STATUS OF TWO MONTHS AGO
         BP    YEAROKAY            MONTH-2 > 0
         AH    R1,=H'12'           MAKE MONTH POSITIVE
         BCTR  R2,0                DECREMENT YEAR
         LTR   R2,R2
         BNM   YEAROKAY            YEAR NOT NEGATIVE
         LA    R2,99               MAKE YEAR POSITIVE
         BCTR  R3,0                DECREMENT CENTURY
YEAROKAY EQU   *                   NOW HAVE "TWO MONTHS AGO" STATUS
         M     R0,=F'26'
         BCTR  R1,0
         BCTR  R1,0
         D     R0,=F'10'           R1 = ((MM*26)-2)/10
         AR    R7,R2
         SRL   R2,2                R2 = YY/4
         LR    R4,R3
         SRL   R3,2                R3 = CC/4
         SLL   R4,1                R4 = CC*2
         AR    R7,R1
         AR    R7,R2
         AR    R7,R3
         SR    R7,R4
         SLR   R6,R6
         LR    R1,R7               COPY NUMERATOR
         LPR   R7,R7               AVOID NEGATIVE DIVIDE RESULTS
         LA    R15,7               GET DENOMINATOR
         DR    R6,R15
         LTR   R1,R1               NEGATIVE NUMERATOR?
         BNM   MODULOOK            NO, SO MOD(X,7)=REM(X/7)
         SR    R15,R6              YES, ADJUST SO THAT RESULT
         LR    R6,R15                   OF MOD(_,_) IS NOT NEGATIVE
MODULOOK SLL   R6,2                DAY OF WEEK (0=SUNDAY) BY 4
         LA    R6,DAYTBL(R6)       SHOW NAME OF DAY OF WEEK
         MVC   MAINRDAT+50(3),0(R6)
         SPACE
*  DETERMINE DISPLAY LOCATION
         L     R0,SCRNCOLS         GET SCREEN WIDTH
         LR    R15,R0              GET SCREEN WIDTH
         LR    R14,R0              GET SCREEN WIDTH
         AR    R14,R14             DOUBLE IT
         AR    R14,R14             QUADRUPLE IT
         L     R4,SCREENBF         POINT TO PRIMARY SCREEN BUFFER
         AR    R4,R14              POINT TO FIFTH LINE
         LA    R14,80
         SR    R15,R14             GET WIDE EXTRA COLUMN COUNT
         SRA   R15,1               HALVE IT
         AR    R4,R15              ALLOW FOR WIDE SCREEN CENTERING
         LA    R4,56(,R4)          POINT TO RIGHT DISPLAY COLUMN
         LR    R3,R4
         A     R3,SCREENSZ         POINT TO ITS SHADOW
         LA    R6,MAINRKEY         POINT TO ITEM NAME TABLE
         LA    R5,MAINRDAT         POINT TO ITEM DATA TABLE
         SPACE
*  LOAD TABLE ENTRIES
MENURSLP MVI   0(R4),FLDOUTLO      LOW INTENSITY FIELD
         MVI   0(R3),X'01'         SHOW IN BLUE
         MVC   1(23,R3),0(R3)
         MVC   1(12,R4),0(R6)      LOAD DATA ITEM NAME
         MVC   13(10,R4),0(R5)     LOAD DATA ITEM DATA
         AR    R3,R0               POINT TO NEXT DISPLAY LINE SHADOW
         AR    R4,R0               POINT TO NEXT DISPLAY LINE
         LA    R5,10(,R5)          POINT TO NEXT DATA ITEM
         LA    R6,12(,R6)          POINT TO NEXT DATA ITEM NAME
         CLI   0(R6),X'FF'         END OF ITEMS?
         BNE   MENURSLP            NO, SHOW REST OF ITEMS
         SPACE
         AIF   (&ENV390).MENUXA    SKIP GRAPHICS
         L     R12,=A(MENUGRAF)
         BASR  R14,R12             PLOT STORAGE USE IF POSSIBLE
.MENUXA  ANOP
         SPACE
************************************************************
*                                                          *
*         DISPLAY MENU                                     *
*                                                          *
************************************************************
         SPACE
MENUSHOW L     R2,SCREENBF         POINT TO PRIMARY SCREEN BUFFER
         MVC   MSGDSN,1(R2)        SAVE TEXT FOR REVCOMM
         MVC   COMPON,@RFE         FLAG COMPONENT FOR HELP
         LA    R3,4                4 TGETS BETWEEN REFRESHES
MENULOOP L     R15,=A(REVCOMM)     POINT TO TERMINAL I/O ROUTINE
         BASR  R14,R15             SHOW MENU PANEL
         TM    STATUS4,$4ATTN      ATTENTION INTERRUPT?
         BO    REMENU              YES, LET'S TRY THAT AGAIN
         TM    STATUS4,$4REFR      SCREEN CONTENTS OVERWRITTEN?
         BO    REMENU              YES, LET'S TRY THAT AGAIN
         CLI   REPLY,NOAID         ANY ATTENTION IDENTIFIER?
         BNE   MENUOPT             YES, PROCESS INPUT
         TM    STATUS4,$4REFR      SCREEN CONTENTS OVERWRITTEN?
         BO    REMENU              YES, REPAINT THE WHOLE SCREEN
         STIMER WAIT,BINTVL==F'30' NO, WAIT 0.3 SECONDS
         OI    STATUS17,$17NWT     USE TGET NOWAIT AGAIN
         BCT   R3,MENULOOP
         MVI   REPLY,0             MORE THAN POLLING FOR INPUT
         OI    STATUS17,$17PSW     BUT ONLY A PARTIAL SCREEN WRITE
         B     REMENU              GO UPDATE THE SCREEN
         SPACE
************************************************************
*                                                          *
*         PROCESS PRIMARY COMMAND FROM INITIAL PROMPT      *
*                                                          *
************************************************************
         SPACE
MENUOPT  TM    OPD0+6,PRESENT      ANY SUBCOMMAND REQUESTED?
         BNO   REMENU              NO, GO SHOW MENU AGAIN
         XC    MNSAVSEL,MNSAVSEL   RESET LOCAL PROMPT FIELDS
         XC    PUTLINS(20),PUTLINS RESET DATA FOR PROCESSOR
         NI    MENFLG2,255-$M2FRDS-$M2TODS     AND OPTION FLAGS
**                                 UPPERCASING PERFORMED BY REVCOMM
**       L     R1,=A(KAPS)         YES, POINT TO TRANSLATE TABLE
**       TR    CMDAREA,0(R1)       UPPER CASE ALL PRIMARY INPUT
         L     R1,OPD0             POINT TO SUBCOMMAND NAME
         LH    R2,OPD0+4           GET SUBCOMMAND LENGTH CODE PLUS 1
         MVC   MENUPREV,MENUCRNT   SAVE CURRENT MENU STATUS
         MVC   MENUPREV(1),MENFLGS
         NI    MENUPREV,$MFPRIM    SAVE PRIMARY OPTION MENU STATUS
MENUEQLP CLI   0(R1),C'='          OPTION PREFIX BY EQUALS SIGN?
         BNE   MENUEQOK            NO, PROCEED WITH TABLE LOOKUP
         MVI   MENFLGS,$MFPRIM     YES, EXIT TO MAIN MENU
         BAS   R14,MENUINIT        RESET SOME GLOBAL VARIABLES
         LA    R1,1(,R1)           POINT PAST EQUALS SIGN
         BCT   R2,MENUEQLP         DECREMENT COMMAND LENGTH
         B     END2MAIN            COMMAND WAS ONLY EQUALS SIGN(S)
MENUEQOK L     R3,MENCMD@          POINT TO SUBCOMMAND TABLE
         STH   R2,OPD0+4           SAVE LENGTH AFTER REMOVAL OF EQUALS
         ST    R1,OPD0             SAME FOR ADDRESS AS WELL
         LR    R14,R1              POINT TO SELECTION
         LR    R15,R2              GET ITS LENGTH
         CLI   1(R1),C','          IS THE SECOND CHARACTER A COMMA?
         BNE   MENUQLLP            NO
         MVI   1(R1),C'.'          YES, CONVERT IT TO A PERIOD
MENUQLLP CLI   0(R14),C'.'         FOUND A PERIOD?
         BE    MENUQUAL            YES
         CLI   0(R14),C' '         FOUND A BLANK?
         BE    MENUQUAL            YES
         LA    R14,1(,R14)         NO, POINT TO NEXT CHARACTER
         BCT   R15,MENUQLLP
         B     MENUQLOK            NO PERIOD IN SELECTION
MENUQUAL CLI   0(R1),C'.'          LEADING PERIOD?
         BE    MENUQLOK            YES, SHOULD NOT HAPPEN
         SR    R2,R15              NO, ONLY COMPARE UP TO PERIOD
MENUQLOK LA    R0,7                GET EXECUTE LENGTH MAXIMUM
         CLR   R2,R0               LARGER THAN MAXIMUM?
         BNH   MNINCMLP            NO
         LR    R2,R0               YES, REDUCE TO MAXIMUM
MNINCMLP EX    R2,MNCMDTST         FOUND THE SUBCOMMAND?
         BL    MNINBDSL            NO, HANDLE NON-COMMAND PRIMARY INPUT
         BE    MENDOCMD            YES, PERFORM IT
         LA    R3,12(,R3)          NOT YET, POINT TO NEXT ENTRY
         B     MNINCMLP            CONTINUE SUBCOMMAND TABLE SCAN
         SPACE
MENDOCMD BAS   R14,MENUFREE        FREE PICTURE RESOURCES
         LA    R14,MENOPTN         POINT TO OPTION HOLD AREA
         LA    R15,L'MENOPTN       GET ITS LENGTH
MENOPTLP CLI   0(R14),C' '         FOUND A BLANK?
         BNH   MENOPTLD            YES
         LA    R14,1(,R14)         NO, POINT PAST NON-BLANK
         BCT   R15,MENOPTLP
         B     MENOPTL1            JUST IN CASE
MENOPTLD CLI   MENOPTN,C' '        LOADING A SUBOPTION?
         BE    MENOPTL1            NO
         MVI   0(R14),C'.'         YES, INSERT A PERIOD
         LA    R14,1(,R14)         POINT PAST THE PERIOD
         BCTR  R15,0               DECREMENT LENGTH
MENOPTL1 L     R0,OPD0             POINT TO SELECTED OPTION
         LH    R1,OPD0+4           GET ITS LENGTH
         ICM   R1,8,MENUBLNK       SET PAD TO BLANK
         MVCL  R14,R0              SAVE OPTION
         B     8(,R3)              PERFORM COMMAND ROUTINE
         SPACE
MNINBDSL MVI   MSG,211             INVALID SELECTION
         B     REMENU              GO DISPLAY THIS MESSAGE
         SPACE
MNCMDTST CLC   0(0,R1),0(R3)       <<< EXECUTED >>>
         SPACE
************************************************************
*                                                          *
*         TERMINATE RFE LOGICAL SESSION                    *
*                                                          *
************************************************************
         SPACE
MENUCAN  NI    STATUS,255-STPROF   TURN OFF PROFILE REWRITE FLAG
         B     MENUEXIT
         SPACE
MENUSAVE ICM   R1,15,MENTSO@       ANY TSO COMMANDS TO SAVE?
         BZ    MENUEXIT            NO
         CLI   80(R1),NULL         ANY DATA IN PROFILE AREA?
         BE    MENUEXIT            NO, SKIP SAVE
         LA    R0,240*10+80        YES, GET AREA SIZE
         LNR   R0,R0               INDICATE WRITE WITH NEGATIVE
         MVC   DOUBLE,$$REVTSO     NAME PROFILE MEMBER TO SAVE
         L     R15,=A(REVPROF)     POINT TO PROFILE MANAGER
         BASR  R14,R15             STORE PROFILE
         SPACE
MENUEXIT XC    RC,RC               ZERO RETURN CODE TO EXTERNALIZE
         ICM   R1,15,MENTSO@       POINT TO TSO PROFILE AREA
         BZ    MENUEX1T            NONE EXISTS TO FREE
         LA    R0,240*10+80        GET AREA SIZE
         FREEMAIN RU,LV=(0),A=(1)  FREE IT
MENUEX1T LR    R1,R13              POINT TO LOCAL WORKING STORAGE
         L     R13,4(,R13)         POINT TO CALLER'S SAVE AREA
         LA    R0,@MENUWKL         GET LOCAL WORKING STORAGE LENGTH
         FREEMAIN RU,LV=(0),A=(1)  FREE LOCAL WORKING STORAGE
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         SR    R15,R15             ZERO LOCAL RETURN CODE
         BR    R14                 RETURN TO CALLER
         SPACE
         SPACE
************************************************************
*                                                          *
*         SHOW DATA SET UTILITIES MENU                     *
*                                                          *
************************************************************
         SPACE
MENUOPT3 NI    MENFLGS,255-$MFPRIM NOT SHOWING PRIMARY OPTION MENU
         LA    R0,OPT3TITL
         ST    R0,MENTIT@          SET MENU TITLE ADDRESS
         LA    R0,OPT3OPTB
         ST    R0,MENOPT@          SET MENU OPTIONS ADDRESS
         LA    R0,OPT3CMDS
         ST    R0,MENCMD@          SET COMMAND TABLE ADDRESS
         LA    R0,2
         L     R1,OPD0             POINT TO SELECTION OF THIS OPTION
         LH    R2,OPD0+4           GET ITS LENGTH
         LA    R1,2(,R1)           POINT PAST '3.'
         SR    R2,R0               GET LENGTH OF SUBOPTION
         BNP   REMENU              NO SUBOPTION SO SHOW MENU
         B     MENUEQOK            GO PROCESS SUBOPTION SELECTION
         SPACE
         SPACE
************************************************************
*                                                          *
*         SHOW DATA SET SELECTION PANEL                    *
*                                                          *
************************************************************
         SPACE
MENUOP31 LA    R0,OPT3TIT1
         L     R1,=A(OP31CUST)
         B     MENUDSEL
MENUOP32 LA    R0,OPT3TIT2
         L     R1,=A(OP32CUST)
         B     MENUDSEL
MENUOP33 LA    R0,OPT3TIT3
         L     R1,=A(OP33CUST)
         XC    FROMAREA($DSVARSZ+140),FROMAREA
         B     MENUDSEL
MENUOP35 LA    R0,OPT3TIT5
         L     R1,=A(OP35CUST)
         B     MENUDSEL
MENUOPT1 LA    R0,OPT1TITB
         L     R1,=A(OPT1CUST)
         B     MENUDSEL
MENUOPT2 LA    R0,OPT2TITL
         L     R1,=A(OPT2CUST)
MENUDSEL ST    R0,MENTIT@          SET MENU TITLE ADDRESS
         ST    R1,DSCUSTEP         SET MENU CUSTOMIZATION ROUTINE
         MVC   DOUBLE(7),=CL7'$$REVDS'
         MVC   DOUBLE+7(1),MENOPTN SET PROFILE MEMBER NAME
         LA    R0,MENPROFL         SET PROFILE MEMBER SIZE
         GETSTOR RC,LV=(0),LOC=(31,64)
         LTR   R15,R15             SUCCESS?
         BNZ   MENNOSTG            NO
         ST    R1,MENPROF@         SAVE THE ADDRESS
         LR    R0,R1               POINT TO IT
         LA    R1,MENPROFL         GET ITS SIZE
         LA    R15,C' '            GET PAD CHARACTER
         SLL   R15,24              PROMOTE PAD AND ZERO LENGTH
         MVCL  R0,R14              CLEAR THE NEW AREA
         MVC   MENPROFN,DOUBLE     SAVE THE PROFILE MEMBER NAME
         LA    R0,MENPROFL         SET PROFILE MEMBER SIZE
         L     R1,MENPROF@         POINT TO THE NEW AREA
         L     R15,=A(REVPROF)     POINT TO PROFILE MANAGER
         BASR  R14,R15             FETCH PROFILE
         CLI   MENOPTN,C'1'        OPTION '1'?
         BNE   DSELREDO            NO
         TM    7*80+5(R1),X'01'    VIEW?
         BNO   DSELREDO            NO
         LA    R0,OPT1TITV
         ST    R0,MENTIT@          SET MENU TITLE ADDRESS
         OI    STATUS11,$11VIEW    FLAG PREFERENCE FOR VIEW
DSELREDO NI    MENFLGS,255-$MFPRIM NOT SHOWING PRIMARY OPTION MENU
         OI    MENFLGS,$MFDSEL     RETURN TO HERE (DSELPANL)
         NI    STATUS14,255-$14RCL CLEAR RECALL PRIMARY INPUT FLAG
         B     REMENU              GO GET THE HEADING DONE
*
*    GPR4 -> LINE 5
*    GPR3 -> LINE 5 SHADOW
*  LINE 5  -  LINE 4 FOR 3.1
DSELPANL CLC   OP3PT1,MENOPTN      IN OPTION 3.1?
         BNE   DSELHDG1            NO
         S     R4,SCRNCOLS         YES, BACK UP ONE LINE
         S     R3,SCRNCOLS
DSELHDG1 MVI   0(R4),FLDOUTLO
         MVC   1(17,R4),=C'FROM TSO LIBRARY:'
         TM    MENFLG2,$M2FROM     ALREADY HAVE "FROM" DETAILS?
         BNO   DSELTSO3            NO
         MVC   1(2,R4),=C'TO'      YES, CHANGE IT TO "TO"
         MVC   3(15,R4),5(R4)
         LR    R1,R4               POINT TO LINE 4
         S     R1,SCRNCOLS         POINT TO LINE 3
         MVC   16(8,R1),FROMDSM    LABEL "FROM" DATA SET NAME
         MVC   24(44,R1),FROMAREA+$DSNAME+2-$PASSWRD
         LH    R14,FROMAREA+$DSNAME-$PASSWRD
         LA    R14,24(R14,R1)
         MVI   0(R14),QUOTE
         CLI   FROMAREA+$MEMBER-$PASSWRD,C' '
         BNH   DSELSHFR            NO, GO SET "FROM" SHADOW
         MVI   0(R14),C'('
         MVC   1(8,R14),FROMAREA+$MEMBER-$PASSWRD
DSELLPFR CLI   8(R14),C' '         TRAILING BLANK?
         BNE   *+8                 NO
         BCT   R14,DSELLPFR        YES, BACK UP ONE
         MVI   9(R14),C')'
         MVI   10(R14),QUOTE
DSELSHFR A     R1,SCREENSZ         POINT TO LINE 3 SHADOW
         MVI   17(R1),X'01'        BLUE FOR 'FROM:'
         MVC   18(5,R1),17(R1)
         MVI   23(R1),X'06'        YELLOW FOR "FROM" DATA SET NAME
         MVC   24(56,R1),23(R1)
         B     DSELTSOL
DSELTSO3 CLC   OP3PT3,MENOPTN      IN OPTION 3.3?
         BE    DSELTSOL            YES
         MVC   1(17,R4),6(R4)      NO, ERASE THE 'FROM'
DSELTSOL MVI   1(R3),X'01'
         MVC   2(18,R3),1(R3)
         L     R15,SCRNCOLS        GET SCREEN WIDTH
         L     R5,MENPROF@         POINT TO PROFILE DATA
         AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
*  LINE 6  -  LINE 5 FOR 3.1
         MVC   4(7,R4),=C'PROJECT'
         MVI   11(R4),FLDOUTHI
         MVC   12(4,R4),MENLAROW   SHOW WHITE ARROW
         MVC   12(4,R3),=X'07070707'
         MVI   16(R4),FLDINHI
         MVC   17(8,R4),1*80+5(R5) LOAD &PROJ
         TR    17(8,R4),PERIODS    HANDLE BAD DATA
         MVI   17(R3),X'32'        RED UNDERSCORE
         MVC   18(7,R3),17(R3)
         MVI   25(R4),FLDOUTLO
         LA    R1,17(,R4)          POINT TO INPUT AREA
         ST    R1,PROJECT@         SAVE ITS ADDRESS
         LA    R2,0(R15,R4)        POINT TO NEXT LINE
         LA    R1,0(R15,R3)
*  LINE 7  -  LINE 6 FOR 3.1
         MVC   11(15,R2),11(R4)    REPLICATE PREVIOUS LINE
         MVC   11(15,R1),11(R3)
         MVC   4(7,R2),=C'LIBRARY'
         MVC   17(8,R2),2*80+5(R5) LOAD &LIB1
         TR    17(8,R2),PERIODS    HANDLE BAD DATA
         CLI   MENOPTN,C'2'        NEED MORE ARROWS?
         BH    MENLIBOK            NO
         MVC   26(45,R2),11(R2)
         MVC   26(45,R1),11(R1)
         MVC   32(8,R2),3*80+5(R5) LOAD &LIB2
         MVC   47(8,R2),4*80+5(R5) LOAD &LIB3
         MVC   62(8,R2),5*80+5(R5) LOAD &LIB4
MENLIBOK LA    R4,0(R15,R2)        POINT TO NEXT LINE
         LA    R3,0(R15,R1)
*  LINE 8  -  LINE 7 FOR 3.1
         MVC   11(15,R4),11(R2)    REPLICATE PREVIOUS LINE
         MVC   11(15,R3),11(R1)
         MVC   4(4,R4),=C'TYPE'
         MVC   17(8,R4),6*80+5(R5) LOAD &TYPE
         TR    17(8,R4),PERIODS    HANDLE BAD DATA
         LA    R2,0(R15,R4)        POINT TO NEXT LINE
         LA    R1,0(R15,R3)
*  LINE 9  -  LINE 8 FOR 3.1
         CLC   OP3PT2,MENOPTN      IN OPTION 3.2?
         BE    DSELMMOK            YES, DO NOT SHOW MEMBER PROMPT
         CLC   OP3PT5,MENOPTN      IN OPTION 3.5?
         BE    DSELMMOK            YES, DO NOT SHOW MEMBER PROMPT
         MVC   11(15,R2),11(R4)    REPLICATE PREVIOUS LINE
         MVC   11(15,R1),11(R3)
         MVC   4(6,R2),=C'MEMBER'
         MVC   17(8,R2),MNSAVMEM   LOAD &MEM1
DSELMMOK LA    R4,0(R15,R2)        POINT TO NEXT LINE
         LA    R3,0(R15,R1)
*  LINE 10 -  LINE 9 FOR 3.1
         CLC   OP3PT1,MENOPTN      IN OPTION 3.1?
         BNE   DSELNNOK            NO, DO NOT SHOW NEWNAME PROMPT
         MVC   11(15,R4),11(R2)    REPLICATE PREVIOUS LINE
         MVC   11(15,R3),11(R1)
         MVC   4(7,R4),=C'NEWNAME'
         MVC   17(8,R4),MNSANMEM   LOAD &MEM2
         AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
DSELNNOK AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
*  LINE 11
         MVC   1(20,R4),=C'FROM OTHER DATA SET:'
         TM    MENFLG2,$M2FROM     ALREADY HAVE "FROM" DETAILS?
         BNO   DSELOTH3            NO
         MVC   1(2,R4),=C'TO'      YES, CHANGE IT TO "TO"
         MVC   3(18,R4),5(R4)
         B     DSELOTHR
DSELOTH3 CLC   OP3PT3,MENOPTN      IN OPTION 3.3?
         BE    DSELOTHR            YES
         MVC   1(20,R4),6(R4)      NO, ERASE THE 'FROM'
DSELOTHR MVI   1(R3),X'01'
         MVC   2(19,R3),1(R3)
         AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
*  LINE 12
         MVC   4(13,R4),=C'DATA SET NAME'
         MVI   17(R4),FLDOUTHI
         MVC   18(4,R4),MENLAROW   SHOW WHITE ARROW
         MVC   18(4,R3),=X'07070707'
         MVI   22(R4),FLDINHI
         MVC   23(56,R4),MNSAVDSN  SHOW CURRENT DATA SET NAME
         MVI   23(R3),X'32'        RED UNDERSCORE
         MVC   24(55,R3),23(R3)
         MVI   79(R4),FLDOUTLO
         LA    R1,23(,R4)          POINT TO INPUT AREA
         ST    R1,OTHERDS@         SAVE ITS ADDRESS
         AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
*  LINE 13
         MVC   4(13,R4),=C'VOLUME SERIAL'
         MVI   17(R4),FLDOUTHI
         MVC   18(4,R4),MENLAROW   SHOW WHITE ARROW
         MVC   18(4,R3),=X'07070707'
         MVI   22(R4),FLDINHI
         MVC   23(6,R4),MNSAVVOL   SHOW CURRENT VOLUME SERIAL
         MVI   23(R3),X'32'        RED UNDERSCORE
         MVC   24(5,R3),23(R3)
         MVI   29(R4),FLDOUTLO
         AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
*  LINE 14
         AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
*  LINE 15
         MVC   1(L'ODSHSTMS,R4),ODSHSTMS
         MVI   1(R3),X'01'
         MVC   2(L'ODSHSTMS-1,R3),1(R3)
         AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
*  LINES 16 TO 31
         LA    R0,$P_DS#           GET LINES TO PROCESS
         LA    R1,$P_HD#*80(,R5)   POINT TO NAMES IN PROFILE
         ST    R4,DSNHIST@         SAVE HISTORICAL LINES ADDRESS
MENDSNLP MVC   3(2,R4),MENSAROW    ARROW
         MVC   6(54,R4),4(R1)      DATA SET NAME
         TR    6(54,R4),PERIODS    HANDLE BAD DATA
         MVC   64(6,R4),65(R1)     VOLUME SERIAL NUMBER
         TR    64(6,R4),PERIODS    HANDLE BAD DATA
         MVI   3(R3),X'07'         COLOUR THE SHORT ARROW
         MVI   4(R3),X'07'
         MVI   0(R4),FLDINLO       MAKE THE LINE TAB-SELECTABLE
         MVI   2(R4),FLDOUTLO
         AR    R4,R15              POINT TO NEXT LINE
         AR    R3,R15
         LA    R1,80(,R1)          POINT TO NEXT PROFILE ENTRY
         C     R4,SHADOWBF         FILLED THE SCREEN?
         BNL   *+8                 YES, STOP NOW
         BCT   R0,MENDSNLP
*  CUSTOMIZE FOR EACH OPTION
         L     R4,PROJECT@         PROVIDE USEFUL SCREEN ADDRESS
         S     R4,SCRNCOLS
         LR    R3,R4
         A     R3,SCREENSZ         SET CORRESPONDING SHADOW POINTER
         L     R7,DSCUSTEP         POINT TO CUSTOMIZATION ROUTINE
         BR    R7                  INVOKE IT - RETURN TO DSELSHOW
         SPACE
************************************************************
*                                                          *
*         DISPLAY DATA SET SELECTION ENTRY PANEL           *
*                                                          *
************************************************************
         SPACE
DSELSHOW CLI   MENOPTN,C'3'        IN OPTION '3' SUBOPTION?
         BE    DSELHOME            YES, LEAVE CURSOR AT HOME
DSELSHO2 L     R2,PROJECT@         POINT TO &PROJ
         LA    R0,3
DSELCSLP CLI   0(R2),C' '          IS FIELD VACANT?
         BNH   DSELNCHK            YES, MOVE CURSOR THERE
         A     R2,SCRNCOLS         NO, POINT TO NEXT LINE'S FIELD
         BCT   R0,DSELCSLP
         CLC   OP3PT2,MENOPTN      IN OPTION '3.2'?
         BNE   DSELNCHK            NO
         L     R2,PROJECT@         YES, NO &MEM1 SO POINT TO &PROJ
DSELNCHK TM    MENFLGS,$MFNMN      EVENT RELATED TO NEW NAME?
         BNO   DSELOCHK            NO, GO CHECK "OTHER DATA SET"
         A     R2,SCRNCOLS         YES, MUST BE 3.1 SO POINT TO &MEM2
         NI    MENFLGS,255-$MFNMN  RESET FLAG
         B     DSELCRSR            DEFINITELY HAVE CURSOR PLACEMENT
DSELOCHK L     R15,OTHERDS@        POINT TO &DSN1
         CLI   0(R15),C' '         IS IT OCCUPIED?
         BNH   DSELCRSR            NO, ALREADY HAVE CURSOR PLACEMENT
         LR    R2,R15              YES, MOVE CURSOR THERE
DSELCRSR S     R2,SCREENBF         GET CURSOR OFFSET IN SCREEN
         S     R2,SCRNCOLS
         S     R2,SCRNCOLS         GET CURSOR OFFSET IN REVBUF
         LA    R2,1(,R2)           CONVERT OFFSET TO POSITION
         ST    R2,REVPOS           SPECIFY CURSOR POSITION
         MVC   REVCSR,MENUBUF      SPECIFY CURSOR FIELD
DSELHOME XC    $UCBAD,$UCBAD
         MVC   $VOLSER,MENUBLNK
         MVC   $DDNAME,MENUBLNK
         XC    $DSNAME(2),$DSNAME
         MVI   $DSNAME+2,C' '
         MVC   $DSNAME+3(43),$DSNAME+2
         XC    MYDSCB,MYDSCB       INVALIDATE VTOC ENTRY COPY
         XC    DSORG,DSORG         CLEAR DSORG INDICATORS
         XC    AMKEY(20),AMKEY     CLEAR KEY AND VSAM DETAILS
         CLC   OP3DOT,MENOPTN      CLEAR SELECTION CODE FOR
         BNE   DSELCOMM                  OPTION 3 SUBOPTIONS
         TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BO    DSELCOMM            YES, DO NOT ALTER OPTION CODE
         MVC   MENOPTN+3(5),MENUBLNK
DSELCOMM L     R2,SCREENBF         POINT TO PRIMARY SCREEN BUFFER
         MVC   MSGDSN,1(R2)        SAVE TEXT FOR REVCOMM
         MVC   COMPON,@RFE         FLAG COMPONENT FOR HELP
         L     R15,=A(REVCOMM)     POINT TO TERMINAL I/O ROUTINE
         BASR  R14,R15             SHOW MENU PANEL
         SPACE
************************************************************
*                                                          *
*         PROCESS SELECTION PANEL PRIMARY COMMAND          *
*                                                          *
************************************************************
         SPACE
         TM    OPD0+6,PRESENT      ANY SUBCOMMAND REQUESTED?
         BNO   DSELDSEL            NO, GO LOOK AT SELECTED DATA SET
**                                 UPPERCASING PERFORMED BY REVCOMM
**       L     R1,=A(KAPS)         YES, POINT TO TRANSLATE TABLE
**       TR    CMDAREA,0(R1)       UPPER CASE ALL PRIMARY INPUT
         L     R1,OPD0             POINT TO SUBCOMMAND NAME
         CLI   0(R1),C'='          INTER-OPTION JUMP?
         BE    DSELEND             YES, LEAVE THIS PANEL
         LA    R3,DSELCMDS         POINT TO SUBCOMMAND TABLE
         LH    R2,OPD0+4           GET SUBCOMMAND LENGTH CODE PLUS 1
         LA    R0,7                GET EXECUTE LENGTH MAXIMUM
         CLR   R2,R0               LARGER THAN MAXIMUM?
         BNH   DSELCMLP            NO
         LR    R2,R0               YES, REDUCE TO MAXIMUM
DSELCMLP EX    R2,MNCMDTST         FOUND THE SUBCOMMAND?
         BL    DSELBDSL            NO, HANDLE NON-COMMAND PRIMARY INPUT
         BE    8(,R3)              YES, PERFORM IT
         LA    R3,12(,R3)          NOT YET, POINT TO NEXT ENTRY
         B     DSELCMLP            CONTINUE SUBCOMMAND TABLE SCAN
         SPACE
DSELBDOP MVI   MSG,34              INVALID OPERAND
         B     *+8
DSELBDSL MVI   MSG,211             INVALID SELECTION
         TM    STATUS4,$4ATTN      ATTENTION INTERRUPT?
         BO    DSELREDO            YES, LET'S TRY THAT AGAIN
         TM    STATUS4,$4REFR      SCREEN CONTENTS OVERWRITTEN?
         BO    DSELREDO            YES, LET'S TRY THAT AGAIN
         CLI   MSG,34              INVALID OPERAND?
         BNE   DSELCOMM            NO, GO DISPLAY THIS MESSAGE
         CLI   REPLY,ENTERAID      ENTER AID PRESENT?
         BNE   DSELCOMM            NO, WHOLE COMMAND NOT RECALLABLE
         L     R15,OPD1            POINT TO OFFENDING OPERAND
         S     R15,OPD0            GET OPERAND OFFSET IN COMMAND STRING
         BNP   DSELCOMM            JUST IN CASE SOMETHING'S GONE AWRY
         LA    R15,1(,R15)         CONVERT OFFSET TO POSITION
         ST    R15,REVPOS          SET CURSOR POSITION
         OI    STATUS14,$14RCL     REDISPLAY THE COMMAND
         B     DSELCOMM            GO DISPLAY THIS MESSAGE
         SPACE
*  HANDLE 'BROWSE' COMMAND
DSELBRWS CLI   MENOPTN,C'1'        IN OPTION '1'?
         BNE   DSELBDSL            NO
         L     R5,MENPROF@         POINT TO PROFILE DATA
         NI    7*80+5(R5),C'0'     RESET VIEW PREFERENCE FLAG
         L     R1,SCRNCOLS         GET SCREEN WIDTH
         SRA   R1,1                HALVE IT
         A     R1,SCREENBF         POINT TO HALF WAY ALONG FIRST LINE
         LA    R0,12
         SR    R1,R0               POINT TO HEADING LOCATION
         MVC   0(24,R1),OPT1TITB+1 UPDATE HEADING
         LA    R0,OPT1TITB         POINT TO MENU TITLE
         B     DSELBORV            GO DO COMMON FINISH UP
         SPACE
*  HANDLE 'VIEW' COMMAND
DSELVIEW CLI   MENOPTN,C'1'        IN OPTION '1'?
         BNE   DSELBDSL            NO
         L     R5,MENPROF@         POINT TO PROFILE DATA
         OI    7*80+5(R5),C'1'     SET VIEW PREFERENCE FLAG
         L     R1,SCRNCOLS         GET SCREEN WIDTH
         SRA   R1,1                HALVE IT
         A     R1,SCREENBF         POINT TO HALF WAY ALONG FIRST LINE
         LA    R0,12
         SR    R1,R0               POINT TO HEADING LOCATION
         MVI   0(R1),C'-'
         MVC   1(22,R1),OPT1TITV+1 UPDATE HEADING
         MVI   23(R1),C'-'
         LA    R0,OPT1TITV         POINT TO MENU TITLE
DSELBORV ST    R0,MENTIT@          SET MENU TITLE ADDRESS
         L     R15,=A(REVNAME)
         BASR  R14,R15             ATTEMPT TO UPDATE THE SESSION'S NAME
         B     DSELDSEL            ALSO CHECK FOR CURSOR SELECTION
         SPACE
*  HANDLE 'B' AND 'N' SELECTIONS
DSELB    CLI   MENOPTN,C'1'        IN OPTION '1'?
         BE    DSELBRWS            YES, 'B' IS SHORT FOR 'BROWSE'
DSELN    CLC   OP3PT1,MENOPTN      IN OPTION '3.1'?
         BNE   DSELBDSL            NO, INVALID
         MVC   MENOPTN+3(1),0(R1)  SAVE SELECTION
         B     DSELDSEL            GO BROWSE THE MEMBER
         SPACE
*  HANDLE 'M' SELECTION
DSELM    CLC   OP3PT3,MENOPTN      IN OPTION '3.3'?
         BNE   DSELBDSL            NO, INVALID
DSEL3PT3 TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BO    DSELBDSL            YES, DO NOT ALTER OPTION CODE
         MVC   MENOPTN+3(1),0(R1)  SAVE SELECTION
         OI    STATUS14,$14RCL     REDISPLAY THE COMMAND
         B     DSELDSEL            GO PROCESS REQUEST
         SPACE
*  HANDLE 'C' AND 'D' SELECTIONS
DSELD    CLI   MENOPTN,C'1'        IN OPTION '1'?
         BE    DSELDATA            YES, 'D' IS SHORT FOR 'DATA'
DSELC    CLC   OP3PT1,MENOPTN      REPORT IF INVALID
         BH    DSELBDSL
         CLC   OP3PT3,MENOPTN
         BL    DSELBDSL
         BE    DSEL3PT3            DO OPTION '3.3' SPECIAL STUFF
         MVC   MENOPTN+3(1),0(R1)  SAVE SELECTION
         B     DSELDSEL            GO PROCESS REQUEST
         SPACE
*  HANDLE 'A' AND 'R' AND 'U' SELECTIONS
DSELA    EQU   *
DSELU    EQU   *
DSELR    CLC   OP3PT2,MENOPTN      IN OPTION '3.2'?
         BNE   DSELBDSL            NO, INVALID
         MVC   MENOPTN+3(1),0(R1)  SAVE SELECTION
         B     DSELDSEL            GO BROWSE THE MEMBER
         SPACE
*  HANDLE 'DATA' COMMAND
DSELDATA CLI   MENOPTN,C'1'        IN OPTION '1'?
         BNE   DSELBDSL            NO
         LA    R15,OPD1            GET FIRST OPERAND ENTRY
         L     R5,MENPROF@         POINT TO PROFILE DATA
         TM    6(R15),PRESENT      ARE THERE ANY OPERANDS?
         BZ    DDATFLIP            NO, FLIP FLOP
         L     R14,0(,R15)         POINT TO OPERAND
         OC    0(3,R14),MENUBLNK   ENSURE UPPER CASE OPERAND
         CLI   5(R15),2            IS LENGTH 2?
         BNE   DDATOFF             NO, TRY OFF
         CLC   =C'ON',0(R14)       YES, IS IT 'ON'?
         BNE   DSELBDOP            NO, INVALID OPERAND
         OI    8*80+5(R5),C'1'     YES, FLAG 'DATA' REQUESTED
         MVI   MSG,143             SETTING NOW ON
         B     DSELREDO
DDATOFF  CLI   5(R15),3            IS LENGTH 3?
         BNE   DSELBDOP            NO, INVALID OPERAND
         CLC   =C'OFF',0(R14)      YES, IS IT 'OFF'?
         BNE   DSELBDOP            NO, INVALID OPERAND
         NI    8*80+5(R5),C'0'     YES, FLAG 'DATA' NOT REQUESTED
         MVI   MSG,144             SETTING NOW OFF
         B     DSELREDO
DDATFLIP XI    8*80+5(R5),1        TOGGLE 'DATA' SETTING
         MVI   MSG,143             SETTING NOW ON
         TM    8*80+5(R5),1        SETTING ON?
         BO    DSELREDO            YES
         MVI   MSG,144             SETTING NOW OFF
         B     DSELREDO
         SPACE
         SPACE
************************************************************
*                                                          *
*         PROCESS DATA SET SELECTION                       *
*                                                          *
************************************************************
         SPACE
*  HANDLE ABSENT SCREEN DATA
DSELDSEL TM    STATUS4,$4ATTN      ATTENTION INTERRUPT?
         BO    DSELREDO            YES, LET'S TRY THAT AGAIN
         TM    STATUS4,$4REFR      SCREEN CONTENTS OVERWRITTEN?
         BO    DSELREDO            YES, LET'S TRY THAT AGAIN
         SPACE
*  PROCESS DATA SET RECALL SELECTION
         SR    R1,R1               CLEAR FOR INSERT
         ICM   R1,3,DYN_CSR        CURSOR IN DYNAMIC AREA?
         BZ    DSELNTCS            NO, NOT A CURSOR SELECTION
         BCTR  R1,0                YES, CONVERT IT TO AN OFFSET
         SR    R0,R0               CLEAR FOR DIVIDE
         D     R0,SCRNCOLS         CONVERT TO RELATIVE LINE NUMBER
         SH    R1,=Y(15-2)         MAKE RELATIVE TO FIRST SAVE LINE
         BM    DSELNTCS            CURSOR BEFORE SAVE LINES
         CH    R1,=Y($P_DS#)       CURSOR ON A SAVE LINE?
         BNL   DSELNTCS            NO, CURSOR AFTER SAVE LINES
DSELFRND LA    R1,$P_HD#(,R1)      YES, GET RECORD NUMBER IN PROFILE
         LA    R0,80               GET ARRAY ENTRY SIZE / RECORD LENGTH
         MR    R0,R0               GET SELECTED DATA SET ENTRY OFFSET
         AL    R1,MENPROF@         POINT TO SELECTED DATA SET ENTRY
         CLI   4(R1),C' '          ANY DATA SET SAVED THERE?
         BNH   DSELNTCS            NO, NO RECALL TO PERFORM
         L     R2,OTHERDS@         YES, POINT TO &DSN1
         MVI   0(R2),QUOTE         PROVIDE LEADING QUOTE AND
         MVC   1(54,R2),4(R1)      FULLY-QUALIFIED DATA SET NAME
         A     R2,SCRNCOLS         POINT TO &VOL1
         MVC   0(6,R2),65(R1)      ALSO RECALL VOLUME SERIAL NUMBER
         L     R2,OTHERDS@         POINT TO &DSN1
         B     DSELCRSR            GO PROMPT WITH DATA SET PRIMED
         SPACE
*  BLANK PROFILE AREA - THIS IS DONE TO FORCE PROFILE DATA CLEAN UP
DSELNTCS NI    STATUS14,255-$14RCL CLEAR RECALL-PRIMARY-INPUT FLAG
         TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BNO   DSELPROF            NO, PERFORM PROFILE "SWEEP"
         LA    R3,8                GET LENGTH OF FIELDS TO TIDY
         L     R2,PROJECT@         POINT TO &PROJ
         BAS   R14,MENUTIDY        TIDY IT UP
         A     R2,SCRNCOLS         POINT TO &LIB1
         BAS   R14,MENUTIDY        TIDY IT UP
         A     R2,SCRNCOLS         POINT TO &TYPE
         BAS   R14,MENUTIDY        TIDY IT UP
         A     R2,SCRNCOLS         POINT TO &MEM1
         BAS   R14,MENUTIDY        TIDY IT UP
         B     MENSWEPT            SKIP PROFILE SWEEP
DSELPROF TM    OPD0+6,PRESENT      ANY SUBCOMMAND REQUESTED?
         BNO   DSELDODO            NO, CONTINUE
         CLI   MENOPTN,C'1'        OPTION '1'?
         BE    DSELREDO            YES, SHOW SUBCOMMAND'S EFFECT
DSELDODO L     R5,MENPROF@         POINT TO PROFILE DATA
         MVC   DOUBLE(1),7*80+5(R5) SAVE DATA IN CASE OPTION 1 OR 3
         MVC   DOUBLE+1(1),8*80+5(R5)
         L     R0,SCRNLNES         GET SCREEN LINE COUNT
         SR    R14,R14             ZERO BYTE DEFICIT
         LA    R15,15+$P_DS#       GET LINES NEEDED
         SR    R15,R0              GET LINE DEFICIT
         BNP   DSEPRFSZ            NO DEFICIT
         LA    R14,80              GET RECORD LENGTH
         MR    R14,R14             GET DEFICIT BYTE COUNT
         LR    R14,R15             COPY IT
DSEPRFSZ LA    R15,MENPROFL        GET ITS SIZE
         SR    R15,R14             SUBTRACT DEFICIT IF ANY
         LR    R14,R5              POINT TO PROFILE AREA
         SR    R1,R1               ZERO SOURCE LENGTH
         ICM   R1,8,MENUBLNK       SET PAD TO BLANK
         MVCL  R14,R0              BLANK PROFILE AREA
         SPACE
*  RELOAD PROFILE AREA WITH CURRENT DATA
         LA    R3,8                GET LENGTH OF FIRST FEW FIELDS
         MVC   1*80(5,R5),=C'PROJ='
         L     R2,PROJECT@         POINT TO &PROJ
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   1*80+5(8,R5),0(R2)  SAVE &PROJ
         MVC   2*80(5,R5),=C'LIB1='
         A     R2,SCRNCOLS         POINT TO &LIB1
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   2*80+5(8,R5),0(R2)  SAVE &LIB1
         CLI   MENOPTN,C'2'        MORE LIBRARIES POSSIBLE?
         BH    MENLIBSV            NO
         MVC   3*80(5,R5),=C'LIB2='
         LA    R2,15(,R2)          POINT TO &LIB2
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   3*80+5(8,R5),0(R2)  SAVE &LIB2
         MVC   4*80(5,R5),=C'LIB3='
         LA    R2,15(,R2)          POINT TO &LIB3
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   4*80+5(8,R5),0(R2)  SAVE &LIB3
         MVC   5*80(5,R5),=C'LIB4='
         LA    R2,15(,R2)          POINT TO &LIB4
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   5*80+5(8,R5),0(R2)  SAVE &LIB4
MENLIBSV L     R2,SCRNCOLS         GET SCREEN WIDTH
         AR    R2,R2               DOUBLE IT
         MVC   6*80(5,R5),=C'TYPE='
         A     R2,PROJECT@         POINT TO &TYPE
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   6*80+5(8,R5),0(R2)  SAVE &TYPE
         A     R2,SCRNCOLS         POINT TO &MEM1
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   MNSAVMEM,0(R2)      SAVE &MEM1
         CLC   OP3PT3,MENOPTN      IN OPTION '3.3'?
         BE    MEN33OPS            YES
         CLC   OP3PT1,MENOPTN      IN OPTION '3.1'?
         BNE   MEN3CHK             NO
         A     R2,SCRNCOLS         POINT TO &MEM2
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   MNSANMEM,0(R2)      SAVE &MEM2
         B     MEN3CHK
MEN33OPS L     R2,OTHERDS@         POINT TO &DSN1
         A     R2,SCRNCOLS         POINT TO &VOL1
         OI    32(R2),X'40'        ENSURE UPPER CASE
         CLI   32(R2),C'Y'         'Y' ?
         BNE   *+8                 NO
         MVI   DOUBLE,C'1'         YES
         CLI   32(R2),C'N'         'N' ?
         BNE   *+8                 NO
         MVI   DOUBLE,C'0'         YES
         OI    49(R2),X'40'        ENSURE UPPER CASE
         CLI   49(R2),C'Y'         'Y' ?
         BNE   *+8                 NO
         MVI   DOUBLE+1,C'1'       YES
         CLI   49(R2),C'N'         'N' ?
         BNE   *+8                 NO
         MVI   DOUBLE+1,C'0'       YES
MEN3CHK  CLI   MENOPTN,C'3'        OPTION '3' SETTINGS PRESENT?
         BNE   MEN1CHK             NO
         MVC   7*80(5,R5),=C'ZREP='
         MVC   8*80(5,R5),=C'ZMOD='
         B     MEN1OR3
MEN1CHK  CLI   MENOPTN,C'1'        OPTION '1' SETTINGS PRESENT?
         BNE   MENUHIST            NO
         MVC   7*80(5,R5),=C'VIEW='
         MVC   8*80(5,R5),=C'DATA='
         L     R2,OTHERDS@         POINT TO &DSN1
         A     R2,SCRNCOLS         POINT TO &VOL1
         OI    31(R2),X'40'        ENSURE UPPER CASE
         CLI   31(R2),C'Y'         'Y' ?
         BNE   *+8                 NO
         MVI   DOUBLE+1,C'1'       YES
         CLI   31(R2),C'N'         'N' ?
         BNE   MEN1OR3             NO
         MVI   DOUBLE+1,C'0'       YES
MEN1OR3  MVC   7*80+5(1,R5),DOUBLE
         NI    7*80+5(R5),C'1'
         OI    7*80+5(R5),C'0'
         MVC   8*80+5(1,R5),DOUBLE+1
         NI    8*80+5(R5),C'1'
         OI    8*80+5(R5),C'0'
         SPACE
*  RELOAD PROFILE AREA WITH HISTORICAL DATA
MENUHIST LA    R0,16               RELOAD HISTORY TO PROFILE AREA
         L     R2,DSNHIST@         POINT TO HISTORICAL LIST
         LA    R1,$P_HD#*80(,R5)   POINT TO ITS PROFILE AREA
         L     R6,=A(KAPS)         POINT TO TRANSLATE TABLE
MENHSTLP MVC   0(4,R1),=C'DSN='    PREPARE FOR PROFILE SAVE
         MVC   61(4,R1),=C'VOL='
         MVC   4(56,R1),6(R2)      DATA SET NAME
         MVC   65(6,R1),64(R2)     VOLUME SERIAL NUMBER
         TR    4(67,R1),0(R6)      ENSURE UPPER CASE
         A     R2,SCRNCOLS         POINT TO NEXT PANEL LINE
         LA    R1,80(,R1)          POINT TO NEXT PROFILE RECORD
         C     R2,SHADOWBF         REACHED END OF SCREEN?
         BNL   *+8                 YES, STOP NOW
         BCT   R0,MENHSTLP
         SPACE
*  COMPLETE PANEL INPUT TIDY UP ("OTHER DATA SET" FIELDS)
MENSWEPT L     R2,OTHERDS@         POINT TO &DSN1
         LA    R3,56               GET ITS LENGTH
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   MNSAVDSN,0(R2)      SAVE TEXT FOR REDISPLAY
         A     R2,SCRNCOLS         POINT TO &VOL1
         LA    R3,6                GET ITS LENGTH
         BAS   R14,MENUTIDY        TIDY IT UP
         MVC   MNSAVVOL,0(R2)      SAVE TEXT FOR REDISPLAY
         SPACE
*  DETERMINE IF INPUT IS TO BE PROCESSED YET
         CLC   OP3PT3B,MENOPTN     3.3 WITH NO SELECTION?
         BNE   MENVOLCK            NO
         MVI   MSG,23              ENTER SELECTION
         B     DSELREDO            GO REPROMPT
         SPACE
*  PROCESS INPUT - VOLUME OF OTHER DATA SET
MENVOLCK CLI   0(R2),C' '          ANY VOLUME SPECIFIED?
         BH    MENISVOL            YES
         CLC   OP3PT2C,MENOPTN     3.2 CATALOG?
         BNE   MENVOLOK            NO
         MVI   MSG,213             VOLUME MISSING
         B     DSELCRSR            GO REPROMPT
MENISVOL MVC   $VOLSER,0(R2)       COPY VOLUME SPEC
         LA    R1,5(,R2)           POINT TO LAST CHARACTER OF VOLUME
         CLC   OP3PT2U,MENOPTN     3.2 UNCATALOG?
         BNE   MENVOLLP            NO, GO VERIFY VOLUME SYNTAX
         MVI   MSG,212             VOLUME NOT ALLOWED
         B     DSELCRSR            GO REPROMPT
MENVOLLP CLI   0(R1),C' '          TRAILING BLANK?
         BNE   MENVOLLN            NO
         BCT   R1,MENVOLLP         YES, BACK UP ONE
MENVOLLN SR    R1,R2               GET VOLUME SERIAL LENGTH CODE
         L     R6,=A(DSNCHARS)     POINT TO TRANSLATE TABLE
         LR    R0,R2               SAVE INPUT FIELD ADDRESS
         EX    R1,MENTRT           VALID VOLUME SERIAL?
         BZ    MENVOLIS            YES
         LR    R2,R0               NO, RESTORE INPUT FIELD ADDRESS
         MVI   MSG,200             INVALID VOLUME SERIAL NUMBER
         B     DSELCRSR            GO REPROMPT
MENVOLIS L     R2,OTHERDS@         POINT TO &DSN1
         CLI   0(R2),C' '          OTHER DATA SET NAME SUPPLIED?
         BH    MENVOLOK            YES, GOOD
         MVI   MSG,202             MISSING DATA SET NAME
         B     DSELCRSR            GO REPROMPT
         SPACE
*  HANDLE DYNAMIC ALLOCATION FAILURE
DSELBAD0 SR    R2,R2               CLEAR CURSOR LOCATOR
DSELBAD1 LR    R1,R15              SAVE DYNALLOC RETURN CODE
         LA    R15,MENALMSG        POINT TO MESSAGE ROUTINE
         BASR  R14,R15             REPORT DYNALLOC RESULTS
         CLI   MYDAPB+1,X'18'      DEALLOCATION FAILURE?
         BNE   DSELSHO2            NO
         B     DSELREDO            YES
         SPACE
*  ERROR HANDLING FOR INVALID INPUT FIELDS
MENDSBAD MVI   MSG,201             INVALID DATA SET NAME
         L     R2,OTHERDS@         POINT TO &DSN1
         B     DSELCRSR
         SPACE
*  PROCESS INPUT - OTHER DATA SET NAME
MENVOLOK TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BO    *+8                 YES, PATTERN FLAG FOR "FROM"
         NI    STATUS17,255-$17PAT NO, ENSURE PATTERN FLAG IS RESET
         L     R3,OTHERDS@         POINT TO &DSN1
         CLI   0(R3),C' '          OTHER DATA SET NAME SUPPLIED?
         BNH   MNPROJ00            NO, GO USE PROJECT-LIBRARY-TYPE
         LA    R14,56              GET DSNAME INPUT FIELD LENGTH
         MVI   $DSNAME+2,C' '      BLANK OUT DATA SET NAME
         MVC   $DSNAME+3(43),$DSNAME+2
         CLI   0(R3),QUOTE         QUOTED DATA SET NAME?
         BE    MNDSQUOT            YES
         MVI   DOUBLE+4,0          NO, FLAG NOT QUOTED
         L     R1,REVUPT           POINT TO USER PROFILE TABLE
         USING UPT,R1
         MVC   $DSNAME+2(7),UPTPREFX COPY THE PREFIX
         SR    R0,R0
         ICM   R0,1,UPTPREFL       GET THE PREFIX LENGTH
         CLI   UPTPREFX,C'>'       REALLY AN 8-BYTE PREFIX?
         BNE   MNDSPREF            NO, HAD THE RIGHT ONE
         MVC   $DSNAME+2(8),UPT+33 YES, COPY UPTPREF8
         ICM   R0,1,UPT+41         GET THE PREFIX LENGTH FROM UPTPRF8L
         DROP  R1                  UPT
MNDSPREF LR    R1,R0               COPY THE PREFIX LENGTH
         LA    R1,$DSNAME+2(R1)    POINT PAST PREFIX
         BZ    MNDSREST            HANDLE PROFILE NOPREFIX
         MVI   0(R1),C'.'          SUPPLY PERIOD
         LA    R1,1(,R1)           POINT PAST PERIOD
         B     MNDSREST            TIME TO FINISH LOADING THE DSNAME
MNDSQUOT MVI   DOUBLE+4,1          FLAG QUOTED
         LA    R3,1(,R3)           POINT PAST THE QUOTE
         LA    R1,$DSNAME+2        POINT TO TARGET DATA SET NAME FIELD
         BCT   R14,MNDSREST        DECREASE LENGTH
         B     MENDSBAD            INPUT WAS JUST A QUOTE
MNDSREST LA    R4,0(R14,R3)        POINT PAST DSNAME
         BCTR  R4,0                POINT TO LAST BYTE OF DSNAME
MNDSNDLP CLI   0(R4),C' '          TRAILING BLANK?
         BNE   MNDSEND             NO, FOUND THE END OF THE DSNAME
         BCTR  R4,0                YES, BACK UP A BYTE
         BCT   R14,MNDSNDLP        DECREASE LENGTH
         B     MENDSBAD            INPUT WAS JUST A QUOTE AND BLANK(S)
MNDSEND  CLI   0(R4),QUOTE         TRAILING QUOTE?
         BNE   MNDSQUAL            NO, QUALIFICATION NOW COMPLETE
         CLI   DOUBLE+4,0          QUOTED DATA SET NAME?
         BE    MENDSBAD            NO
         BCTR  R4,0                YES, QUOTE ALLOWED, SO BACK UP ONE
         BCT   R14,MNDSQUAL        ADJUST LENGTH
         B     MENDSBAD            INPUT WAS JUST QUOTES
MNDSQUAL MVC   $MEMBER,MENUBLNK    CLEAR MEMBER NAME
         L     R6,=A(DSNCHARS)     POINT TO TRANSLATE TABLE
         CLI   0(R4),C')'          MEMBER NAME PRESENT?
         BNE   MNDSFILL            NO
         CLC   OP3PT2,MENOPTN      IN OPTION '3.2'?
         BE    MENDSBAD            YES, MEMBER NAME NOT ALLOWED
         LA    R0,9                YES, GET OPEN BRACKET SEARCH SIZE
         BCTR  R4,0                BACK UP A CHARACTER
         BCT   R14,MNOPENLP        ADJUST LENGTH
         B     MENDSBAD            INPUT WAS A BRACKET
MNOPENLP CLI   0(R4),C'('          START OF MEMBER NAME?
         BE    MNMEMNAM            YES
         CLI   0(R4),C' '          IMBEDDED BLANK?
         BE    MENDSBAD            YES
         CLI   0(R4),C'.'          IMBEDDED PERIOD?
         BE    MENDSBAD            YES
         BCTR  R4,0                NO, BACK UP A CHARACTER
         BCTR  R14,0               ADJUST LENGTH
         BCT   R0,MNOPENLP         CONTINUE SEARCH FOR OPEN BRACKET
         B     MENDSBAD            MEMBER NAME IS TOO LONG
MNMEMNAM BCTR  R14,0               GET LENGTH OF DSNAME PROPER
         LA    R15,9
         SR    R15,R0              GET THE SUPPLIED MEMBER NAME LENGTH
         BNP   MENDSBAD            NULL MEMBER NAME
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,MNSETMEM        COPY THE MEMBER NAME
         CLI   $MEMBER,C'0'        NAME STARTS WITH NUMERIC?
         BNL   MENDSBAD            YES
         CLC   $MEMBER,MENALMEM    ASTERISK FOR ALL MEMBERS?
         BE    MNDSSTAR            YES
         LR    R4,R1               SAVE $DSNAME POINTER
         EX    R15,MNTRTMEM        ONLY VALID CHARACTERS FOR MEMBER?
         BZ    MNDSFILL            YES  (R1 AND R2 MODIFIED BY TRT)
         CLI   0(R1),C'*'          GENERIC MASK CHARACTER?
         BE    MENMEMSK            YES
         CLI   0(R1),C'%'          GENERIC MASK CHARACTER?
         BNE   MENDSBAD            NO, INVALID MEMBER NAME
MENMEMSK LR    R1,R4               RESTORE $DSNAME POINTER
         MVC   PUTLINS+4(8),$MEMBER
         OI    STATUS17,$17PAT     FLAG MEMBER NAME MASK PATTERN
MENMEMOK MVC   $MEMBER,MENUBLNK    BLANK SELECTED MEMBER NAME
         B     MNDSFILL            YES
MNDSSTAR CLC   OP3PT3,MENOPTN      IN OPTION '3.3'?
         BNE   MENMEMOK            NO, ALL MEMBERS IS STANDARD
         TM    MENFLG2,$M2FROM     PROCESSING "FROM" DATA SET?
         BO    MENDSBAD            NO, ALREADY HAVE IT
MNDSFILL LTR   R14,R14             STILL HAVE A VALID LENGTH?
         BNP   MENDSBAD            NO, TOO SHORT
         CH    R14,=H'44'
         BH    MENDSBAD            NO, TOO LONG
         BCTR  R14,0               DECREMENT FOR EXECUTE
         EX    R14,MNSETDSN        COPY THE DATA SET NAME
         EX    R14,MNTRTDSN        ONLY VALID CHARACTERS IN DSNAME?
         BNZ   MENDSBAD            NO
         LA    R4,1(R14,R1)        POINT PAST ULTIMATE DSNAME
         LA    R0,$DSNAME+2        POINT TO START OF ULTIMATE DSNAME
         SR    R4,R0               GET LENGTH OF ULTIMATE DSNAME
         STH   R4,$DSNAME          SAVE IT
         SPACE
*  PERFORM LOCATE FOR CATALOG FUNCTIONS
DSELBGIN CLC   OP3PT2A,MENOPTN     3.2 ALLOCATE?
         BE    DSELOCAT            YES
         CLC   OP3PT2C,MENOPTN     3.2 CATALOG?
         BE    DSELOCAT            YES
         CLC   OP3PT2U,MENOPTN     3.2 UNCATALOG?
         BNE   MNOPT1CK            NO
DSELOCAT L     R14,DSELLOC         GET LOCATE CAM LIST SETTINGS
         LA    R15,$DSNAME+2       POINT TO THE DATA SET NAME
         SR    R0,R0
         LA    R1,LOCBUF           POINT TO THE OUTPUT AREA
         STM   R14,R1,LOCATEW      LOAD LOCATE CAM LIST
         LOCATE LOCATEW
         LTR   R15,R15             DATA SET CATALOGED?
         BNZ   DSELNTCT            NO
         MVI   MSG,164             DATA SET ALREADY CATALOGED
         CLI   MENOPTN+3,C'C'      CATALOG REQUEST?
         BE    DSELCTPT            YES, NO ACTION TO TAKE NOW
         CLI   MENOPTN+3,C'A'      ALLOCATE REQUEST?
         BE    DSELCTPT            YES, NO ACTION TO TAKE NOW
         MVC   $VOLSER,LOCBUF+6    COPY THE VOLUME SERIAL
         B     DSELOBTN            GO OBTAIN THE VTOC ENTRY
DSELCTPT L     R2,OTHERDS@         POINT TO OTHER DATA SET
         CLI   0(R2),C' '          OTHER DATA SET NAME PRESENT?
         BH    DSELCRSR            YES, POINT TO IT
         B     DSELHOME            NO, LEAVE CUROR AT HOME
DSELNTCT XC    LOCBUF(256),LOCBUF  CLEAR LOCATE BUFFER RESIDUAL DATA
         CLI   MENOPTN+3,C'A'      ALLOCATE REQUEST?
         BE    DSELMAKE            YES, GO DO IT
         MVI   MSG,165             DATA SET NOT CATALOGED
         CLI   MENOPTN+3,C'U'      UNCATALOG REQUEST?
         BE    DSELCTPT            YES, NO ACTION TO TAKE NOW
*  OBTAIN VTOC ENTRY
DSELOBTN L     R14,DSELOBT         GET OBTAIN CAM LIST SETTINGS
         LA    R15,$DSNAME+2       POINT TO THE DATA SET NAME
         LA    R0,$VOLSER          POINT TO THE VOLUME SERIAL
         LA    R1,MYDSCB           POINT TO THE DSCB BUFFER
         STM   R14,R1,OBTAINW      LOAD OBTAIN CAM LIST
         OBTAIN OBTAINW
         LTR   R15,R15             FOUND THE DSCB?
         BNZ   DSELNTON            NO, DATA SET NOT ONLINE
         MVI   MSG,163             NOT A NON-VSAM DATA SET
         CLI   DS1DSORG+1,0        VSAM?
         BNE   DSELCTPT            YES, NO ACTION TO TAKE NOW
         CLI   MENOPTN+3,C'C'      CATALOG REQUEST?
         BE    MNDSALOC            YES, GO ALLOCATE IT
DSELNTON CLI   MENOPTN+3,C'U'      UNCATALOG REQUEST?
         BE    DSELDNOS            YES, PROCEED
         STC   R15,DOUBLE          STORE THE RETURN CODE
         MVI   MSG,162             VOLUME CANNOT BE ACCESSED
         CLI   DOUBLE,4            VOLUME ONLINE?
         BE    DSELHOME            NO
         MVI   MSG,166             DATA SET NOT ON VOLUME
         B     DSELHOME
*  PERFORM THE "DELETE NOSCRATCH"-LIKE FUNCTION
DSELDNOS L     R14,DSELUNCT        GET UNCATLG CAM LIST SETTINGS
         LA    R15,$DSNAME+2       POINT TO THE DATA SET NAME
         SR    R0,R0
         SR    R1,R1
         STM   R14,R1,CATALOGW     LOAD CATALOG CAM LIST
         CATALOG CATALOGW          UNCATALOG THE DATA SET
         MVI   MSG,170             DATA SET UNCATALOGED
         LTR   R15,R15             SUCCESS?
         BZ    DSELHOME            YES
         STC   R15,DOUBLE          SAVE RETURN CODE
         MVC   MSG+2(20),=CL20'CATALOG RETURN CODE='
         UNPK  MSG+22(3),DOUBLE(2)
         TR    MSG+22(2),MENUHEX-C'0'
         OI    STATUS7,$7BELL      REQUEST AUDIBLE ALARM
         ST    R0,DOUBLE           YES, SAVE REASON CODE
         MVC   MSG+24(8),=CL8' REASON='
         UNPK  MSG+32(3),DOUBLE(2)
         TR    MSG+32(2),MENUHEX-C'0'
         MVI   MSG+34,C' '
         LA    R14,32
         STH   R14,MSG             SET MESSAGE LENGTH
         B     DSELHOME
         SPACE
*  PERFORM ALLOCATION OF A NEW DATA SET
DSELMAKE SR    R1,R1               ZERO PARAMETER POINTER
         L     R15,=V(REVCREAT)    POINT TO ROUTINE ENTRY POINT
         BASR  R14,R15             GO CREATE A NEW DATA SET
         CLI   MSG,172             DATA SET CREATED?
         BNE   DSELREDO            NO, GO RESHOW THE PANEL
         L     R14,OTHERDS@        YES
         LH    R1,$DSNAME          GET THE LENGTH OF THE NEW NAME
         MVI   0(R14),QUOTE        SUPPLY A LEADING QUOTE
         MVC   1(44,R14),$DSNAME+2 LOAD THE DATA SET NAME
         LA    R14,1(R1,R14)       POINT PAST IT
         MVI   0(R14),QUOTE        SUPPLY A TRAILING QUOTE
         B     DSELREDO
         SPACE
*  PERFORM VIRTUAL STORAGE BROWSE REQUEST CHECK FOR OPTION 1
MNOPT1CK CLI   MENOPTN,C'1'        OPTION '1'?
         BNE   MN3PT1CK            NO
         CLI   $VOLSER,C' '        WAS A VOLUME SPECIFIED?
         BH    MNDSALOC            YES, DO NOT BROWSE STORAGE
         CLI   $DSNAME+1,6         IS DATA SET NAME 'ACTIVE'?
         BNE   MNDSALOC            NO, DO NOT BROWSE STORAGE
         CLC   =C'ACTIVE',$DSNAME+2
         BNE   MNDSALOC            NO, DO NOT BROWSE STORAGE
         L     R15,=A(BRVSINIT)    GET BRVS SETUP ROUTINE ENTRY POINT
         BASR  R14,R15             INVOKE IT
         L     R15,=A(REVIEW2)     POINT TO BROWSER VENTRY POINT
         BASR  R14,R15             INVOKE IT
         B     DSELDONE
         SPACE
*  PERFORM EXTRA VALIDATION FOR OPTION 3.1
MN3PT1CK CLC   OP3PT1,MENOPTN      OPTION '3.1'?
         BNE   MNDSALOC            NO, CONTINUE
         CLI   MENOPTN+3,C'C'      COMPRESSING A PDS?
         BE    MNDSALOC            YES, CONTINUE
         L     R3,SCRNCOLS         GET SCREEN WIDTH
         L     R2,PROJECT@         POINT TO &PROJ
         AR    R2,R3               POINT TO &LIB1
         AR    R2,R3               POINT TO &TYPE
         AR    R2,R3               POINT TO &MEM1
         AR    R3,R2               POINT TO &MEM2
         CLI   $MEMBER,C' '        ANY MEMBER SPECIFIED?
         BH    MNMEM1OK            YES, GOOD
         CLI   MENOPTN+3,C' '      BLANK SELECTION?
         BNH   MNDSALOC            YES, CONTINUE
         L     R1,OTHERDS@         NO, POINT TO "OTHER DATA SET" NAME
         CLI   0(R1),C' '          WAS IT USED?
         BNH   MNMISMEM            NO
         LR    R2,R1               YES, POINT TO IT
MNMISMEM MVI   MSG,206             MISSING MEMBER NAME
         B     DSELCRSR            GO SHOW ERROR MESSAGE
MNBADMEM MVI   MSG,205             INVALID MEMBER NAME
         B     DSELCRSR            GO SHOW ERROR MESSAGE
MNMEM1OK CLI   MENOPTN+3,C'N'      RENAMING A MEMBER?
         BNE   MNDSALOC            NO, CONTINUE
         LR    R2,R3               YES, POINT TO &MEM2
         CLI   MNSANMEM,C' '       NEW MEMBER NAME PRESENT?
         BNH   MNMISMEM            NO, IT IS MISSING
         CLC   OP3PT1,MENOPTN      IN OPTION '3.1'?
         BNE   MNPMEMOK            NO
         LR    R3,R2               YES, POINT TO &MEM2
         BAS   R14,DSQVALID        YES, GO VALIDATE R3-> MEMBER NAME
         LTR   R15,R15             HAPPY WITH THE SYNTAX?
         BNZ   MNBADMEM            NO, MOVE CURSOR: R2-> MEMBER NAME
         SPACE
*  ATTEMPT TO ALLOCATE THE SPECIFIED DATA SET
         USING DAPB08,MYDAPB
         USING DAPB18,MYDAPB
MNDSALOC XC    MYDAPB,MYDAPB
         MVI   DA08CD+1,X'08'
         LA    R0,$DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN,MENUBLNK
         MVC   DA08UNIT,MENUBLNK
         MVC   DA08SER,MENUBLNK    CLEAR 8 BYTES
         MVC   DA08SER(6),$VOLSER  SUPPLY SPECIFIED VOLUME
         CLI   $VOLSER,C' '        WAS A VOLUME SPECIFIED?
         BE    MNUNITOK            NO, LEAVE UNIT BLANK
         MVC   DA08UNIT,MENALLDA   YES, SET UNIT=SYSALLDA
MNUNITOK MVC   DA08MNM,MENUBLNK    DO NOT ALLOCATE A MEMBER
         MVC   DA08PSWD,MENUBLNK
         MVI   DA08DSP1,DA08SHR
         TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BO    MNSTATOK            YES, USE DISP=SHR
         LA    R0,DSELX#           GET EXCLUSIVE TABLE COUNT
         LA    R1,DSELXTBL         POINT TO EXCLUSIVE TABLE
MNEXCLLP CLC   0(4,R1),MENOPTN     DOES THIS FUNCTION NEED DISP=OLD?
         BE    MNEXCLDO            YES, DO IT
         LA    R1,4(,R1)           POINT TO NEXT TABLE ENTRY
         BCT   R0,MNEXCLLP
         B     MNSTATOK            USE DISP=SHR
MNEXCLDO MVI   DA08DSP1,DA08OLD    USE DISP=OLD
MNSTATOK LA    R0,DA08KEEP
         CLC   OP3PT2C,MENOPTN     3.2 CATALOG?
         BNE   MNDISPOK            NO, USE DISP=(,KEEP,KEEP)
         LA    R0,DA08CAT          YES, USE DISP=(,CATLG,CATLG)
         MVI   MSG,169             DATA SET CATALOGED
MNDISPOK STC   R0,DA08DPS2         SET NORMAL DISPOSITION
         STC   R0,DA08DPS3         SET ABNORMAL DISPOSITION
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR
         LTR   R15,R15
         BNZ   DSELBAD0            FILE ALLOCATION FAILED
         MVC   $DDNAME,DA08DDN     COPY GENERATED DD NAME
         SPACE
*  HANDLE DYNAMIC ALLOCATION SUCCESS
DSELALCD LA    R1,$DDNAME          POINT TO NEW DDNAME
         L     R15,=A(REVDDLOC)    POINT TO SUBROUTINE
         BASR  R14,R15             FIND NEW DD TIOT ENTRY
         LTR   R15,R15             IS IT ALLOCATED?
         BZ    DSELBAD0            NO, BUT HOW?
         XC    OPDL(OPDLL),OPDL    YES, ZERO THE OPDL
         SR    R1,R1
         ICM   R1,7,17(R15)        GET THE UCB ADDRESS
         ST    R1,$UCBAD           SAVE IT
         MVC   $VOLSER,28(R1)      LOAD THE VOLUME SERIAL NUMBER
         MVC   DSNAIM(46),$DSNAME  PRIME DATA SET NAME FOR HEADING ETC.
         XC    MYDSCB,MYDSCB       INVALIDATE VTOC ENTRY COPY
         XC    DSORG,DSORG         DSORG IS CURRENTLY UNKNOWN
         CLI   18(R1),X'20'        DASD DATA SET?
         BE    DSELACHK            YES, GO CHECK ACCESS LEVEL NEEDED
         MVC   $MEMBER,MENUBLNK    NO, CLEAR MEMBER NAME
         CLC   OP3PT1,MENOPTN      IN OPTION '3.1'?
         BE    DSELNTPO            YES, NOT DASD ALSO MEANS NOT A PDS
         CLI   18(R1),X'80'        TAPE DATA SET?
         BNE   DSELLIST            NO, DON'T KNOW WHAT IT IS
         OI    STATUS2,$2TAPE      YES, FLAG AS MAGNETIC TAPE FILE
         TM    19(R1),X'80'        3480 IN FULL FUNCTION MODE?
         BNO   DSELLIST            NO, BYPASS OBTAIN AND FASTPATH
         OI    STATUS2,$2CART      YES, HI-SPEED SEARCH & MSGDISP AVAIL
         B     DSELLIST            BYPASS OBTAIN AND "FASTPATH"
DSELACHK CLC   OP3PT1C,MENOPTN     3.1 COMPRESS?
         BE    DSELUPDT            YES
         TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BO    DSELUPDT            YES
         CLC   OP3PT5,MENOPTN      OPTION '3.5'?
         BE    DSELUPDT            YES
         CLC   OP3PT2B,MENOPTN     DATA SET INFORMATION?
         BE    DSELDASD            YES
         CLC   OP3PT2,MENOPTN      DATA SET ALTERATION?
         BE    DSELUPDT            YES
         CLC   OP3PT3M,MENOPTN     OPTION '3.3' MOVE?
         BNE   DSELDASD            NO
         TM    DS1DSORG,DS1DSGPO   DSORG = PO ?
         BNO   DSELALTR            NO, DATA SET WILL BE DELETED
DSELUPDT OI    STATUS13,$13COMP    NEED UPDATE ACCESS
         B     DSELDASD
DSELALTR OI    STATUS14,$14ALT     NEED ALTER ACCESS
DSELDASD MVI   DATAKV+1,0          CLEAR 'DATA' OPERAND
         L     R15,=A(REVDASD)     POINT TO DASD DATA SET INIT. ROUTINE
         BASR  R14,R15             CALL IT - ONLY R9 TO R13 PRESERVED
         NI    STATUS13,255-$13COMP
         NI    STATUS14,255-$14ALT RESET ACCESS LEVEL FLAGS
         LTR   R15,R15             SUCCESS?
         BNZ   DSELFREE            NO, GO DEALLOCATE IT
         CLC   OP3PT1,MENOPTN      IN OPTION '3.1'?
         BNE   DSEL33CK            NO
         TM    DS1DSORG,DS1DSGPO   DSORG = PO ?
         BO    DSELLIST            YES, PROCEED
DSELNTPO MVI   MSG,38              DATA SET IS NOT PARTITIONED
         B     DSELFREE            GO DEALLOCATE IT
DSEL33CK CLC   OP3PT3,MENOPTN      IN OPTION '3.3'?
         BNE   DSEL32CK            NO
         TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BNO   DSEL33DF            NO
         CLC   $VOLSER,FROMAREA+$VOLSER-$PASSWRD
         BNE   DSEL33DF            DATA SETS ON DIFFERENT VOLUMES
         CLC   DS1EXT1,DS1EXT1-DS1FMTID+FROMDSCB
         BNE   DSEL33DF            DIFFERENT DATA SETS ON SAME VOLUME
         CLI   MENOPTN+3,C'M'      PERFORMING A MOVE?
         BE    DSEL33SM            YES, SAME DATA SETS ON SAME VOLUME
         TM    DS1DSORG,DS1DSGPO   PARTITIONED DATA SET?
         BNO   DSEL33SM            NO, SAME DATA SET MEANS SAME DATA
         CLI   FROMAREA+$MEMBER-$PASSWRD,C' '
         BE    DSEL33SM            NO "FROM" MEMBER SPECIFIED
         CLI   $MEMBER,C' '
         BE    DSEL33SM            NO "TO" MEMBER SPECIFIED
         CLC   $MEMBER,FROMAREA+$MEMBER-$PASSWRD
         BNE   DSEL33DF            DIFFERENT MEMBERS OF SAME PDS
DSEL33SM MVI   MSG,218             SPECIFY "TO" DATA SET
         B     DSELFREE            GO DEALLOCATE IT
DSEL33DF TM    DS1DSORG+1,DS1ACBM  VSAM?
         BO    DSEL33VS            YES, SKIP NON-VSAM CHECKS
         LA    R0,X'0000FF'
         CLM   R0,7,DS1LSTAR       SYSCTLG?
         BE    DSELUNSP            YES, UNSUPPORTED
         ICM   R0,3,DS1BLKL        ANY BLOCK SIZE?
         BZ    DSELUNSP            NO, CAN'T PROCESS IT
         TM    DS1RECFM,DCBRECF    RECFM = F OR U ?
         BO    DSELDSRG            YES
         TM    DS1RECFM,DCBRECV+DCBRECSB   SPANNED RECORDS?
         BNO   DSELDSRG            NO
         TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BNO   DSELDSRG            NO, GIVE IT A TRY
         MVI   MSG,126             SPANNED RECORDS NOT SUPPORTED
         B     DSELFREE
DSELDSRG TM    DS1DSORG,DS1DSGPS   SEQUENTIAL DATA SET?
         BO    DSELLIST            YES, SHOULD BE ABLE TO HANDLE IT
         TM    DS1DSORG,DS1DSGPO   PARTITIONED DATA SET?
         BNO   DSEL33VS            NO
         TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BO    DSELLIST            YES, SHOULD BE ABLE TO HANDLE IT
         CLI   MENOPTN+3,C'M'      PERFORMING A MOVE?
         BNE   DSELLIST            NO, A COPY SHOULD BE ALRIGHT
         AIF   (NOT &ENV390).DSELPEM
         TM    DS1SMSFG,DS1PDSE    PDSE?
         BO    DSELNTMV            YES, NOT SUPPORTED FOR A MOVE
.DSELPEM ANOP
         CLI   $MEMBER,C'*'        REQUEST TO MOVE ALL MEMBERS?
         BNE   DSELLIST            NO, CAN MOVE SELECTIONS FROM LIST
DSELNTMV MVI   MSG,220             NOT SUPPORTED FOR MOVE - TRY COPY
         B     DSELFREE            GO DEALLOCATE IT
DSEL33VS TM    MENFLG2,$M2FROM     PROCESSING "TO" DATA SET?
         BO    DSELUNSP            YES, DATA SET IS UNSUITABLE
         TM    DS1DSORG,DS1DSGDA   COPYING FROM DIRECT ACCESS?
         BO    DSELLIST            YES, GIVE IT A TRY
         TM    DS1DSORG+1,DS1ACBM  COPYING FROM VSAM?
         BNO   DSELUNSP            NO, UNSUPPORTED
         CLI   MENOPTN+3,C'M'      MOVING FROM VSAM?
         BNE   DSELLIST            NO, GIVE COPYING FROM VSAM A TRY
DSELUNSP MVI   MSG,215             UNSUPPORTED ORGANIZATION
         B     DSELFREE            GO DEALLOCATE IT
DSEL35CK CLC   OP3PT5,MENOPTN      IN OPTION '3.5'?
         BNE   DSELLIST            NO, PROCEED
         TM    DS1DSORG,DS1DSGPO   DSORG = PO ?
         BNO   DSELNTPO            NO
         TM    DS1RECFM,DCBRECU    RECFM = U ?
         BNO   DSELLIST            NO, PROCEED
         MVI   MSG,77              RECFM NOT FIXED OR VARIABLE
         B     DSELFREE            GO DEALLOCATE IT
DSEL32CK CLC   OP3PT2,MENOPTN      IN OPTION '3.2'?
         BNE   DSEL35CK            NO
         CLI   MENOPTN+3,C' '      DATA SET ALTERATION REQUESTED?
         BNH   DSELLIST            NO, PROCEED
         TM    DS1DSORG+1,DS1ACBM  DSORG = VS?
         BO    DSELVSAM            YES, NOT ALLOWED
         LA    R0,X'0000FF'
         CLM   R0,7,DS1LSTAR       SYSCTLG?
         BNE   DSELLIST            NO, PROCEED
DSELVSAM MVI   MSG,163             NOT A NON-VSAM DATA SET
         B     DSELFREE            GO DEALLOCATE IT
         SPACE
*  RECORD THE DATA SET IN THE DATA SET HISTORY DISPLAY LIST
DSELLIST CLI   MNSAVDSN,C' '       WAS "OTHER DATA SET" USED?
         BNH   DSESAVED            NO, DO NOT UPDATE ITS HISTORY
         MVI   DSPLUS+2,C' '
         MVC   DSPLUS+3(61),DSPLUS+2
         MVC   DSPLUS(46),$DSNAME  COPY DATA SET NAME
         CLI   $MEMBER,C' '        ANY MEMBER NAME?
         BNH   DSELPLUS            NO
         LH    R1,DSPLUS           YES, GET DATA SET NAME LENGTH
         LA    R1,DSPLUS+2(R1)     POINT PAST DATA SET NAME
         MVI   0(R1),C'('
         MVC   1(8,R1),$MEMBER     INCLUDE MEMBER NAME
DSELMNLP CLI   8(R1),C' '          TRAILING BLANK?
         BNE   DSELBRAK            NO, FOUND END OF MEMBER NAME
         BCT   R1,DSELMNLP         YES, BACK UP ONE
DSELBRAK MVI   9(R1),C')'          COMPLETE THE DATA SET NAME STRING
DSELPLUS L     R5,MENPROF@         POINT TO PROFILE DATA
         LA    R1,$P_HD#*80(,R5)   POINT TO RECORDED DATA SETS
         LA    R3,DSPLUS+2         POINT TO THE COMPLETE DATA SET NAME
         L     R4,OTHERDS@         POINT TO &DSN1
         A     R4,SCRNCOLS         POINT TO &VOL1
         LA    R0,$P_DS#-1         LOAD THE NUMBER TO CHECK
DSELOOP3 CLC   0(54,R3),4(R1)      DOES DATA SET NAME MATCH?
         BNE   DSENOTHS            NO, NOT THIS ONE
         CLC   0(6,R4),65(R1)      DOES VOLUME SERIAL MATCH?
         BE    DSEDEMOT            YES, FOUND THE ONE TO DISCARD
DSENOTHS LA    R1,80(,R1)          NO, POINT TO THE NEXT ONE
         BCT   R0,DSELOOP3         KEEP LOOKING
DSEDEMOT LA    R14,$P_DS#-1        NOW START THE RECORDING PROCESS
         SR    R14,R0              GET NUMBER TO BE DEMOTED
         BZ    DSESAVED            NEWEST COMMAND MATCHES TOP ENTRY
         LA    R0,80               GET ARRAY ENTRY SIZE
         LR    R2,R1               POINT TO ENTRY TO OVERLAY
DSELOOP4 SR    R2,R0               POINT TO ENTRY TO DEMOTE
         MVC   0(80,R1),0(R2)      DEMOTE THE COMMAND
         LR    R1,R2               POINT TO VACATED ENTRY
         BCT   R14,DSELOOP4        KEEP SHUFFLING THE COMMANDS DOWN
         MVC   4(54,R1),0(R3)      RECORD THE NEWEST DATA SET NAME
         MVC   65(6,R1),0(R4)      RECORD THE NEWEST VOLUME SERIAL
DSESAVED EQU   *
         SPACE
*  PROCESS THE DATA SET
         MVC   DSORG,DS1DSORG      SET DSORG FROM VTOC ENTRY
         MVC   PUTLINS(4),MENOPTN  PROMULGATE RFE OPTION STATUS
         L     R1,MENPROF@         POINT TO THE PROFILE DATA
         CLC   OP3PT1,MENOPTN      OPTION '3.1'?
         BH    DSELPROC            NO, GO DO EDIT, VIEW OR BROWSE
         BL    DSELACTN            NO, GO DO OTHER ACTION
         CLI   MENOPTN+3,C'B'      BROWSING A MEMBER?
         BE    DSELREVW            YES, GO DO IT
         CLI   MENOPTN+3,C'C'      COMPRESSING A PDS?
         BE    DSELCOMP            YES, GO DO IT
         TM    STATUS17,$17PAT     FILTERING MEMBERS?
         BO    DSELFILT            YES, GO DO IT
         MVC   PUTLINS+4(8),$MEMBER
         MVC   PUTLINS+12(8),MNSANMEM
DSELFILT L     R15,=A(REVPDS)      POINT TO ENTRY POINT
         MVI   DATAKV+1,0          CLEAR 'DATA' OPERAND
         CLI   MENOPTN+3,C' '      REQUEST SPECIFIED?
         BH    DSELDSET            YES, GO PERFORM THE REQUEST
         CLI   $MEMBER,C' '        MEMBER SPECIFIED?
         BH    DSELREVW            YES, GO BROWSE THAT MEMBER
         B     DSELDSET            GO BROWSE THE MEMBER LIST
DSELACTN L     R7,=A(DSELCOPY)     POINT TO OPTION 3.3 PROCESSOR
         CLC   OP3PT3,MENOPTN      IN OPTION 3.3?
         BER   R7                  YES
         CLC   OP3PT5,MENOPTN      IN OPTION 3.5?
         BE    DSELSTAT            YES
         CLC   OP3PT2C,MENOPTN     HERE TO CATALOG?
         BE    DSELFREE            YES, GO DO IT
         CLC   OP3PT2R,MENOPTN     HERE TO RENAME?
         BNE   DSELDSCB            NO
         L     R15,=A(REVRENAM)    POINT TO RENAME ROUTINE
         BASR  R14,R15             INVOKE IT
         CLI   MSG,29              REQUEST CANCELLED?
         BE    DSELFREE            YES, GO FREE THE DATA SET
         XC    MNSAVDSN,MNSAVDSN   NO, RESET SAVED DATA SET NAME
         MVI   MNSAVDSN,QUOTE      FILL IN NEW DATA SET NAME
         MVC   MNSAVDSN+1(44),$DSNAME+2
         LH    R14,$DSNAME
         LA    R14,MNSAVDSN+1(R14)
         MVI   0(R14),QUOTE
         L     R14,OTHERDS@
         MVC   0(L'MNSAVDSN,R14),MNSAVDSN
         B     DSELFREE            GO FREE THE DATA SET
DSELSTAT OI    STATUS15,$153PT5    FLAG OPTION '3.5' ACTIVE
         L     R15,=A(REVPDS)      POINT TO ENTRY POINT
         B     DSELDSET            GO DISPLAY MEMBER STATISTICS
DSELDSCB L     R15,=A(REVDSCB)     POINT TO ENTRY POINT
         MVI   STATUS11,X'FF'      SET FINALITY FLAG
         CLI   MENOPTN+3,C'D'      DELETE REQUESTED?
         BE    DSELDSET            YES, GO DO IT
         MVI   STATUS11,0          RESET FINALITY FLAG
         CLI   MENOPTN+3,C' '      REQUEST SPECIFIED?
         BNH   DSELDSET            NO, GO SHOW DATA SET INFORMATION
DSELPROC OI    STATUS11,$11ED      FLAG EDIT
         L     R15,=A(REVEDIT)     POINT TO ENTRY POINT
         CLI   MENOPTN,C'2'        HERE TO EDIT?
         BE    DSELEDIT            YES
         NI    STATUS11,255-$11ED-$11VIEW
         TM    7*80+5(R1),X'01'    HERE TO VIEW?
         BNO   DSELREVW            NO
         OI    STATUS11,$11VIEW    YES
DSELEDIT TM    DS1DSORG,255-DS1DSGPS-DS1DSGPO-DS1DSGU
         BNZ   DSELBSUB            REVIEW IF EXOTIC DSORG
         CLI   DS1DSORG+1,0
         BNE   DSELBSUB            REVIEW IF EXOTIC DSORG
         CLI   DS1KEYL,0
         BNE   DSELBSUB            REVIEW IF KEYED
         TM    MENFLGS,$MFRFU      RECFM = U IN CONCATENATION?
         BO    DSELBSUB            YES
         TM    DS1RECFM,DCBRECU    RECFM = U?
         BNO   DSELPOST            NO, HAVE CORRECT ROUTINE
DSELBSUB MVI   MSG,133             BROWSE SUBSTITUTED
         NI    STATUS11,255-$11ED-$11VIEW
DSELREVW OI    STATUS8,$8_S        BOUNCE BACK HERE IF BLDL FAILS
         XC    MSGDSN,MSGDSN       RESET R OF TTR AS "NO MATCH" FLAG
         L     R15,=A(REVIEW2)     POINT TO ENTRY POINT
         TM    8*80+5(R1),X'01'    'DATA' REQUESTED?
         BNO   DSELPOST            NO
         MVI   DATAKV+1,1          YES
DSELPOST TM    DS1DSORG,DS1DSGPO   DSORG = PO?
         BNO   DSELDSET            NO, HAVE CORRECT ROUTINE
         CLI   $MEMBER,C' '        MEMBER SPECIFIED?
         BNE   DSELDSET            YES, HAVE CORRECT ROUTINE
         XC    $MEMBER,$MEMBER     DISPLAY MEMBER LIST FROM TOP
         L     R15,=A(REVPDS)      POINT TO ENTRY POINT
         MVI   DATAKV+1,0          CLEAR 'DATA' OPERAND
         AIF   (NOT &ENV390).DSELDS
         TM    DS1SMSFG,DS1PDSE    PDSE?
         BNO   DSELDSET            NO, HAVE CORRECT ROUTINE
         TM    DS1RECFM,DCBRECU    RECFM = U?
         BNO   DSELDSET            NO, HAVE CORRECT ROUTINE
         L     R15,=A(REVPDSE)     POINT TO ENTRY POINT
.DSELDS  ANOP
DSELDSET BASR  R14,R15             INVOKE DATA SET PROCESSOR
         CLI   STATUS11,X'FF'      FINALITY FLAG SET?
         BE    DSELDLET            YES, GO FINALIZE DELETION
         NI    STATUS11,255-$11ED-$11VIEW
         MVI   DATAKV+1,0          CLEAR 'DATA' OPERAND
         NI    STATUS15,255-$153PT5    RESET FLAG
         TM    STATUS7,$7SAVE      WAS DATA CHANGED THIS SESSION?
         BNO   DSELSVOK            NO
         NI    STATUS7,255-$7SAVE  YES, RESET FLAG
         MVI   MSG,75              DATA SAVED
DSELSVOK CLC   OP3PT1,MENOPTN      IN OPTION '3.1'?
         BNE   DSELFREE            NO
         SPACE
*  REQUIREMENTS ARE:
*    - CLEAR MEMBER NAME FIELDS IF SUCCESSFULLY PROCESSED.
*    - LEAVE 'N' IN COMMAND AREA IF MEMBER RENAME FAILED.
*      THIS IS TO SIMPLIFY RETRY AFTER RENAME TYPOS.
*    - CLEARING 'B' IS ALRIGHT BECAUSE BLANK WORKS JUST AS WELL.
*    - ALWAYS CLEAR 'D' FROM COMMAND AREA TO ENSURE THAT
*      THE DELETE IS ALWAYS EXPLICITLY SELECTED, AND
*      BECAUSE THE MEMBER NAME MUST ALSO BE TYPED IN
*      NO CONFIRMATION WILL BE REQUESTED.
*  UNLIKE IN THE MEMBER DISPLAY WHERE THE 'D' SELECTION CODE
*  ONLY WORKS FOR PDS MEMBERS BECAUSE RESTORE IS AVAILABLE,
*  OPTION 3.1 'D' CAN ALSO DELETE PDSE MEMBERS.
*
         CLI   PUTLINS+3,C'N'      OPTION 3.1 'N'?
         BE    DSELNEWM            YES
         CLI   MNSAVDSN,C' '       WAS "OTHER DATA SET" PROCESSED?
         BH    DSELFREE            YES, LEAVE MEMBER FIELDS AS IS
         BE    DSELOLDM            YES
DSELNEWM CLI   MSG,208             MEMBER RENAMED?
         BE    DSELCLRM            YES, SUCCESS SO RESET PANEL STATUS
         OI    STATUS14,$14RCL     RECALL SELECTION FOR POSSIBLE RETRY
         CLI   PUTLINS+12,2        NEW MEMBER NAME EVENT?
         BNE   DSELOLDM            NO
         OI    MENFLGS,$MFNMN      YES, FLAG FOR CURSOR PLACEMENT
         MVI   PUTLINS+12,0        CLEAR INTERFACE BYTE FOR NEXT TIME
DSELOLDM CLI   MSG,36              MEMBER NOT FOUND?
         BE    DSELFREE            YES
         CLI   MSG,37              BLDL FAILED?
         BE    DSELFREE            YES
         CLI   MSG,54              MEMBER IN USE?
         BE    DSELFREE            YES
         CLI   MSG,142             MEMBER NAME ALREADY EXISTS?
         BE    DSELFREE            YES
DSELCLRM XC    MNSAVMEM(16),MNSAVMEM  NO, CLEAR SPECIFIED MEMBER(S)
         SPACE
*  ATTEMPT TO DEALLOCATE THE PROCESSED DATA SET
DSELFREE NI    MENFLGS,255-$MFRFU  RESET RECFM U CONCATENATION FLAG
         NI    STATUS2,255-$2TAPE-$2CART
         TM    MENFLGS,$MFCAT      CONCATENATED FILE PROCESSED?
         BO    DSELDCAT            YES
         CLI   $DDNAME,C' '        ANY FILE TO FREE?
         BNH   DSELDONE            NO, SO SKIP DEALLOCATION
         XC    MYDAPB,MYDAPB       CONSTRUCT DEALLOCATION REQUEST
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,$DDNAME     DDNAME
         MVC   DA18MNM,MENUBLNK    MEMBER NAME
         MVC   DA18SCLS,MENUBLNK   SYSOUT CLASS IS 2-BYTE FIELD
         CLI   STATUS11,X'FF'      FINALITY FLAG SET?
         BNE   DSELDISP            NO, DO NOT DELETE THE DATA SET
         MVI   DA18DPS2,DA18DEL    SET DISPOSITION TO DELETE
         MVI   DA18CTL,DA18PERM    JUST IN CASE IT HELPS
DSELDISP MVI   STATUS11,0          RESET DATA SET PROCESSOR FLAGS
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR TO FREE FILE
         LTR   R15,R15             SUCCESS?
         BNZ   DSELBAD0            NO, GO REPORT FAILURE
DSELDONE ICM   R1,15,OPD0          POINT TO THE COMMAND
         BZ    DSELREDO            THERE IS NONE
         CLI   0(R1),C'='          INTER-OPTION JUMP?
         BNE   DSELREDO            NO, RESHOW SELECTION PANEL
         TM    MENFLG2,$M2FROM     IS A "FROM" FILE PRESENT?
         BNO   DSELSAVE            NO, GO LEAVE OPTION
DSELFROM MVC   $PASSWRD($DSVARSZ),FROMAREA
DSELFRM2 L     R5,MENPROF@         POINT TO PROFILE DATA
**       MVC   1*80+5(8,R5),FROMPROJ
**       MVC   2*80+5(8,R5),FROMLIB1
**       MVC   6*80+5(8,R5),FROMTYPE
         XC    FROMAREA(FROMALEN),FROMAREA
         XC    MNSAVSEL,MNSAVSEL   RESET LOCAL PROMPT FIELDS
         MVC   MNSAVMEM,$MEMBER    RESTORE "FROM" MEMBER
         NI    MENFLG2,255-$M2FROM "FROM" DETAILS NOW RELOADED
         TM    MENFLG2,$M2FRDS     WAS "FROM" AN "OTHER" DATA SET?
         BNO   DSELFREE            NO, GO FREE "FROM" DATA SET
         LA    R1,$P_HD#*80        GET SELECTED DATA SET ENTRY OFFSET
         TM    MENFLG2,$M2TODS     WAS "TO" AN "OTHER" DATA SET?
         BNO   DSELFREE            NO, GO FREE "FROM" DATA SET
         LA    R1,80(,R1)          YES, GO PAST IT
         AL    R1,MENPROF@         POINT TO SELECTED DATA SET ENTRY
         CLI   4(R1),C' '          ANY DATA SET SAVED THERE?
         BNH   DSELFREE            NO, NO RECALL TO PERFORM
         MVI   MNSAVDSN,QUOTE      YES, PROVIDE LEADING QUOTE AND
         MVC   MNSAVDSN+1(54),4(R1)     FULLY-QUALIFIED DATA SET NAME
         MVC   MNSAVVOL,65(R1)     ALSO RECALL VOLUME SERIAL NUMBER
         B     DSELFREE            GO FREE "FROM" DATA SET
         SPACE
*  DETERMINE IF DELETION IS TO PROCEED
DSELDLET MVI   MSG,171             DATA SET DELETED
         CLI   REPLY,ENTERAID      WAS DELETION CONFIRMED?
         BE    DSELFREE            YES, GO DO IT
         MVI   STATUS11,0          NO, RESET FINALITY FLAG
         MVI   MSG,29              REQUEST CANCELLED
         B     DSELFREE            GO FREE THE DATA SET
         SPACE
*  DECONCATENATE THE CONCATENATED FILE
DSELARLX MVI   MSG,123             REQUEST ABORTED - STORAGE FULL
         USING DAPB10,MYDAPB
DSELDCAT XC    MYDAPB,MYDAPB       CONSTRUCT DECONCATENATION REQUEST
         MVI   DA10CD+1,X'10'
         MVC   DA10DDN,$DDNAME     DDNAME
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR TO FREE FILE
         SPACE
*  DEALLOCATE EACH OF THE CONSTITUENT FILES
         LA    R2,4                GET MAXIMUM PLT COUNT
         LA    R5,PLT#01           POINT TO FIRST PLT AREA
DSDEALLP CLI   $PLTDDN(R5),C' '    ANY DD IN THIS AREA?
         BNH   DSDEALNX            NO
         XC    MYDAPB,MYDAPB       CONSTRUCT DEALLOCATION REQUEST
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,$PLTDDN(R5) YES, LOAD IT
         MVC   DA18MNM,MENUBLNK    MEMBER NAME
         MVC   DA18SCLS,MENUBLNK   SYSOUT CLASS IS 2-BYTE FIELD
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR TO FREE FILE
DSDEALNX LA    R5,$PLTLEN(,R5)     POINT TO NEXT PLT AREA
         BCT   R2,DSDEALLP
         NI    MENFLGS,255-$MFCAT  CONCATENATED FILE NOW FREED
         ICM   R1,15,ARLAREA       POINT TO THE ARL AREA
         BZ    DSELDONE            NO SUCH AREA, ALL FREED
         SR    R0,R0               CLEAR FOR INSERT
         ICM   R0,7,ARLRLEN        LOAD ARL SIZE
         IC    R15,ARLPOOL         LOAD ARL SUBPOOL
         FREEMAIN RU,LV=(0),A=(1),SP=(15)   FREE ARL AREA
         XC    ARL(36),ARL         RESET ARL STATUS
         B     DSELDONE            ALL PLT AREAS FREED
         SPACE
*
*    PROCESS PROJECT / LIBRARY / TYPE FIELDS
*
         SPACE
MNPROJIN MVI   MSG,203             INVALID QUALIFIER
         B     MNPROJER
MNPROJMS MVI   MSG,204             MISSING QUALIFIER
MNPROJER LR    R2,R3               POINT TO FIELD IN ERROR
         B     DSELCRSR            GO MOVE CURSOR TO RELEVANT FIELD
PRJQUALD MVC   0(0,R5),0(R3)       <<< EXECUTED >>>
         SPACE
*        VALIDATE &PROJ, &LIB# AND &TYPE
MNPROJ00 XC    PLTCOUNT,PLTCOUNT   NO ACTIVE PLT AREAS YET
         XC    DOUBLE,DOUBLE       CLEAR RESIDUAL DATA
         LA    R5,PLT#01+$PLTDSN   POINT TO FIRST PLT DSNAME AREA
         ST    R5,DOUBLE           SAVE ITS ADDRESS
         LA    R4,1                GET CONCATENTATION LIMIT
         CLI   MENOPTN,C'1'        OPTION '1' OR '2'?
         BL    MNPQLP2             NO
         CLI   MENOPTN,C'2'
         BH    MNPQLP2             NO
         LA    R4,4                YES, GET CONCATENTATION LIMIT
MNPQLP2  LA    R0,3                GET QUALIFIER COUNT
         L     R3,PROJECT@         POINT TO &PROJ
         L     R5,DOUBLE           POINT TO FIRST PLT DSNAME AREA
         MVI   0(R5),0             CLEAR THE FIRST BYTE AS A FLAG
         LA    R5,2(,R5)           POINT PAST THE LENGTH INDICATOR
         MVI   0(R5),C' '          BLANK THE ACTUAL NAME AREA
         MVC   1(25,R5),0(R5)
MNPQLP1  CLI   0(R3),C' '          QUALIFIER PRESENT?
         BE    MNPROJMS            NO, IT IS MISSING
         CH    R0,=H'2'            PROCESSING &LIB#?
         BNE   MNQLBOK1            NO
         AH    R3,DOUBLE+4         YES, POINT TO CORRECT ONE
         CLI   0(R3),C' '          QUALIFIER PRESENT?
         BNE   MNQLBOK1            YES, GO VALIDATE IT
         L     R14,DOUBLE          POINT TO DSNAME "FLAG"
         MVI   0(R14),X'FF'        INDICATE VACANT FIELD
         B     MNQLBKOT            GO BACK OUT OF ADJUSTMENT
MNQLBOK1 BAS   R14,DSQVALID        GO VALIDATE IT
         LTR   R15,R15             VALID?
         BNZ   MNPROJIN            NO
         EX    R1,PRJQUALD         LOAD QUALIFIER INTO DSNAME
         LA    R5,1(R1,R5)         POINT PAST LOADED QUALIFIER
         MVI   0(R5),C'.'          APPEND A PERIOD
         LA    R5,1(,R5)           POINT PAST THE PERIOD
         CH    R0,=H'2'            PROCESSING &LIB#?
         BNE   MNQLBOK2            NO
MNQLBKOT SH    R3,DOUBLE+4         YES, UNDO PREVIOUS ADJUSTMENT
MNQLBOK2 A     R3,SCRNCOLS         POINT TO NEXT QUALIFIER
         BCT   R0,MNPQLP1          PROCESS NEXT QUALIFIER
         L     R1,DOUBLE           POINT TO THE DSNAME FIELD
         CLI   0(R1),X'FF'         VACANT CONCATENATION ENTRY?
         BE    MNPQNX2             YES, DO NOT OVERLAY THE FLAG
         BCTR  R5,0                POINT TO TRAILING PERIOD
         MVI   0(R5),C' '          CLEAR IT
         LA    R0,2(,R1)           POINT PAST THE LENGTH INDICATOR
         SR    R5,R0               GET THE DSNAME LENGTH
         STH   R5,0(,R1)           SAVE IT
         LA    R0,1
         AH    R0,PLTCOUNT         COUNT THE ACTIVE PLT AREAS
         STH   R0,PLTCOUNT
MNPQNX2  LA    R1,$PLTLEN(,R1)     POINT TO NEXT PLT AREA'S NAME
         ST    R1,DOUBLE           SAVE IT FOR NEXT TIME THROUGH
         LA    R1,15               GET COLUMNS TO NEXT &LIB TAB
         AH    R1,DOUBLE+4         INCREASE ADJUSTMENT SIZE
         STH   R1,DOUBLE+4         SAVE IT
         BCT   R4,MNPQLP2          PROCESS NEXT CONCATENATION
         CLI   0(R3),C' '          MEMBER PRESENT?
         BE    MNPMEMOK            NO, THAT'S FINE
         BAS   R14,DSMVALID        YES, GO VALIDATE IT
         LTR   R15,R15             HAPPY WITH THE SYNTAX?
         BZ    MNPMEMOK            YES
         MVI   MSG,205             INVALID MEMBER NAME
         B     MNPROJER
         SPACE
*    DETERMINE ALLOCATION ACTION
MNPMEMOK MVI   $DSNAME+2,C' '      BLANK OUT DATA SET NAME
         MVC   $DSNAME+3(43),$DSNAME+2
         LH    R1,PLTCOUNT         GET ACTIVE PLT AREA COUNT
         LA    R0,1                GET ONE
         L     R2,PROJECT@         POINT TO &PROJ
         CR    R1,R0               ONE PLT?
         BL    DSELCRSR            NOT EVEN THAT - NOT SURE HOW
         MVC   $MEMBER,0(R3)       LOAD MEMBER SPECIFICATION
         BH    MNPALLOC            NO, MORE, GO ALLOCATE EACH ONE
         MVC   $DSNAME(28),PLT#01+$PLTDSN
         MVC   $VOLSER,MENUBLNK    CLEAR VOLUME SERIAL
         B     DSELBGIN            GO PROCESS ONE DATA SET AS USUAL
         SPACE
*    ALLOCATE EACH ACTIVE PLT DATA SET
MNPALLOC XC    DOUBLE,DOUBLE       RESET PLT TRACKING STATUS
         LA    R5,PLT#01           POINT TO THE FIRST PLT
MNPLTALP CLI   $PLTDSN(R5),X'FF'   VACANT ENTRY?
         BE    MNPLTANX            YES, GO ALLOCATE NEXT
         CLI   $PLTDSN+1(R5),0     ZERO LENGTH DATA SET NAME?
         BE    MNPLTANX            YES, GO ALLOCATE NEXT
         MVC   $DSNAME(28),$PLTDSN(R5)  LOAD DATA SET NAME
         XC    MYDAPB,MYDAPB
         MVI   DA08CD+1,X'08'
         LA    R0,$DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN,MENUBLNK
         MVC   DA08UNIT,MENUBLNK
         MVC   DA08SER,MENUBLNK
         MVC   DA08MNM,MENUBLNK    DO NOT ALLOCATE A MEMBER
         MVC   DA08PSWD,MENUBLNK
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR
         LTR   R15,R15
         BNZ   MNPLTDYN            FILE ALLOCATION FAILED
         MVC   $DDNAME,DA08DDN     LOAD DDNAME
         MVC   $PLTDDN(8,R5),DA08DDN
         MVI   MSG,38              DATA SET IS NOT PARTITIONED
         LA    R1,$DDNAME          POINT TO NEW DDNAME
         L     R15,=A(REVDDLOC)    POINT TO SUBROUTINE
         BASR  R14,R15             FIND NEW DD TIOT ENTRY
         LTR   R15,R15             IS IT ALLOCATED?
         BZ    MNPLTBAD            NO, BUT HOW?
         SR    R1,R1
         ICM   R1,7,17(R15)        GET THE UCB ADDRESS
         ST    R1,$UCBAD           SAVE IT
         ST    R1,$PLTUCB(,R5)
         MVC   $VOLSER,28(R1)      LOAD THE VOLUME SERIAL NUMBER
         MVC   $PLTVOL(6,R5),28(R1)
         XC    MYDSCB,MYDSCB       INVALIDATE VTOC ENTRY COPY
         CLI   18(R1),X'20'        DASD DATA SET?
         BNE   MNPLTBAD            NO, CAN'T BE A PDS
         L     R15,=A(REVDASD)     POINT TO DASD DATA SET INIT. ROUTINE
         BASR  R14,R15             CALL IT - ONLY R9 TO R13 PRESERVED
         LTR   R15,R15             SUCCESS?
         BNZ   MNPLTBAD            NO, MESSAGE SET BY REVDASD
         MVC   $PLTDSO(1,R5),DS1DSORG
         MVC   $PLTRFM(1,R5),DS1RECFM
         MVC   $PLTREC(2,R5),DS1LRECL
         MVC   $PLTBLK(2,R5),DS1BLKL
         MVI   MSG,38              DATA SET IS NOT PARTITIONED
         TM    DS1DSORG,DS1DSGPO   DSORG = PO?
         BNO   MNPLTBAD            NO
         MVI   MSG,0               RESET PENDING MESSAGE
         TM    DS1RECFM,DCBRECU    RECFM = U?
         BNO   MNPLTANX            NO
         OI    MENFLGS,$MFRFU      YES, FLAG IT
MNPLTANX LA    R5,$PLTLEN(,R5)     POINT TO NEXT PLT AREA
         LA    R0,15
         AH    R0,DOUBLE           ADJUST CURSOR OFFSET FOR NEXT PLT
         STH   R0,DOUBLE
         CLI   DOUBLE+1,45         DONE LAST ONE?
         BNH   MNPLTALP            NO, GO DO NEXT ONE
         SPACE
*    CONCATENATE THE ALLOCATED FILES
         USING DAPB0C,MYDAPB
         XC    MYDAPB,MYDAPB
         MVI   DA0CCD+1,X'0C'
         LA    R2,4                GET MAXIMUM PLT COUNT
         SR    R3,R3               ZERO DD COUNT
         LA    R4,DA0CDDN          POINT TO FIRST DD NAME SLOT
         LA    R5,PLT#01           POINT TO FIRST PLT AREA
MNPLTCLP CLI   $PLTDDN(R5),C' '    ANY DD IN THIS AREA?
         BNH   MNPLTCNX            NO
         MVC   0(8,R4),$PLTDDN(R5) YES, LOAD IT
         LA    R3,1(,R3)           COUNT IT
         LA    R4,8(,R4)           POINT TO NEXT SLOT TO LOAD
MNPLTCNX LA    R5,$PLTLEN(,R5)     POINT TO NEXT PLT AREA
         BCT   R2,MNPLTCLP
         STH   R3,DA0CNUMB         SET DD COUNT
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR
         LTR   R15,R15
         BNZ   MNPLTDYN            FILE CONCATENATION FAILED
         OI    MENFLGS,$MFCAT      FLAG CONCATENATION HAS OCCURRED
         LA    R0,8
         LA    R5,PLT#01           POINT TO FIRST PLT AREA
         STH   R0,$DDNAML          SET DD NAME LENGTH
         MVC   $DDNAME,$PLTDDN(R5) LOAD SUBJECT PARTICULARS
         MVC   $DSNAME(28),$PLTDSN(R5)
         MVC   $VOLSER,$PLTVOL(R5)
         MVC   $UCBAD,$PLTUCB(R5)
         MVC   DSNAIM(46),$DSNAME
         LA    R2,$DSNAME+2        DSN FOR OBTAIN
         LA    R3,$VOLSER          VOLUME FOR OBTAIN
         LA    R4,MYDSCB           ANSWER AREA FOR OBTAIN
         STM   R2,R4,OBTAINW+4     GET THE FIRST DATA SET'S DSCB
         OBTAIN OBTAINW
         SPACE
*    FETCH THE JFCB FOR EACH DATA SET IN THE CONCATENATION
         XC    ARL(36),ARL
         MVI   ARLLEN+1,36         SUPPLY ARL LENGTH
         MVC   ARLIDENT,=C'AR'     SUPPLY IDENTIFIER
         MVI   ARLOPT1,X'80'       ALLOW JFCB LIST ABOVE THE LINE
         MVI   ARLFIRST+1,2        ONLY FETCH JFCBS FOR CONCATENATIONS
         LA    R4,DYNDCBW
         L     R1,=A(SEQDCB)
         MVC   0(SEQDCBL,R4),0(R1)
         USING IHADCB,R4
         LA    R2,DYNEXLST
         LA    R0,ARL
         ST    R0,0(,R2)
         MVI   0(R2),X'13'         ALLOCATION RETRIEVAL EXIT (DFP 2.3)
         LA    R0,JFCB
         ST    R0,4(,R2)
         MVI   4(R2),128+X'07'     READ JFCB EXIT
         CLI   OSBITS,X'9B'        MVS/ESA OR LATER?
         BE    MNPLTARL            YES, LET OS FETCH ALLOCATION DATA
         LH    R5,PLTCOUNT         GET FILE DATA SET COUNT
         BCTR  R5,0                GET CONCATENATED DATA SET COUNT
         STH   R5,ARLRTRVD         SAVE RETRIEVED JFCB COUNT
         MH    R5,=H'180'          GET SIZE OF JFCB LIST
         LA    R0,7(,R5)
         SRL   R0,3
         SLL   R0,3                ROUND TO DOUBLEWORD BOUNDARY
         ST    R0,ARLPOOL          SAVE SUBPOOL AND SIZE
         GETMAIN RC,LV=(0)         GET ALLOCATION RETRIEVAL AREA
         LTR   R15,R15             SUCCESS?
         BNZ   DSELARLX            NO, ATTEMPT TO BACK OUT
         ST    R1,ARLAREA          SAVE ITS ADDRESS
         LA    R1,$DDNAME          POINT TO NEW DDNAME
         L     R15,=A(REVDDLOC)    POINT TO SUBROUTINE
         BASR  R14,R15             FIND NEW DD TIOT ENTRY
         LTR   R15,R15             IS IT ALLOCATED?
         BZ    DSELARLX            NO, THIS CANNOT HAPPEN
         LH    R0,ARLRTRVD         LOAD COUNT OF JFCB'S TO BE FETCHED
         L     R1,ARLAREA          POINT TO THE ARL AREA
         SR    R5,R5               CLEAR FOR INSERT
         LA    R7,180              GET THE SIZE OF EACH ARL JFCB ENTRY
MNPLJFCB IC    R5,0(,R15)          GET THE LENGTH OF THIS TIOT ENTRY
         ALR   R15,R5              POINT TO THE NEXT TIOT ENTRY
         STH   R7,0(,R1)           INITIALIZE ENTRY LENGTH
         L     R14,12(,R15)        LOAD JFCB "TTR"/SVA
         SRL   R14,8               SHIFT TO CORRECT PLACE
         MVC   4(176,R1),16(R14)   COPY THE JFCB (WITHOUT THE PREFIX)
         ALR   R1,R7               POINT TO NEXT ARL JFCB ENTRY
         BCT   R0,MNPLJFCB         PROCESS THE NEXT CONCATENATION
         LA    R2,4(,R2)           SKIP THE X'13' DCB EXIT
MNPLTARL ST    R2,DCBEXLST         SET EXIT LIST ADDRESS
         MVC   DCBDDNAM,$DSNAME+2  LOAD DDNAME
         MVI   OPEND,X'80'
         RDJFCB ((R4)),MF=(E,OPEND)
         DROP  R4                  IHADCB
         B     DSESAVED            GO PROCESS THE CONCATENATION
         SPACE
*    HANDLE CONCATENATION DYNAMIC ALLOCATION PROBLEMS
MNPLTDYN XC    MSG(2),MSG          INDICATE NO MESSAGE
         MVC   MSG+2(40),MYDAPB    SAVE DAPB08 OR DAPB0C
MNPLTBAD L     R2,PROJECT@         POINT TO &PROJ
         CLI   DOUBLE+1,45         ANY SPECIFIC CONCAT'D FILE?
         BH    MNPLTBD2            NO, LEAVE THE CURSOR THERE
         A     R2,SCRNCOLS         POINT TO &LIB1
         AH    R2,DOUBLE           POINT TO &LIBN
MNPLTBD2 LA    R3,4                GET MAXIMUM PLT COUNT
         LA    R5,PLT#01           POINT TO FIRST PLT AREA
MNPLTBLP CLI   $PLTDDN(R5),C' '    ANY FILE TO FREE?
         BNH   MNPLTBNX            NO
         XC    MYDAPB,MYDAPB
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,$PLTDDN(R5) DDNAME
         MVC   DA18MNM,MENUBLNK    MEMBER NAME
         MVC   DA18SCLS,MENUBLNK   SYSOUT CLASS IS 2-BYTE FIELD
         MVI   DA18CTL,DA18PERM    JUST IN CASE IT HELPS
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR TO FREE FILE
MNPLTBNX XC    0($PLTLEN,R5),0(R5) CLEAR THE PLT AREA
         LA    R5,$PLTLEN(,R5)     POINT TO THE NEXT PLT AREA
         BCT   R3,MNPLTBLP
         STH   R3,PLTCOUNT         ZERO ACTIVE PLT COUNT
         STH   R3,$DSNAME          ZERO DATA SET NAME LENGTH
         ST    R3,$UCBAD           CLEAR UCB ADDRESS
         MVC   $DDNAME,MENUBLNK    CLEAR DD NAME
         MVC   $VOLSER,MENUBLNK    CLEAR VOLUME SERIAL
         MVC   $MEMBER,MENUBLNK    CLEAR MEMBER NAME
         MVI   $DSNAME+2,C' '      CLEAR DATA SET NAME
         MVC   $DSNAME+3(43),$DSNAME+2
         ICM   R0,3,MSG            GOT A MESSAGE?
         BNZ   DSELSHOW            YES, GO SHOW IT
         MVC   MYDAPB(40),MSG+2    NO, RESTORE DAPB08 OR DAPB0C
         B     DSELBAD1            GO GET A MESSAGE
         SPACE
*    CONDENSE AN EXCLUSIVELY ALLOCATED PARTITIONED DATA SET
DSELCOMP L     R15,=A(REVCOND)     POINT TO CONDENSE ROUTINE
         BASR  R14,R15             INVOKE IT
         B     DSELFREE            GO FREE THE COMPRESSED PDS
         SPACE
*    TIDY UP AN INPUT FIELD - LEFT JUSTIFY AND FOLD TO UPPER CASE
*         R2 -> FIELD
*         R3 =  LENGTH OF FIELD    R1, R5, R6 NOT PRESERVED
*        R14 -> RETURN POINT
*
MENUTIDY L     R6,=A(KAPS)         POINT TO TRANSLATE TABLE
         MVC   MYTRTBL,0(R6)       COPY TRANSLATE TABLE
         MVI   MYTRTBL+C',',C'.'   ALSO TURN COMMAS INTO PERIODS
         LR    R1,R3               COPY FIELD LENGTH
         BCTR  R1,0                DECREMENT FOR EXECUTE
         EX    R1,MENTDYKP         FOLD TO UPPER CASE
         LA    R6,0(R1,R2)         POINT TO LAST BYTE OF FIELD
         BCTR  R1,0                DECREMENT FOR EXECUTE
         CLI   0(R2),C' '          FIELD STARTS WITH NON-BLANK?
         BNE   MENTDYOK            YES, FIELD NOW LEFT-JUSTIFIED
         EX    R1,MENTDYBL         IS FIELD ENTIRELY BLANK?
         BER   R14                 YES, THAT'S AS TIDY AS IT GETS
MENTDYLP EX    R1,MENTDYMV         NO, SHUFFLE LEFT ONE
         MVI   0(R6),C' '          SUPPLY TRAILING BLANK
         CLI   0(R2),C' '          FIELD STARTS WITH A BLANK?
         BE    MENTDYLP            YES, FIELD NOT LEFT-JUSTIFIED
MENTDYOK CLI   0(R2),QUOTE         FIELD STARTS WITH A QUOTE?
         BNER  R14                 NO, TIDY UP NOW COMPLETE
         CLI   0(R6),C' '          TRAILING BLANK PRESENT?
         BNER  R14                 NO, QUOTE OR NOT, ALL DONE HERE
MENTDYBK CLI   0(R6),C' '          TRAILING BLANK?
         BNE   MENTDYQT            NO
         BCT   R6,MENTDYBK         YES, BACK UP ONE
MENTDYQT CLI   0(R6),QUOTE         DOES FIELD END WITH A QUOTE?
         BER   R14                 YES, ALL DONE HERE
         MVI   1(R6),QUOTE         NO, SO ADD A TRAILING QUOTE
         BR    R14                 FIELD NOW ALL TIDIED UP
         SPACE
*    VALIDATE QUALIFIER SPECIFICATION
*      ON ENTRY:
*         R3 -> 8-BYTE QUALIFIER
*        R14 -> RETURN POINT
*                             R1, R2 (TRT) AND R15 ARE NOT PRESERVED
*      ON EXIT:
*        R15 IS RETURN CODE - ZERO IF VALID NON-BLANK CONTENTS
*        R1 IS QUALIFIER LENGTH CODE IF R15 IS ZERO
*
DSMVALID TM    MENFLG2,$M2FROM     OPTION 3.3 "TO" LIBRARY?
         BO    DSQVALID            YES, MEMBER NAME MUST BE VALID
         CLC   MENALMEM,0(R3)      SPECIFYING ALL MEMBERS?
         BNE   PATVALID            NO, GO VALIDATE AS NORMAL
         CLC   OP3PT3,MENOPTN      IN OPTION 3.3?
         BE    *+8                 YES, LEAVE ASTERISK AS A FLAG
         MVI   0(R3),C' '          NO, SO REMOVE USELESS CLUTTER
         SR    R15,R15             COPYING ALL MEMBERS IS VALID
         BR    R14                 RETURN
PATVALID LA    R15,1               GET ONE BIT
         SLL   R15,31              PROMOTE IT TO THE SIGN
         O     R15,=A(DSNCHARS)    POINT TO TABLE, FLAG MEMBER
         B     DSQVALID+4          VALIDATE MEMBER SPEC
DSQVALID L     R15,=A(DSNCHARS)    POINT TO TABLE, RC = NON-ZERO
         CLI   0(R3),C' '          BLANK FIELD?
         BER   R14                 YES, NOT USABLE SO RETURN
         LA    R1,7(,R3)           POINT TO LAST POSSIBLE CHARACTER
DSQVALP1 CLI   0(R1),C' '          TRAILING BLANK?
         BNE   DSQVALEN            NO
         BCT   R1,DSQVALP1         YES, BACK UP ONE
DSQVALEN CLI   0(R1),C'.'          QUALIFIER ENDS WITH PERIOD?
         BER   R14                 YES, NOT USABLE SO RETURN
         SR    R1,R3               GET QUALIFIER LENGTH CODE
         EX    R1,DSQCHECK         ANY CHARACTERS DISALLOWED?
         BNZ   DSMVALCK            YES, NOT USABLE SO RETURN
         CLI   0(R3),C'.'          QUALIFIER BEGINS WITH PERIOD?
         BER   R14                 YES, NOT USABLE SO RETURN
         CLI   0(R3),C'-'          QUALIFIER BEGINS WITH MINUS?
         BER   R14                 YES, NOT USABLE SO RETURN
         CLI   0(R3),C'0'          QUALIFIER BEGINS WITH NUMERIC?
         BNLR  R14                 YES, NOT USABLE SO RETURN
         SR    R15,R15             DATA IS USABLE
         BR    R14                 RETURN
DSMVALCK LTR   R15,R15             CHECKING A MEMBER SPEC?
         BNMR  R14                 NO, INVALID QUALIFIER
         CLI   0(R1),C'*'          GENERIC MASK CHARACTER?
         BE    DSPVALID            YES, THAT'S ACCEPTABLE
         CLI   0(R1),C'%'          GENERIC MASK CHARACTER?
         BE    DSPVALID            YES, THAT'S ACCEPTABLE
         BR    R14                 NO, INVALID MEMBER NAME
DSPVALID SR    R15,R15             DATA IS USABLE
         MVC   PUTLINS+4(8),0(R3)  LOAD MEMBER PATTERN
         MVC   0(8,R3),MENUBLNK    CLEAR MEMBER SPEC
         CLC   MENALMEM,PUTLINS+4  SPECIFYING ALL MEMBERS?
         BER   R14                 YES, BUSINESS AS USUAL
         OI    STATUS17,$17PAT     NO, USE GENERIC MASKING
         BR    R14                 RETURN
         SPACE
MENTDYKP TR    0(0,R2),MYTRTBL     <<< EXECUTED >>>
MENTDYBL CLC   0(0,R2),1(R2)       <<< EXECUTED >>>
MENTDYMV MVC   0(0,R2),1(R2)       <<< EXECUTED >>>
MENTRT   TRT   0(0,R2),0(R6)       <<< EXECUTED >>>
MNSETMEM MVC   $MEMBER(0),1(R4)    <<< EXECUTED >>>
MNSETDSN MVC   0(0,R1),0(R3)       <<< EXECUTED >>>
MNTRTMEM TRT   $MEMBER(0),0(R6)    <<< EXECUTED >>>
MNTRTDSN TRT   $DSNAME+2(0),0(R6)  <<< EXECUTED >>>
DSQCHECK TRT   0(0,R3),0(R15)      <<< EXECUTED >>>
         SPACE
************************************************************
*                                                          *
*         EXIT THE DATA SET SELECTION PANEL                *
*                                                          *
************************************************************
         SPACE
DSELCAN  OI    MENFLG2,$M2CAN      FLAG CANCEL REQUEST
         B     DSELEND2
DSELEQLX LA    R0,X'200'+C'X'
         B     *+8
DSELRETN LA    R0,X'100'+C' '
         LA    R1,CMDAREA
         ST    R1,OPD0
         MVC   CMDAREA(8),MENUBLNK
         MVI   OPD0+6,PRESENT
         MVI   CMDAREA,C'='
         STC   R0,CMDAREA+1
         STCM  R0,6,OPD0+4
DSELEND  NI    MENFLG2,255-$M2CAN  FLAG NOT CANCEL REQUEST
DSELEND2 TM    MENFLG2,$M2FROM     "FROM" DATA SET STILL ALLOCATED?
         BO    DSELFROM            YES, ONLY END OF "TO" PROMPT
DSELSAVE TM    MENFLG2,$M2CAN      CANCEL REQUEST?
         BO    DSELEXIT            YES, SKIP PROFILE SAVE
         MVC   DOUBLE,MENPROFN     SET THE PROFILE MEMBER NAME
         LA    R0,MENPROFL         SET PROFILE MEMBER SIZE
         LNR   R0,R0               INDICATE WRITE WITH NEGATIVE
         L     R1,MENPROF@         POINT TO THE PROFILE AREA
         L     R15,=A(REVPROF)     POINT TO PROFILE MANAGER
         BASR  R14,R15             STORE PROFILE
DSELEXIT L     R1,MENPROF@         POINT TO THE PROFILE AREA
         LA    R0,MENPROFL         GET ITS SIZE
         FREEMAIN RU,LV=(0),A=(1)  FREE IT
         MVC   MENPROFN,MENUBLNK   CLEAR CURRENT PROFILE NAME
         XC    MENPROF@,MENPROF@   RESET PROFILE DATA ADDRESS
         NI    MENFLGS,255-$MFDSEL NO LONGER IN DATA SET SELECTION
         TM    MENFLG2,$M2FROM     "FROM" DATA SET STILL ALLOCATED?
         BNO   MENURET             NO, RETURN TO INVOKING MENU
         XC    MYDAPB,MYDAPB       YES, CONSTRUCT DEALLOCATION REQUEST
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,FROMAREA+$DDNAME-$PASSWRD
         MVC   DA18MNM,MENUBLNK    MEMBER NAME
         MVC   DA18SCLS,MENUBLNK   SYSOUT CLASS IS 2-BYTE FIELD
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR TO FREE FILE
         B     MENURET             RETURN TO INVOKING MENU
         SPACE
         SPACE
************************************************************
*                                                          *
*         INVOKE DATA SET LIST                             *
*                                                          *
************************************************************
         SPACE
MENULEV  L     R15,=A(REVLEVL)     POINT TO ROUTINE
         BASR  R14,R15             INVOKE IT
         B     MENURET             CHECK FOR PENDING SELECTION
         SPACE
         SPACE
************************************************************
*                                                          *
*         INVOKE SPOOLED OUTPUT REVIEW                     *
*                                                          *
************************************************************
         SPACE
MENUOUT  OI    STATUS11,$11OT      BEHAVE AS IF USER ISSUED REVOUT
         L     R15,=A(REVOUTPT)    POINT TO ROUTINE
         BASR  R14,R15             INVOKE IT
         NI    STATUS11,255-$11OT  RESET REVOUT COMMAND FLAG
         B     MENURET             CHECK FOR PENDING SELECTION
         SPACE
         SPACE
************************************************************
*                                                          *
*         INVOKE TSO COMMAND PROCESSOR                     *
*                                                          *
************************************************************
         SPACE
MENUTSO  TM    STATUS9,$9ISPF      OPERATING AS AN ISPF DIALOG?
         BO    MENUTSOX            YES, DON'T EVEN TRY IT
         ICM   R1,15,MENTSO@       POINT TO SAVED TSO COMMANDS
         BNZ   MENUTSO2            GO CALL PROCESSOR
         LA    R0,240*10+80        SET PROFILE MEMBER SIZE
         MVI   GETMNTRC,32         TRACK GETMAIN IN CASE OF FAILURE
         GETSTOR RU,LV=(0),LOC=(31,64)
         ST    R1,MENTSO@          SAVE THE ADDRESS
         LR    R0,R1               POINT TO IT
         LA    R1,240*10+80        GET ITS SIZE
         SR    R15,R15             ZERO SOURCE LENGTH AND PAD
         MVCL  R0,R14              CLEAR THE NEW AREA
         MVC   DOUBLE,$$REVTSO     SET PROFILE MEMBER NAME TO READ
         LA    R0,240*10+80        SET PROFILE MEMBER SIZE
         L     R1,MENTSO@          POINT TO THE NEW AREA
         L     R15,=A(REVPROF)     POINT TO PROFILE MANAGER
         BASR  R14,R15             FETCH PROFILE
         L     R1,MENTSO@          POINT TO SAVED TSO COMMANDS
MENUTSO2 LA    R1,80(,R1)          POINT PAST PROFILE MEMBER HEADER
         L     R15,=A(REVTSO)      POINT TO ROUTINE
         NI    STATUS14,255-$14RCL FLUSH ANY PENDING COMMAND RECALL
         BASR  R14,R15             INVOKE IT
         B     MENURET             CHECK FOR PENDING SELECTION
         SPACE
MENUTSOX MVI   MSG,233             NOT SUPPORTED UNDER ISPF
*        B     MENURET             CHECK FOR PENDING SELECTION
         SPACE
************************************************************
*                                                          *
*         PROCESS DIRECT INTER-OPTION JUMP                 *
*                                                          *
************************************************************
         SPACE
MENURET  TM    OPD0+6,PRESENT      ANY PRIMARY COMMAND PRESENT?
         BNO   REMENU              NO, JUST SHOW MENU AGAIN
         L     R1,OPD0             YES, POINT TO IT
         CLI   0(R1),C'='          INTER-OPTION JUMP?
         BE    MENUOPT             YES, GO PROCESS IT
         MVC   MENFLGS,MENUPREV    NO, RESTORE PRIMARY STATUS FLAG
         MVC   MENUCRNT,MENUPREV   RESTORE THE MENU STATUS
         MVI   MENUCRNT,0          CLEAR FLAG BYTE HOLD AREA
         XC    OPDL(OPDLL),OPDL    ZERO THE OPDL
         B     REMENU              JUST SHOW MENU AGAIN
         SPACE
************************************************************
*                                                          *
*         RESET GLOBAL VARIABLES FOR MENU OPERATION        *
*                                                          *
************************************************************
         SPACE
MENUINIT MVC   $DDNAME,MENUDD      LOAD PHONY DDNAME FOR SWAP LIST
         CLI   $SUBCOM,C' '        RECOVERY DATA PRESENT?
         BH    MENUINI2            YES, DO NOT CLEAR IT
         MVC   $VOLSER,MENUBLNK    CLEAR VOLUME SERIAL
         MVC   $MEMBER,MENUBLNK    CLEAR MEMBER NAME
         XC    $DSNAME(2),$DSNAME  ZERO DSNAME LENGTH
         MVI   $DSNAME+2,C' '      CLEAR DATA SET NAME
         MVC   $DSNAME+3(43),$DSNAME+2
         XC    $UCBAD,$UCBAD       CLEAR UCB ADDRESS
MENUINI2 XC    $CONCAT,$CONCAT     CLEAR CONCATENATION NUMBER
         XC    OBTAINW,OBTAINW     ENSURE OBTAIN CAMLST READY FOR USE
         MVI   OBTAINW,X'C1'       INDICATE AN OBTAIN
         MVI   OBTAINW+2,8         EADSCB=OK AS FROM Z/OS 1.10
         MVI   MYDSCB,0            INVALIDATE VTOC ENTRY COPY
         TM    MENFLGS,$MFPRIM     SHOWING PRIMARY OPTION MENU?
         BNOR  R14                 NO, RETURN TO CALLER
         MVC   MENOPTN,MENUBLNK    YES, BLANK CURRENT OPTION
         LA    R0,MAINTITL
         ST    R0,MENTIT@          SET MENU TITLE ADDRESS
         LA    R0,MAINOPTB
         ST    R0,MENOPT@          SET MENU OPTIONS ADDRESS
         LA    R0,MNCMDTAB
         ST    R0,MENCMD@          SET COMMAND TABLE ADDRESS
         MVC   MENUPREV,MENUCRNT   SAVE CURRENT MENU STATUS
         MVC   MENUPREV(1),MENFLGS
         NI    MENUPREV,$MFPRIM    SAVE PRIMARY OPTION MENU STATUS
         BR    R14                 RETURN TO CALLER
         SPACE
************************************************************
*                                                          *
*         FREE GRAPHIC AREA                                *
*                                                          *
************************************************************
         SPACE
MENUFREE ICM   R1,15,HSEACTIV      ANY GRAPHIC AREA ACQUIRED?
         BZR   R14                 NO, NOTHING TO DO
         L     R0,PICSTGSZ         YES, GET ITS SIZE
         FREEMAIN RU,LV=(0),A=(1),SP=17
         XC    HSEACTIV,HSEACTIV   RESET STORAGE POINTER
         XC    PICDTLS(PICDTLEN),PICDTLS     AND PICTURE STATISTICS
         BR    R14                 RETURN TO CALLER
         SPACE
         EJECT
************************************************************
*                                                          *
*         MENU SUBCOMMAND TABLES                           *
*                                                          *
************************************************************
         SPACE
MNCMDTAB DC    0H'0'              ENTRIES MUST BE IN COLLATING SEQUENCE
         DC    CL8'CAN     '
         B     MENUCAN
         DC    CL8'CANCEL  '
         B     MENUCAN
         DC    CL8'END     '
         B     MENUSAVE
         DC    CL8'EXIT    '
         B     MENUSAVE
         DC    CL8'RETURN  '
         B     REMENU
         DC    CL8'X       '
         B     MENUSAVE
         DC    CL8'1       '
         B     MENUOPT1
         DC    CL8'2       '
         B     MENUOPT2
         DC    CL8'3       '
         B     MENUOPT3
         DC    CL8'3.      '
         B     MENUOPT3
         DC    CL8'6       '
         B     MENUTSO
         DC    H'-1'               END OF TABLE
         SPACE
DSELCMDS DC    0H'0'              ENTRIES MUST BE IN COLLATING SEQUENCE
         DC    CL8'A       '
         B     DSELA
         DC    CL8'B       '
         B     DSELB
         DC    CL8'BROWSE  '
         B     DSELBRWS
         DC    CL8'C       '
         B     DSELC
         DC    CL8'CAN     '
         B     DSELCAN
         DC    CL8'CANCEL  '
         B     DSELCAN
         DC    CL8'D       '
         B     DSELD
         DC    CL8'DATA    '
         B     DSELDATA
         DC    CL8'END     '
         B     DSELEND
         DC    CL8'EXIT    '
         B     DSELEQLX
         DC    CL8'M       '
         B     DSELM
         DC    CL8'N       '
         B     DSELN
         DC    CL8'R       '
         B     DSELR
         DC    CL8'RETURN  '
         B     DSELRETN
         DC    CL8'U       '
         B     DSELU
         DC    CL8'V       '
         B     DSELVIEW
         DC    CL8'VIEW    '
         B     DSELVIEW
         DC    H'-1'               END OF TABLE
         SPACE
OPT3CMDS DC    0H'0'              ENTRIES MUST BE IN COLLATING SEQUENCE
         DC    CL8'CAN     '
         B     CAN2MAIN
         DC    CL8'CANCEL  '
         B     CAN2MAIN
         DC    CL8'END     '
         B     END2MAIN
         DC    CL8'RETURN  '
         B     END2MAIN
         DC    CL8'1       '
         B     MENUOP31
         DC    CL8'2       '
         B     MENUOP32
         DC    CL8'3       '
         B     MENUOP33
         DC    CL8'4       '
         B     MENULEV
         DC    CL8'5       '
         B     MENUOP35
         DC    CL8'8       '
         B     MENUOUT
         DC    H'-1'               END OF TABLE
         SPACE
         DROP  R13                 @MENUWK
         DROP  R11,R10,R8          REVMENU
         SPACE
MENLAROW DC    C'===>'             LONG ARROW
MENSAROW EQU   *-2,2               SHORT ARROW
MAINTITL DC    AL1(20),CL20'  REVIEW FRONT END  '
OPT1TITB DC    AL1(24),CL24'  BROWSE - ENTRY PANEL  '
OPT1TITV DC    AL1(22),CL22'  VIEW - ENTRY PANEL  '
OPT2TITL DC    AL1(22),CL22'  EDIT - ENTRY PANEL  '
OPT3TITL DC    AL1(22),CL22'  DATA SET UTILITIES  '
OPT3TIT1 DC    AL1(19),CL19'  LIBRARY UTILITY  '
OPT3TIT2 DC    AL1(19),CL19'  DATASET UTILITY  '
OPT3TIT3 DC    AL1(21),CL21'  MOVE/COPY UTILITY  '
OPT3TIT5 DC    AL1(29),CL29'  MEMBER STATISTICS UTILITY  '
ODSHSTMS DC   C'CURSOR-SELECTABLE ITEMS FROM "OTHER DATA SET" HISTORY:'
         SPACE
*  MAXIMUM MENU SELECTION CODE LENGTH THAT CAN BE SHOWN IS 4
MAINOPTB EQU   *
         DC    AL1(00),CL1'1'
         DC    AL1(43),CL44'BROWSE    - VIEW OR BROWSE DATA SET CONTENT+
               S'
         DC    AL1(00),CL1'2'
         DC    AL1(45),CL46'EDIT      - UPDATE OR CREATE DATA SET CONTE+
               NTS'
         DC    AL1(00),CL1'3'
         DC    AL1(36),CL37'UTILITIES - PERFORM UTILITY FUNCTIONS'
         DC    AL1(00),CL1'6'
         DC    AL1(37),CL38'COMMAND   - ISSUE TSO OR CLIST COMMAND'
         DC    AL1(00),CL1'X'
         DC    AL1(24),CL25'EXIT      - TERMINATE RFE'
         DC    X'FF'               END OF TABLE
         SPACE
OPT3OPTB EQU   *
         DC    AL1(00),CL1'1'
         DC    AL1(45),CL46'LIBRARY   - PDS COMPRESS AND MEMBER MANAGEM+
               ENT'
         DC    AL1(00),CL1'2'
         DC    AL1(64),CL65'DATASET   - CREATE, DELETE, RENAME, CATALOG+
                OR UNCATALOG DATA SET'
         DC    AL1(00),CL1'3'
         DC    AL1(56),CL57'MOVE/COPY - MOVE OR COPY PDS MEMBERS OR DAT+
               A SET CONTENTS'
         DC    AL1(00),CL1'4'
         DC    AL1(56),CL57'DSLIST    - PROCESS DATA SETS FROM A CATALO+
               G OR VTOC LIST'
         DC    AL1(00),CL1'5'
         DC    AL1(56),CL57'SPFSTATS  - ADMINISTER STATISTICS OF LIBRAR+
               Y MEMBERS'
         DC    AL1(00),CL1'8'
         DC    AL1(51),CL52'OUTLIST   - DISPLAY, DELETE OR PRINT HELD J+
               OB OUTPUT'
         DC    X'FF'               END OF TABLE
         SPACE
MAINRKEY DC    0F'0'
         DC    CL12'USERID    - '
         DC    CL12'SYSTEM    - '
         DC    CL12'TERMINAL  - '
         DC    CL12'NETWORK   - '
         DC    CL12'RELEASE   - '
         DC    CL12'DAY       - '
         DC    CL12'DATE      - '
         DC    CL12'TIME      - '
MAINR#   EQU   (*-MAINRKEY)/12     RIGHT SIDE DISPLAY ITEM COUNT
         DC    F'-1'               END OF TABLE
         SPACE
*  WHEN THE RESULT OF ZELLER'S CONGRUENCE IS NEGATIVE, THE
*  MOD(7) RESULT FOR SUNDAY IS 7 INSTEAD OF 0, HENCE THE 2ND SUN.
DAYTBL   DC    C'SUN MON TUE WED THU FRI SAT SUN '
MENUREL  DC    CL8'&REL.'
         SPACE
FROMDSM  DC    AL1(FLDOUTLO),C'FROM:',AL1(FLDOUTHI,QUOTE)
         SPACE
*         SELECTION OPTIONS REQUIRING EXCLUSIVE DATA SET USE
DSELXTBL DC    0F'0'
OP3PT1C  DC    C'3.1C'             COMPRESS PDS
OP3PT2D  DC    C'3.2D'             DELETE DATA SET
OP3PT2R  DC    C'3.2R'             RENAME DATA SET
OP3PT3M  DC    C'3.3M'             MOVE DATA
DSELX#   EQU   (*-DSELXTBL)/4      NUMBER OF ENTRIES
         SPACE
OP3DOT   EQU   *,2
OP3PT2   EQU   *,3
OP3PT2B  DC    C'3.2 '             DATA SET INFORMATION
OP3PT2A  DC    C'3.2A'             ALLOCATE NEW DATA SET
OP3PT2C  DC    C'3.2C'             CATALOG DATA SET
OP3PT2U  DC    C'3.2U'             UNCATALOG DATA SET
OP3PT1   EQU   *,3
OP3PT1B  DC    C'3.1B'             BROWSE MEMBER
OP3PT1D  DC    C'3.1D'             DELETE MEMBER
OP3PT3   EQU   *,3
OP3PT3B  DC    C'3.3 '             NO SELECTION MADE
OP3PT5   EQU   *,3
OP3PT5B  DC    C'3.5 '             STATISTICS ADMINISTRATION
         SPACE
*         ONLY NEED FIRST WORD OF EACH CAMLST
         DC    0F'0'
DSELLOC  CAMLST NAME,2,,4          CAMLST FOR LOCATE
         ORG   DSELLOC+4
*DSELCAT CAMLST CAT,2,,4           CAMLST FOR CAT
*        ORG   DSELCAT+4
DSELUNCT CAMLST UNCAT,2            CAMLST FOR UNCAT
         ORG   DSELUNCT+4
DSELOBT  CAMLST SEARCH,2,3,4       CAMLST FOR OBTAIN SEARCH
         ORG   DSELOBT+2
         DC    AL1(8)              EADSCB=OK AS FROM Z/OS 1.10
         ORG   DSELOBT+4
         SPACE
*
*         REPORT DYNALLOC FAILURE
*
*  INVOKE WITH   BASR  R14,R15  AND  R1 = DYNALLOC REASON CODE
         USING MENALMSG,R15
MENALMSG STC   R1,DOUBLE           SAVE DYNALLOC REASON CODE
         LA    R1,MENALMTB         POINT TO MESSAGE TABLE
MENALMLP CLC   DA08DARC,0(R1)      MATCHING DARC?
         BE    MENALMLD            YES, GO LOAD MESSAGE
         LA    R1,4(,R1)           NO, POINT TO NEXT ENTRY
         CLI   0(R1),X'FF'         REACHED END OF TABLE?
         BNE   MENALMLP            NO, GO CHECK IT
         MVC   MSG(MENALCDL),MENALCD
         UNPK  MSG+12(3),DOUBLE(2)
         TR    MSG+12(2),MENUHEX-240
         MVI   MSG+14,C' '         DAIR RC FORMATTED
         UNPK  MSG+20(5),DA08DARC(3)
         TR    MSG+20(4),MENUHEX-240
         MVI   MSG+24,C' '         DARC FORMATTED
         UNPK  MSG+30(5),DA08CTRC(3)
         TR    MSG+30(4),MENUHEX-240
         MVI   MSG+34,C' '         CTRC FORMATTED
         OI    STATUS7,$7BELL      SOUND BELL FOR ERROR MESSAGE
         BR    R14                 YES, RETURN TO CALLER
MENALMLD MVC   MSG(1),3(R1)        LOAD MESSAGE CODE
         BR    R14                 RETURN TO CALLER
         DROP  R15                 MENALMSG
         SPACE
MENALMTB DC    0H'0'  ____________ MESSAGE TABLE ____
         DC    X'020C'             SHARED DATA SET IN USE BY OTHERS
         DC    Y(120) _______________________________
         DC    X'0210'             DATA SET IN USE
         DC    Y(120) _______________________________
         DC    X'0218'             VOLUME CANNOT BE ACCESSED
         DC    Y(162) _______________________________
         DC    X'0320'             INVALID DATA SET NAME
         DC    Y(201) _______________________________
         DC    X'1708'             DATA SET NOT CATALOGED
         DC    Y(165) _______________________________
         DC    X'6708'             DATA SET NOT ON VOLUME
         DC    Y(166) _______________________________
         DC    H'-1'               END OF TABLE
MENALCD  MESG  'ERROR: RC=XX DARC=XXXX CTRC=XXXX'
         SPACE
         DC    0D'0'
         SPACE
@RFE     DC    CL8'RFE'
$$REVTSO DC    CL8'$$REVTSO'       RFE TSO PROFILE MEMBER
MENUBUF  DC    CL8'REVBUF  '
MENALLDA DC    CL8'SYSALLDA'
MENUDD   DC    CL8'**MENU**'
MENALMEM EQU   *-1,8               CL8'*       ' = "ALL MEMBERS"
MENUBLNK DC    CL8' '
         SPACE
         LTORG
         SPACE
         SPACE
         DC    0D'0'
MENUHEX  DC    C'0123456789ABCDEF'
         DC    C'GHIJKLMNOPQRSTUV' ENOUGH FOR RCRSLIM UP TO 31
         SPACE
         AIF   (&ENV390).US331
         USING REVMENU,R11,R10,R8
         AGO   .US332
.US331   ANOP
         USING (REVMENU,MENUHEX),R11,R10,R8
.US332   ANOP
         USING @MENUWK,R13
         SPACE
*
*         CUSTOMIZE FOR OPTION '1'
*
         USING OPT1CUST,R7
OPT1CUST LA    R15,BREDCUST        POINT TO SUBROUTINE
         BASR  R14,R15             PERFORM COMMON LOGIC
         L     R2,SCRNCOLS         GET SCREEN WIDTH
         AR    R2,R2               DOUBLE IT
         A     R2,SCREENBF         POINT TO THIRD LINE
         LA    R0,BORVLEN-1
         SR    R2,R0               BACK UP A BIT
         MVC   0(BORVLEN,R2),BORVLBL
         A     R2,SCREENSZ         POINT TO SHADOW BUFFER
         MVI   0(R2),X'01'
         MVC   1(BORVLEN-1+19,R2),0(R2)
         MVI   1(R2),X'07'         SHOW 'B' IN WHITE
         MVI   11(R2),X'07'        SHOW 'V' IN WHITE
         TM    7*80+5(R5),1        USING 'VIEW'?
         BO    DSELSHOW            YES, 'DATA' SETTING IGNORED
         L     R4,OTHERDS@         POINT TO &DSN1
         A     R4,SCRNCOLS         POINT TO &VOL1
         L     R3,SCREENSZ
         ALR   R3,R4               POINT TO ITS SHADOW
         MVC   13(20,R4),OPT1DOP   SHOW 'DATA' OPERAND SETTING
         MVI   31(R3),X'32'        RED UNDERSCORE
         TM    8*80+5(R5),1        'DATA' SETTING ON?
         BNO   DSELSHOW            NO
         MVI   31(R4),C'Y'         NO, MEMBER REPLACE ALLOWED
         B     DSELSHOW            ALL DONE
         DROP  R7                  OPT1CUST
         SPACE
OPT1DOP  EQU   *,20                'DATA' OPERAND MESSAGE
         DC    AL1(FLDOUTLO),C'''DATA'' OPERAND ?'
         DC    AL1(FLDINHI),C'N',AL1(FLDOUTLO)
         DC    0H'0'
         SPACE
*
*         CUSTOMIZE FOR OPTION '2'
*
         USING OPT2CUST,R7
OPT2CUST LA    R15,BREDCUST        POINT TO SUBROUTINE
         BASR  R14,R15             PERFORM COMMON LOGIC
         TM    MENFLGS,$MFREC      ALREADY CHECKED RECOVERY SITUATION?
         BO    DSELSHOW            YES, SO SKIP IT THIS TIME
         L     R15,=A(RECOVEDT)    NO, POINT TO RECOVERY ROUTINE
         LA    R1,MENALMSG         POINT TO COMMON STATIC STORAGE
         BASR  R14,R15             INVOKE IT
         OI    MENFLGS,$MFREC      PREVENT RECURSION ERROR LOOP
         CLI   MSG,36              ERROR MESSAGE?
         BE    DSELREDO            YES, SHOW IT
         CLI   MSG,37              ERROR MESSAGE?
         BE    DSELREDO            YES, SHOW IT
         LTR   R15,R15             PERFORMING RECOVERY NOW?
         BP    DSELALCD            YES, THAT'S POSITIVE
         B     DSELSHOW            NO, ALL DONE
         DROP  R7                  OPT2CUST
*
*         OPTIONS '1' AND '2' COMMON CUSTOMIZE ROUTINE
*
         USING BREDCUST,R15
BREDCUST LA    R1,3
         M     R0,SCRNCOLS
         A     R1,PROJECT@         POINT TO MEMBER INPUT AREA
         MVC   13(L'BREDHINT,R1),BREDHINT
         A     R1,SCREENSZ         POINT TO THE SHADOW BUFFER
         MVI   9(R1),X'01'         SHOW THE MESSAGE IN BLUE
         MVC   10(4+L'BREDHINT-1,R1),9(R1)
         MVI   13+25(R1),X'07'     SHOW THE ASTERISK IN WHITE
         MVI   13+30(R1),X'07'     SHOW THE PERCENT IN WHITE
         BR    R14                 RETURN TO CALLER
         DROP  R15                 BREDCUST
         SPACE
BREDHINT DC    C'(FILTER MEMBER LIST WITH * OR % MASKING)'
         ORG   BREDHINT+24
         DC    AL1(FLDOUTHI,C'*',FLDOUTLO),C'OR'
         DC    AL1(FLDOUTHI,C'%',FLDOUTLO)
         ORG
         DC    0H'0'
         SPACE
*
*         CUSTOMIZE FOR OPTION '3.1'
*
         USING OP31CUST,R7
OP31CUST MVI   10(R4),FLDOUTHI
         XC    11(5,R4),=CL5'BLANK'
         MVC   17(21,R4),=CL21'- DISPLAY MEMBER LIST'
         MVI   16(R4),FLDOUTLO
         MVI   42(R4),FLDOUTHI
         MVC   43(17,R4),=CL17'B - BROWSE MEMBER'
         MVI   44(R4),FLDOUTLO
         MVC   11(5,R3),=XL5'0707070707'
         MVI   16(R3),X'01'
         MVC   17(43,R3),16(R3)
         MVI   43(R3),X'07'
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVI   14(R4),FLDOUTHI
         MVC   15(20,R4),=CL20'C - COMPRESS LIBRARY'
         MVI   16(R4),FLDOUTLO
         MVI   42(R4),FLDOUTHI
         MVC   43(17,R4),=CL17'D - DELETE MEMBER'
         MVI   44(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(43,R3),16(R3)
         MVI   43(R3),X'07'
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
*        MVI   14(R4),FLDOUTHI
*        MVC   15(20,R4),=CL20'R - RESTORE DELETED MEMBER'
*        MVI   16(R4),FLDOUTLO
         MVI   42(R4),FLDOUTHI
         MVC   43(17,R4),=CL17'N - RENAME MEMBER'
         MVI   44(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(43,R3),16(R3)
         MVI   43(R3),X'07'
         B     DSELSHOW
         DROP  R7                  OP31CUST
*
*         CUSTOMIZE FOR OPTION '3.2'
*
         USING OP32CUST,R7
OP32CUST S     R4,SCRNCOLS
         S     R3,SCRNCOLS
         MVI   10(R4),FLDOUTHI
         XC    11(5,R4),=CL5'BLANK'
         MVC   17(30,R4),=CL30'- DISPLAY DATA SET INFORMATION'
         MVI   16(R4),FLDOUTLO
         MVC   11(5,R3),=XL5'0707070707'
         MVI   16(R3),X'01'
         MVC   17(30,R3),16(R3)
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVI   14(R4),FLDOUTHI
         MVC   15(25,R4),=CL25'A - ALLOCATE NEW DATA SET'
         MVI   16(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(23,R3),16(R3)
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVI   14(R4),FLDOUTHI
         MVC   15(26,R4),=CL26'D - DELETE ENTIRE DATA SET'
         MVI   16(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(24,R3),16(R3)
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVI   14(R4),FLDOUTHI
         MVC   15(26,R4),=CL26'R - RENAME ENTIRE DATA SET'
         MVI   16(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(24,R3),16(R3)
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVI   14(R4),FLDOUTHI
         MVC   15(20,R4),=CL20'C - CATALOG DATA SET'
         MVI   16(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(18,R3),16(R3)
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVI   14(R4),FLDOUTHI
         MVC   15(22,R4),=CL22'U - UNCATALOG DATA SET'
         MVI   16(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(20,R3),16(R3)
         B     DSELSHOW
         DROP  R7                  OP32CUST
         SPACE
*
*         CUSTOMIZE FOR OPTION '3.3'
*
         USING OP33CUST,R7
OP33CUST TM    MENFLG2,$M2FROM     PROCESSING "FROM" DETAILS?
         BO    DSELSHOW            NO, SO NO CUSTOMIZATION
         S     R4,SCRNCOLS
         S     R3,SCRNCOLS
         MVI   14(R4),FLDOUTHI
         MVC   15(31,R4),=CL31'C - COPY DATA SET OR MEMBERS(S)'
         MVI   16(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(29,R3),16(R3)
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVI   14(R4),FLDOUTHI
         MVC   15(31,R4),=CL31'C - COPY DATA SET OR MEMBERS(S)'
         MVC   15(8,R4),=CL8'M - MOVE'
         MVI   16(R4),FLDOUTLO
         MVI   15(R3),X'07'
         MVI   16(R3),X'01'
         MVC   17(29,R3),16(R3)
         LA    R1,3
         M     R0,SCRNCOLS
         A     R1,PROJECT@         POINT TO MEMBER INPUT AREA
         MVC   13(L'OP33FMEM,R1),OP33FMEM
         A     R1,SCREENSZ         POINT TO THE SHADOW BUFFER
         MVI   9(R1),X'01'         SHOW THE MESSAGE IN BLUE
         MVC   10(4+L'OP33FMEM-1,R1),9(R1)
         MVI   13+24(R1),X'07'     SHOW THE ASTERISK IN WHITE
         L     R4,OTHERDS@         POINT TO &DSN1
         A     R4,SCRNCOLS         POINT TO &VOL1
         L     R3,SCREENSZ
         ALR   R3,R4               POINT TO ITS SHADOW
         MVC   13(21,R4),OP33RPM   SHOW "REPLACE MEMBERS" SETTING
         TM    7*80+5(R5),X'01'    NOREPLACE SET?
         BNO   *+8                 YES
         MVI   32(R4),C'Y'         NO, MEMBER REPLACE ALLOWED
         MVI   32(R3),X'32'        RED UNDERSCORE
         MVC   38(13,R4),OP33DMM   SHOW "DISP=MOD" SETTING
         TM    8*80+5(R5),X'01'    APPEND SET?
         BNO   *+8                 NO
         MVI   49(R4),C'Y'         YES
         MVI   49(R3),X'32'        RED UNDERSCORE
         B     DSELSHOW
         DROP  R7                  OP33CUST
         SPACE
OP33RPM  EQU   *,21                "REPLACE MEMBERS" MESSAGE
         DC    AL1(FLDOUTLO),C'REPLACE MEMBERS ?'
         DC    AL1(FLDINHI),C'N',AL1(FLDOUTLO)
OP33DMM  EQU   *,13                "DISP=MOD" MESSAGE
         DC    C'DISP=MOD ?',AL1(FLDINHI),C'N',AL1(FLDOUTLO)
OP33FMEM DC    C'(BLANK FOR MEMBER LIST, * FOR ALL MEMBERS)'
         ORG   OP33FMEM+23
         DC    AL1(FLDOUTHI,C'*',FLDOUTLO)
         ORG
         DC    0H'0'
         SPACE
*
*         CUSTOMIZE FOR OPTION '3.5'
*
         USING OP35CUST,R7
OP35CUST S     R4,SCRNCOLS
         S     R3,SCRNCOLS
         MVC   10(L'OP35LN1,R4),OP35LN1
         MVI   10(R3),X'01'        BLUE
         MVC   11(L'OP35LN1-1,R3),10(R3)
*                                  LINE 1 NOW DONE
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVC   12(L'OP35LN2,R4),OP35LN2
         MVI   12(R3),X'01'        BLUE
         MVC   13(L'OP35LN2-1,R3),12(R3)
         MVI   13(R3),X'07'        WHITE
*                                  LINE 2 NOW DONE
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVC   12(L'OP35LN3,R4),OP35LN3
         MVI   12(R3),X'01'        BLUE
         MVC   13(L'OP35LN3-1,R3),12(R3)
         MVI   13(R3),X'07'        WHITE
*                                  LINE 3 NOW DONE
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVC   12(L'OP35LN4,R4),OP35LN4
         MVI   12(R3),X'01'        BLUE
         MVC   13(L'OP35LN4-1,R3),12(R3)
         MVI   13(R3),X'07'        WHITE
*                                  LINE 4 NOW DONE
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVC   12(L'OP35LN5,R4),OP35LN5
         MVI   12(R3),X'01'        BLUE
         MVC   13(L'OP35LN5-1,R3),12(R3)
         MVI   13(R3),X'07'        WHITE
*                                  LINE 5 NOW DONE
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVC   11(L'OP35LN6,R4),OP35LN6
         MVI   11(R3),X'01'        BLUE
         MVC   12(L'OP35LN6-1,R3),11(R3)
*                                  LINE 6 NOW DONE
         A     R4,SCRNCOLS
         A     R3,SCRNCOLS
         MVC   11(L'OP35LN7,R4),OP35LN7
         MVI   11(R3),X'01'        BLUE
         MVC   12(L'OP35LN7-1,R3),11(R3)
*                                  LINE 7 NOW DONE
         B     DSELSHOW
         DROP  R7                  OP35CUST
         SPACE
OP35LN1  DC    C' MEMBER LIST SELECTION CODES:'
OP35LN2  DC      C' N - CREATE NEW MEMBER STATISTICS'
OP35LN3  DC      C' D - DELETE EXISTING MEMBER STATISTICS'
OP35LN4  DC      C' R - RESTORE DELETED MEMBER STATISTICS'
OP35LN5  DC      C' B - BROWSE MEMBER'
OP35LN6  DC     C'NOTE: EXISTING VERSION, LEVEL AND USER ID'
OP35LN7  DC     C'      VALUES CAN BE CHANGED BY OVERTYPING.'
         SPACE
         ORG   OP35LN1
         DC    AL1(FLDOUTLO)       FIRST LINE IN LOW INTENSITY
         ORG   OP35LN2
         DC    AL1(FLDOUTHI)       HIGH INTENSITY 'N'
         ORG   OP35LN2+2
         DC    AL1(FLDOUTLO)
         ORG   OP35LN3
         DC    AL1(FLDOUTHI)       HIGH INTENSITY 'D'
         ORG   OP35LN3+2
         DC    AL1(FLDOUTLO)
         ORG   OP35LN4
         DC    AL1(FLDOUTHI)       HIGH INTENSITY 'R'
         ORG   OP35LN4+2
         DC    AL1(FLDOUTLO)
         ORG   OP35LN5
         DC    AL1(FLDOUTHI)       HIGH INTENSITY 'B'
         ORG   OP35LN5+2
         DC    AL1(FLDOUTLO)
         ORG
         DC    0H'0'
         SPACE
*
*         OPTION 3.3 POST-ALLOCATION CONTROL
*
         USING DSELCOPY,R7
DSELCOPY TM    MENFLG2,$M2FROM     HAVE ALL THE FILES FOR COPY?
         BO    DSELCPY2            YES
         LM    R0,R1,$MEMBER       SAVE MEMBER NAME
         MVC   $MEMBER,MENUBLNK    BLANK MEMBER NAME
         TM    DS1DSORG,DS1DSGPO   COPYING TO A PDS?
         BNO   *+8                 NO, SEQUENTIAL COPY
         STM   R0,R1,$MEMBER       YES, RESTORE MEMBER NAME
         MVC   FROMAREA,$PASSWRD   COPY "FROM" FILE DETAILS
         MVC   FROMDSCB,MYDSCB     COPY "FROM" FILE VTOC ENTRY
         OI    MENFLG2,$M2FROM     HAVE NOW SAVED "FROM" FILE DATA
         MVI   $PASSWRD,C' '       CLEAR ACTIVE FILE INFORMATION
         MVC   $PASSWRD+1($DSVARSZ-1),$PASSWRD
         XC    $DSNAME(2),$DSNAME
         XC    $UCBAD,$UCBAD
         XC    $CONCAT(4),$CONCAT  ($CONCAT AND $DDNAML)
**       L     R5,MENPROF@         POINT TO PROFILE DATA
**       MVC   FROMPROJ,1*80+5(R5) SAVE &PROJ
**       MVC   FROMLIB1,2*80+5(R5) SAVE &LIB1
**       MVC   FROMTYPE,6*80+5(R5) SAVE &TYPE
         CLI   MNSAVMEM,C'*'       SELECTING ALL 'FROM" MEMBERS?
         BNE   *+8                 NO
         MVI   MNSAVMEM,C' '       YES, BLANK IT FOR "TO" LIBRARY
         NI    MENFLG2,255-$M2FRDS RESET FLAG
         CLI   MNSAVDSN,C' '       WAS "OTHER DATA SET" FIELD USED?
         BNH   DSELREDO            NO, GO PROMPT FOR "TO" DATA SET
         OI    MENFLG2,$M2FRDS     YES, FLAG THIS
         B     DSELREDO            NOW GO PROMPT FOR "TO" DATA SET
DSELCPY2 NI    MENFLG2,255-$M2TODS RESET FLAG
         CLI   MNSAVDSN,C' '       WAS "OTHER DATA SET" FIELD USED?
         BNH   *+8                 NO, GO PROMPT FOR "TO" DATA SET
         OI    MENFLG2,$M2TODS     YES, FLAG THIS
         LM    R0,R1,$MEMBER       SAVE MEMBER NAME
         MVC   $MEMBER,MENUBLNK    BLANK MEMBER NAME
         TM    DS1DSORG,DS1DSGPO   COPYING TO A PDS?
         BNO   DSELTSEQ            NO, SEQUENTIAL COPY
*   COPYING TO A PDS
         STM   R0,R1,$MEMBER       YES, RESTORE MEMBER NAME
         OI    STATUS15,$15STOW    NEED TO UPDATE TARGET DIRECTORY
         CLI   $MEMBER,C' '        TARGET MEMBER SPECIFIED?
         BH    DSELTOAM            YES, COPYING TO A MEMBER
         CLC   MENALMEM,FROMAREA+$MEMBER-$PASSWRD  COPYING ALL MEMBERS?
         BE    DSELCPYA            YES
         MVC   $MEMBER,FROMAREA+$MEMBER-$PASSWRD  "FROM" MEMBER -> "TO"
         CLI   $MEMBER,C' '        TARGET MEMBER SPECIFIED NOW?
         BH    DSELCPYS            YES, READY TO INITIATE COPY
         OI    STATUS15,$15PDS
         B     DSELCPYS            READY TO INITIATE COPY
*   COPYING TO A PDS MEMBER
DSELTOAM TM    FROMDSCB+DS1DSORG-MYDSCB,DS1DSGPO
         BNO   DSELCPYS            COPYING FROM NON-PDS TO ONE MEMBER
         CLI   FROMAREA+$MEMBER-$PASSWRD,C' '   ANY "FROM" PDS MEMBER?
         BH    DSELCPYS            YES, COPYING A MEMBER TO A MEMBER
         MVC   FROMAREA+$MEMBER-$PASSWRD(8),$MEMBER  "TO" MEM -> "FROM"
         B     DSELCPYS            COPYING A MEMBER TO A MEMBER
*   COPYING ALL MEMBERS
DSELCPYA OI    STATUS15,$15PDS+$15STAR
*   COPYING TO A NON-PDS - FROM EITHER PDS OR NON-PDS - READY TO START
DSELTSEQ EQU   *  (IF FROM PDS AND NO MEMBER THEN WILL GET ERROR MSG)
         SPACE
*   PREPARE TO INITIATE THE COPY
         USING OAIAREA,R1
DSELCPYS LA    R1,MSG+64           POINT TO OAIA
         MVC   OAIADDN,$DDNAME
         MVC   OAIADSN,$DSNAME+2
         MVC   OAIAMEM,$MEMBER
         MVC   OAIAUCB,$UCBAD
         OI    STATUS12,$12ENQ     REQUEST SERIALIZATION ONLY
         L     R15,=A(REVALCO)     POINT TO PROCESSOR ENTRY POINT
         BASR  R14,R15             SERIALIZE DATA SET
         NI    STATUS12,255-$12ENQ RESET SERIALIZATION FUNCTION FLAG
         LTR   R15,R15             SERIALIZATION SUCCESSFUL?
         BZ    DSELCPYT            YES, NOW IT'S COPY TIME
         NI    STATUS15,255-$153PT3 OPTION 3.3 OPERATION NOW COMPLETE
         B     DSELFREE            GO FREE THE DATA SETS
*   AT THIS POINT BOTH THE COPY "FROM" AND "TO" FILES HAVE BEEN
*   ALLOCATED, AND THE "TO" FILE HAS BEEN SERIALIZED.  THE MAIN
*   "$" VARIABLES OF THE TARGET ARE SAVED IN THE AD HOC OAIA AREA
*   AT MSG+64 WHICH WILL BE REFERRED TO BY THE "CUT" PROCESSING
*   OF REVIEW2 WHICH WILL ACTUALLY PERFORM THE COPYING.  THE
*   "$" VARIABLES AND THE DSCB OF THE SOURCE DATA SET CAN NOW
*   BE RESTORED (SO REVIEW2 KNOWS WHICH DATA SET TO BROWSE).
*   $12ENQ HAS BEEN RESET SO REVDALO WILL BOTH DEQ AND FREE THE
*   TARGET DATA SET.  NORMALLY REVDALO WILL BE CALLED FROM
*   "CUTDEALC" IN REVIEW2, BUT JUST IN CASE THAT HAS NOT HAPPENED
*   REVDALO WILL BE CALLED WHEN CONTROL RETURNS HERE, AND WILL
*   TAKE NO ACTION IF THE OAIA AREA WAS ZEROED BY A PREVIOUS CALL
*   OF REVDALO.  THE EMPTIED "FROM" "$" VARIABLES AREA MEANS THAT
*   "DSELFREE" ONLY NEEDS TO FREE THE SOURCE FILE.
DSELCPYT MVC   $PASSWRD($DSVARSZ),FROMAREA
         MVC   MYDSCB,FROMDSCB     RESTORE "FROM" DATA SET DETAILS
         MVC   DSORG,DS1DSORG      SET DCB SELECTION INDICATOR
         XC    CUTWORK@,CUTWORK@   RESET CUT WORKING STORAGE ADDRESS
         OI    STATUS15,$15COPY    FLAG ACTIVE FUNCTION
         CLI   MENOPTN+3,C'M'      IS IT A MOVE REQUEST?
         BNE   *+8                 NO
         OI    STATUS15,$15MOVE    YES, FLAG THIS
         NI    MODE,255-MD_ASCII   COPY WITHOUT TRANSLATION
         NI    STATUS7,255-$7TACK  DO NOT APPEND COPIED DATA
         NI    STATUS12,255-$12REP RESET FLAG
         L     R5,MENPROF@         POINT TO PROFILE DATA
         TM    7*80+5(R5),1        UNCONDITIONAL MEMBER COPY REQUESTED?
         BNO   DSELCPYR            NO
         OI    STATUS12,$12REP     YES
DSELCPYR TM    STATUS15,$15PDS     NEED TO SHOW MEMBER LIST DISPLAY?
         BO    DSELCPYP            YES, INTERACTIVE MEMBER SELECTION
         TM    STATUS15,$15STOW    WRITING TO A PDS?
         BO    DSELCPYD            YES, CANNOT USE DISP=MOD
         TM    8*80+5(R5),1        DISP=MOD REQUESTED?
         BZ    DSELCPYD            NO
         OI    STATUS7,$7TACK      YES
DSELCPYD MVI   DATAKV+1,1          SET 'DATA' OPERAND
         OI    STATUS8,$8_S        BOUNCE BACK HERE IF BLDL FAILS
         XC    MSGDSN,MSGDSN       RESET R OF TTR AS "NO MATCH" FLAG
         L     R15,=A(REVIEW2)     POINT TO PROCESSOR ENTRY POINT
         BASR  R14,R15             INVOKE DATA SET PROCESSOR
         MVI   DATAKV+1,0          CLEAR 'DATA' OPERAND
         NI    STATUS7,255-$7TACK  RESET FLAG - SHOULD ALREADY BE DONE
         L     R15,=A(REVDALO)     POINT TO PROCESSOR ENTRY POINT
         BASR  R14,R15             FREE "TO" FILE IF NOT ALREADY FREE
         TM    STATUS15,$15MOVE    IS THIS A MOVE REQUEST?
         BNO   DSELCPYE            NO, NO DELETIONS REQUIRED
         CLI   MSG,$MSG#1          ANY MESSAGE LOADED?
         BNL   DSELCPYE            YES, OPERATION NOT SUCCESSFUL
         TM    STATUS7,$7BELL      AUDIBLE ALARM REQUESTED?
         BO    DSELCPYE            YES, OPERATION NOT SUCCESSFUL
         TM    DS1DSORG,DS1DSGPO   DSORG = PO ?
         BNO   DSELCPYK            NO, GO KILL THE "FROM" DATA SET
         CLI   $MEMBER,C' '        BLANK MEMBER?
         BE    DSELCPYE            YES, DON'T KNOW WHAT HAPPENED THERE
         MVC   PUTLINS(4),OP3PT1D  TELL REVPDS TO DELETE A MEMBER
         MVC   PUTLINS+4(8),$MEMBER
         L     R15,=A(REVPDS)      POINT TO ENTRY POINT
         BASR  R14,R15             DELETE THE MEMBER
         CLI   MSG,209             MEMBER DELETED?
         BNE   DSELCPYE            NO, MOVE PROCESSING NOW COMPLETE
         MVI   MSG,219             MEMBER MOVED
         B     DSELCPYE            MOVE PROCESSING NOW COMPLETE
DSELCPYK L     R15,=A(REVDSCB)     POINT TO ENTRY POINT
         MVI   STATUS11,X'FF'      SET FINALITY FLAG
         BASR  R14,R15             DISPLAY CONFIRMATION PANEL
         LH    R0,MSG              SAVE MESSAGE STATUS
         MVI   MSG,171             DATA SET DELETED
         CLI   REPLY,ENTERAID      WAS DELETION CONFIRMED?
         BE    DSELCPYE            YES, GO DO IT
         MVI   STATUS11,0          NO, RESET FINALITY FLAG
         STH   R0,MSG              RESTORE MESSAGE STATUS
DSELCPYE NI    STATUS15,255-$153PT3 OPTION 3.3 OPERATION NOW COMPLETE
         MVC   $MEMBER,MENUBLNK    CLEAR REISUDAL MEMBER BNAME
         B     DSELFRM2            GO FREE "FROM" FILE
         SPACE
*   COPYING SELECTED MEMBERS FROM A PDS TO A PDS
*   - SERIALIZATION WILL BE APPLIED ON A MEMBER-BY-MEMBER BASIS,
*     SO THE FIRST STEP IS TO REMOVE SERIALIZATION ALREADY PRESENT.
*     NOTE THAT THE OAIA AT MSG+64 STILL HOLDS THE "TO" PDS DETAILS,
*     WHICH IS HOW THE OUTPUT "$" VARIABLES ARE PRESERVED FOR REVIEW2.
*     THIS OAIA WILL BE UPDATED WITH THE RELEVANT MEMBER NAME
*     AS EACH MEMBER IS PROCESSED.
DSELCPYP OI    STATUS12,$12ENQ     REQUEST SERIALIZATION ONLY
         L     R15,=A(REVDALO)     POINT TO PROCESSOR ENTRY POINT
         BASR  R14,R15             DEQ SERIALIZATION RESOURCES
         L     R15,=A(REVPDS)      YES, POINT TO PROCESSOR ENTRY POINT
         BASR  R14,R15             INVOKE DATA SET PROCESSOR
         MVI   DATAKV+1,0          CLEAR 'DATA' OPERAND
         XC    MYDAPB,MYDAPB       CONSTRUCT DEALLOCATION REQUEST
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,OAIADDN     DDNAME
         MVC   DA18MNM,MENUBLNK    MEMBER NAME
         MVC   DA18SCLS,MENUBLNK   SYSOUT CLASS IS 2-BYTE FIELD
         XC    MYECB,MYECB
         DROP  R1                  OAIAREA
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR TO FREE FILE
         NI    STATUS15,255-$153PT3 OPTION 3.3 OPERATION NOW COMPLETE
         B     DSELFRM2            GO FREE "FROM" FILE
         SPACE
         DROP  R13                 @MENUWK
         DROP  R7                  DSELCOPY
         DROP  R11,R10,R8          REVMENU
         SPACE
         DC    0D'0'
BORVLBL  DC    AL1(FLDOUTHI),C'BROWSE',AL1(FLDOUTLO),C'OR'
         DC    AL1(FLDOUTHI),C'VIEW',AL1(FLDOUTLO)
BORVLEN  EQU   *-BORVLBL
         LTORG
         SPACE
         DC    0D'0'
         TITLE '  E D I T   R E C O V E R Y   '
**********************************************************************
*                                                          *         *
*         PERFORM DATA SET EDIT RECOVERY                   *  R45.0  *
*                                                          * SEP2014 *
**********************************************************************
*                                                                    *
*        THIS SUBROUTINE OF REVMENU INITIATES EDIT RECOVERY.         *
*                                                                    *
*        IT SHARES THE @MENUWK WORKING STORAGE WITH REVMENU,         *
*        BUT HAS ITS OWN REGISTER SAVE AREA CALLED 'MENSAVE2'.       *
*                                                                    *
*        IT IS INVOKED WHEN RFE OPTION 2 IS SELECTED FOR THE         *
*        FIRST TIME IN AN RFE SESSION OR LOGICAL SCREEN.             *
*                                                                    *
*        IF THE ONLY REASON THAT THE EDIT RECOVERY CANNOT            *
*        SUCCEED IS THE INABILITY TO ALLOCATE THE EDITED DATA        *
*        SET THEN THE RECOVERY IS LEFT PENDING AND MAY BE            *
*        RETRIED LATER IN THE SAME LOGICAL SESSION.                  *
*                                                                    *
*        IT WILL NOT NORMALLY BE RETRIED BECAUSE THE SESSION         *
*        MUST ABEND TO CREATE A DANGLING RECOVERY DATA SET.          *
*                                                                    *
*        IF A RECOVERY DATA SET IS DETECTED THEN ITS '$REVEDID'      *
*        MEMBER IS READ TO DETERMINE THE EDITED DATA SET WHICH       *
*        IS THEN ALLOCATED.                                          *
*                                                                    *
**********************************************************************
         EJECT
**********************************************************************
*                                                                    *
* REGISTERS ON ENTRY: R1 -> MENALMSG (LOCAL STATIC STORAGE)          *
*                     R9 -> @DATA                                    *
*                     R13-> @MENUWK/SAVE AREA                        *
*                     R14-> RETURN ADDRESS                           *
*                     R15-> RECOVEDT (NOT RELIED UPON)               *
*                                                                    *
* DURING PROCESSING:  R9 -> @DATA                                    *
*                     R10-> MENALMSG (LOCAL BASE & STATIC STORAGE)   *
*                     R11-> @MENUWK  (LOCAL DYNAMIC STORAGE)         *
*                     R13-> MENSAVE2 (LOCAL REGISTER SAVE AREA)      *
*                                                                    *
*                                                                    *
* WHEN REQUIRED, THE $14ALT FLAG IS SET TO:                          *
*                                                                    *
*      - INSTRUCT REVDASD THAT RACF 'ALTER' ACCESS TO THE            *
*        RECOVERY DATA SET IS REQUIRED.                              *
*                                                                    *
*      - INSTRUCT REVPROF THAT '$SUBCOM' DATA ITEM CONTAINS          *
*        THE NAME OF THE "ALTERNATE" FILE TO BE PROCESSED            *
*        INSTEAD OF THE REVIEW/RFE PROFILE DATA SET.                 *
*                                                                    *
*      - INSTRUCT REVEDIT THAT '$SUBCOM' DATA ITEM CONTAINS          *
*        THE NAME OF THE FILE ALLOCATED TO A PRE-EXISTING            *
*        RECOVERY DATA SET WHICH IS THE "ALTERNATE" SOURCE OF        *
*        THE EDIT DATA INSTEAD OF THE DATA SET BEING EDITED.         *
*                                                                    *
*                                                                    *
* RETURN CODES:   R15 = 0 - THE ABSENCE OF ANYTHING TO RECOVER       *
*                           HAS BEEN VERIFIED AND THERE ARE NO       *
*                           FURTHER CLEAN UP AND/OR RETRY            *
*                           REQUIREMENTS, ALTHOUGH THERE STILL       *
*                           MAY BE AN UNUSABLE REVEDIT#.BACKUP       *
*                           DATA SET IN EXISTENCE, SO THERE IS       *
*                           NO GUARANTEE THAT 'UNDO ON' CAN BE       *
*                           USED.                                    *
*                                                                    *
*                 R15 > 0 - RECOVERY HAS PROCEEDED TO THE STAGE      *
*                           WHERE REVEDIT CAN BE CALLED.             *
*                           THE FILE NAME OF THE RECOVERY DATA       *
*                           SET IS IN THE '$SUBCOM' DATA ITEM.       *
*                                                                    *
*                 R15 < 0 - RECOVERY WAS STOPPED BY THE INABILITY    *
*                           TO ALLOCATE THE EDITED DATA SET.         *
*                           AN EDIT OF ANYTHING ELSE MAY PROCEED     *
*                           WITH 'UNDO OFF'.                         *
*                                                                    *
**********************************************************************
         EJECT
         USING MENALMSG,R10
         USING @MENUWK,R11
RECOVEDT STM   R14,R12,12(R13)     NO, SAVE REGISTERS
         LR    R10,R1              SET LOCAL BASE
         LR    R11,R13             POINT TO WORKING STORAGE
         LA    R2,MENSAVE2         POINT TO SAVE AREA
         XC    0(12,R2),0(R2)      RESET SAVE AREA HEADER
         ST    R13,4(,R2)          CHAIN SAVE AREAS
         ST    R2,8(,R13)
         LR    R13,R2              POINT TO NEW SAVE AREA
         SPACE
*         DETERMINE UNDO/RECOVERY DATA SET NAME
         SPACE
         MVI   $DSNAME+2,C' '      BLANK DATA SET NAME AREA
         MVC   $DSNAME+3(43),$DSNAME+2
         LA    R2,$DSNAME+2        POINT TO DATA SET NAME AREA
         SR    R3,R3               CLEAR DATA SET NAME LENGTH
         L     R1,REVPSCB          POINT TO THE PSCB
         USING PSCB,R1
         L     R15,REVUPT          POINT TO THE UPT
         USING UPT,R15
         ICM   R3,1,UPTPREFL       GET THE LENGTH OF THE PREFIX
         BZ    RECOVHLQ            BRANCH IF PROFILE NOPREFIX
         MVC   0(7,R2),UPTPREFX    MAKE PREFIX HIGH LEVEL QUALIFIER
         CLI   UPTPREFX,C'>'       '>7BYTES'
         BNE   RECOVPFX            NO
         MVC   0(8,R2),UPT+33      LOAD UPTPREF8
         LA    R3,8                GET THE LENGTH OF THE PREFIX
RECOVPFX AR    R2,R3               POINT PAST PREFIX
         MVI   0(R2),C'.'          INSERT A PERIOD
         LA    R2,1(,R2)           POINT PAST IT
         CLC   PSCBUSER,UPTPREFX   PREFIX EQUALS USERID?
         BNE   RECOVHLQ            NO, INSERT USERID
         CLI   PSCBUSER,C'>'       ACTUAL USERID COMPARED?
         BNE   RECOVSFX            YES, APPEND SUFFIX
         CLC   PSCB+84(8),UPT+33   PSCBUID8 EQUALS UPTPREF8?
         BE    RECOVSFX            YES, APPEND SUFFIX
RECOVHLQ MVC   0(7,R2),PSCBUSER    MAKE USERID SECOND LEVEL QUALIFIER
         IC    R3,PSCBUSRL         GET THE LENGTH OF THE USERID
         CLI   PSCBUSER,C'>'       '>7BYTES'?
         BNE   RECOVUID            NO
         MVC   0(8,R2),PSCB+84     YES, LOAD PSCBUID8
         LA    R3,8                GET THE LENGTH OF THE USERID
         DROP  R1,R15              PSCB, UPT
RECOVUID AR    R2,R3               POINT PAST IT
         MVI   0(R2),C'.'          INSERT A PERIOD
         LA    R2,1(,R2)           POINT PAST IT
RECOVSFX MVC   0(15,R2),RECOVDSN   SUPPLY THE FIXED DSNAME PARTS
         MVC   7(1,R2),RECURS#+3   SUPPLY REVIEW SESSION NUMBER
         TR    7(1,R2),MENUHEX     CONVERT TO USABLE CHARACTER
         CLI   ZSCREEN,C'A'        VALID ISPF LOGICAL SCREEN NUMBER?
         BL    RECOVLEN            NO, USE RFE LOGICAL SCREEN NUMBER
         MVC   7(1,R2),ZSCREEN     YES, USE ISPF LOGICAL SCREEN NUMBER
RECOVLEN LA    R2,15(,R2)          POINT PAST DSNAME
         LA    R3,$DSNAME+2        POINT TO DSNAME
         SR    R2,R3               GET DSNAME LENGTH
         STH   R2,$DSNAME          SET DSNAME LENGTH
         SPACE
*         ALLOCATE UNDO/RECOVERY DATA SET
         SPACE
         XC    MYDAPB,MYDAPB
         MVI   DA08CD+1,X'08'
         LA    R0,$DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN,MENUBLNK
         MVC   DA08UNIT,MENUBLNK
         MVC   DA08SER,MENUBLNK
         MVC   DA08MNM,MENUBLNK
         MVC   DA08PSWD,MENUBLNK
         MVI   DA08DSP1,DA08OLD
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         MVI   DA08CTL,DA08PERM
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR
         LTR   R1,R15              ANY UNDO DATA SET FOUND?
         BZ    RECOVDS1            YES, GO LOOK AT IT
         SR    R8,R8               PREPARE RETURN CODE FOR NORMAL CASE
         CLC   =XL4'17080008',DA08DARC
         BE    RECOVXIT            NO DANGLING DATA IS THE NORMAL CASE
         LA    R15,MENALMSG        POINT TO MESSAGE ROUTINE
         BASR  R14,R15             REPORT DYNALLOC RESULTS
         B     RECOVXIT            NO EDIT RECOVERY THIS TIME
RECOVDS1 MVC   $DDNAME,DA08DDN     YES, SAVE DDNAME
         SPACE
*         ACQUIRE EDITED DATA SET IDENTIFICATION DETAILS
         SPACE
         LA    R1,$DDNAME          POINT TO NEW DDNAME
         L     R15,=A(REVDDLOC)    POINT TO SUBROUTINE
         BASR  R14,R15             FIND NEW DD TIOT ENTRY
         LTR   R15,R15             IS IT ALLOCATED?
         BZ    RECOVFRE            NO, BUT HOW?
         SR    R1,R1
         ICM   R1,7,17(R15)        GET THE UCB ADDRESS
         ST    R1,$UCBAD           SAVE IT
         MVC   $VOLSER,28(R1)      LOAD THE VOLUME SERIAL NUMBER
         XC    MYDSCB,MYDSCB       INVALIDATE VTOC ENTRY COPY
         CLI   18(R1),X'20'        DASD DATA SET?
         BNE   RECOVFRE            NO, NOT A REAL RECOVERY DATA SET
         OI    STATUS14,$14ALT     YES, SHOULD HAVE ALTER ACCESS
         L     R15,=A(REVDASD)     POINT TO DASD DATA SET INIT. ROUTINE
         BASR  R14,R15             CALL IT - ONLY R9 TO R13 PRESERVED
         NI    STATUS14,255-$14ALT RESET ACCESS LEVEL FLAGS
         LTR   R15,R15             SUCCESS?
         BNZ   RECOVFRE            NO, GO DEALLOCATE IT
         CLI   DS1RECFM,DCBRECF+DCBRECBR
         BNE   RECOVFRE            IGNORE IF UNEXPECTED RECORD FORMAT
         MVC   $SUBCOM,$DDNAME     PRIME "ALTERNATE FILE NAME"
         OI    STATUS14,$14ALT     REQUEST "ALTERNATE FILE" PROCESSING
         MVC   DOUBLE,=C'$REVEDID' SET REQUIRED MEMBER NAME
         LA    R3,2+44+8+6+8       GET MINIMUM RECORD LENGTH
         SR    R0,R0
RECOV1LP CR    R0,R3               RECORD LONG ENOUGH?
         BNL   RECOV1OK            YES
         AH    R0,DS1LRECL         NO, ADD ANOTHER RECORD LENGTH
         B     RECOV1LP            GO RECHECK THE LENGTH
RECOV1OK LR    R2,R0               REMEMBER GETMAIN SIZE
         SR    R1,R1               REQUEST NEW STORAGE
         L     R15,=A(REVPROF)     POINT TO PROFILE MANAGER
         BASR  R14,R15             FETCH PROFILE
         NI    STATUS14,255-$14ALT RESET "ALTERNATE FILE" FLAG
         MVI   MSG,37              BLDL FAILED
         ICM   R1,15,TTR           WAS THE UNDOMEM0 MEMBER DETECTED?
         BZ    RECOVFRE            NO, NO DATA TO RECOVER
         MVI   MSG,36              MEMBER NOT FOUND
         ICM   R1,15,DOUBLE+4      POINT TO FETCHED DATA
         BZ    RECOVFRE            NO DATA SO NO RECOVERY
         MVC   $DSNAME(46),0(R1)   LOAD DATA SET NAME
         MVC   $MEMBER,46(R1)      LOAD MEMBER NAME
         MVC   $VOLSER,46+8(R1)    LOAD VOLUME SERIAL
         MVC   $PASSWRD,46+8+6(R1) LOAD RECOVERY FILE RFE LEVEL
         LR    R0,R2               GET SIZE OF STORAGE TO FREE
         FREEMAIN RU,LV=(0),A=(1)  FREE $REVEDID RECORD AREA
         C     R3,DOUBLE           GOT REQUIRED BYTE COUNT?
         BH    RECOVFRE            NO, SO NO RECOVERY
         CLC   =H'44',$DSNAME      VALID DATA SET NAME LENGTH?
         BL    RECOVFRE            NO, SO NO RECOVERY
         CLI   $DSNAME+1,0         VALID DATA SET NAME LENGTH?
         BE    RECOVFRE            NO, SO NO RECOVERY
         MVI   MSG,0               RESET MESSAGE
         SPACE
*         ALLOCATE EDITED DATA SET
         SPACE
         XC    MYDAPB,MYDAPB
         MVI   DA08CD+1,X'08'
         LA    R0,$DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN,MENUBLNK
         MVC   DA08UNIT,MENALLDA
         MVC   DA08SER,MENUBLNK    CLEAR 8 BYTES
         MVC   DA08SER(6),$VOLSER
         MVC   DA08MNM,MENUBLNK
         MVC   DA08PSWD,MENUBLNK
         MVI   DA08DSP1,DA08OLD
         CLC   $MEMBER,MENUBLNK    ANY MEMBER?
         BE    *+8                 NO
         MVI   DA08DSP1,DA08SHR    YES
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR
         MVC   $DDNAME,DA08DDN     SAVE DDNAME
         LA    R8,4                PREPARE TO INITIATE RECOVERY
         LTR   R1,R15              WAS SUBJECT DATA SET ALLOCATED?
         BZ    RECOVXIT            YES, PROCEED WITH RECOVERY
         MVC   $DDNAME,MENUBLNK    NO, CLEAR FILE NAME
         LA    R15,MENALMSG        POINT TO MESSAGE ROUTINE
         BASR  R14,R15             REPORT DYNALLOC RESULTS
         LNR   R8,R8               RECOVERY FAILED
         SPACE
*         DEALLOCATE UNDO/RECOVERY DATA SET
         SPACE
RECOVFRE XC    MYDAPB,MYDAPB       CONSTRUCT DEALLOCATION REQUEST
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,$SUBCOM     DDNAME
         MVC   DA18MNM,MENUBLNK    MEMBER NAME
         MVC   DA18SCLS,MENUBLNK   SYSOUT CLASS IS 2-BYTE FIELD
         MVI   DA18CTL,DA18PERM    JUST IN CASE IT HELPS
         XC    MYECB,MYECB
         LA    R1,MYDAPL
         L     R15,CVTPTR(,0)      CVT
         L     R15,CVTDAIR-CVT(,R15)
         BASR  R14,R15             CALL IKJDAIR TO FREE FILE
         MVC   $SUBCOM,MENUBLNK    CLEAR DDNAME
         MVC   $PASSWRD,MENUBLNK   CLEAR RECOVERY FILE RFE RELEASE
         XC    TTR,TTR             CLEAR TTR OF MEMBER UNDOMEM0
         MVC   BLDLNAME,=C'$REVEDID'  SAVE MEMBER NAME FOR REVMSGS
         SPACE
*         RETURN TO CALLER
         SPACE
RECOVXIT L     R13,4(,R13)         POINT TO CALLER'S SAVE AREA
         ST    R8,16(,R13)         UPDATE R15 SLOT WITH RETURN CODE
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         DROP  R10,R11             MENALMSG, @MENUWK
         SPACE
         DROP  R9                  @DATA, DAPB MAPPINGS
         SPACE
         DC    0D'0'
RECOVDSN DC    CL16'REVEDIT0.BACKUP'
$MENEDID DC    CL8'$REVEDID'
         LTORG
         SPACE
         AIF   (&ENV390).NOMGRAF   SKIP GRAPHICS
         DC    0D'0'
         TITLE '  M V S / 3 7 0   G R A P H I C S  '
************************************************************
*                                                          *
*         CONSTRUCT GRAPHICS FOR MAIN MENU                 *
*                                                          *
************************************************************
         SPACE
*  THE THREE MVS/370 GRAPHICS HAVE THE SAME PIXEL DIEMENSIONS,
*  AND ARE CONSTRUCTED AND PROCESSED BY REVIMAGE IN TURN, SO
*  THE SAME PIXEL ARRAY STORAGE IS USED FOR ALL THREE.
         SPACE
         USING @MENUWK,R13
         USING MENUGRAF,R12
         USING @DATA,R9
         SPACE
*  DETERMINE IF GRAPHICS WILL BE DISPLAYED
MENUGRAF NI    STATUS17,255-$17NWT USE TGET WAIT
         L     R1,CVTPTR(,0)       POINT TO THE CVT
         CLI   CVTDCB-CVT(R1),X'13'    MVS/370?
         BNER  R14                 NO, GOT NOTHING TO SHOW
         ST    R14,DOWNR           YES, SAVE RETURN ADDRESS
         MVC   MENLPDIA,CVTLPDIA-CVT(R1)
         NI    MENLPDIA,X'7F'      SAVE PLPA DIRECTORY ADDRESS
         MVC   MENUSYM,SYMSTGF     SAVE SYMSTGF+SYMSTGL+SYMSTG3
         L     R1,CVTOPCTP-CVT(,R1)  -> RMCT
         L     R1,4(,R1)             -> CCT
         LH    R4,110(,R1)          GET CCVUTILP
         SR    R1,R1
         IC    R1,SYMSTGF          GET FIRST SYMBOL STORAGE ID
         LA    R1,2(,R1)           ADD 2
         CLM   R1,1,SYMSTGL        AT LEAST 3 SYMBOL STORAGES?
         BNH   MENDOLPS            YES, GO TRY TO USE GRAPHICS
         SPACE
*  DETERMINE IF A LARGER PLOT IS POSSIBLE
MEMMAPCK CLI   SCRNCOLS+3,132      IS SCREEN SUFFICIENTLY WIDE?
         BL    MENPICOK            NO, SKIP IT
         CLI   SCRNLNES+3,14+32+1  ARE THERE ENOUGH LINES?
         BL    MENPICOK            NO, SKIP IT
         L     R14,SCREENWK        POINT PAST SHADOW BUFFER
         L     R15,SCRNCOLS        GET SCREEN WIDTH
         SR    R14,R15             POINT TO LAST LINE'S SHADOW
         LA    R1,X'01'            GET CODE FOR BLUE
         SLL   R1,24               ZERO LENGTH AND PROMOTE PAD
         MVCL  R14,R0              MAKE LAST SCREEN LINE BLUE
         SPACE
*  PLOT REAL STORAGE AT A SCALE OF ONE CHARACTER PER FRAME
*  BECAUSE THE TERMINAL DOES NOT SUPPORT 3270 LPS GRAPHICS
         L     R6,SCRNCOLS         GET SCREEN WIDTH
         SRA   R6,1                HALVE IT
         LA    R0,64               GET HALF THE PLOT WIDTH
         SR    R6,R0               GO BACK TO START OF ROW
         AL    R6,SHADOWBF         POINT PAST LAST PRIMARY LINE
         S     R6,SCRNCOLS         GO UP ONE SCREEN LINE
         MVC   0(L'LEGENDTX,R6),LEGENDTX
         L     R1,PSATOLD          POINT TO THE CURRENT TCB
         L     R1,TCBTIO-TCB(,R1)  POINT TO THE TIOT
         MVC   L'LEGENDTX(8,R6),0(R1)  SHOW JOB NAME
         MVC   27+L'LEGENDTX(9,R6),LEDGCPU
         CVD   R4,DOUBLE
         ED    31+L'LEGENDTX(4,R6),DOUBLE+6
         MVC   12+L'LEGENDTX(10,R6),LEDGAFC
         LA    R0,12+L'LEGENDTX+4(,R6)
         ST    R0,DOUBLE           SAVE AFC DISPLAY ADDRESS
         MVC   42+L'LEGENDTX(7,R6),LEDGRGN
         S     R6,SCRNCOLS         GO UP ANOTHER SCREEN LINE
         LR    R7,R6               COPY POINTER
         A     R7,SCREENSZ         POINT TO SHADOW BUFFER
         L     R3,PSAAOLD          POINT TO THE CURRENT ASCB
         USING ASCB,R3
         LH    R2,ASCBASID         GET CURRENT ASID
         DROP  R3                  ASCB
         L     R3,CVTPTR(,0)       POINT TO THE CVT
         L     R3,CVTPVTP-CVT(,R3) POINT TO THE PVT
         USING PVT,R3
         L     R4,PVTPFTP          POINT TO PFT APPARENT ORIGIN
         USING PFTE,R4
         SR    R5,R5
         ICM   R5,3,PVTFPFN        GET FIRST PFTE NUMBER
         SRL   R5,4                GET NUCLEUS FRAME COUNT
         LA    R0,128              GET FRAMES PER SCREEN LINE
MEMNUCLP MVI   0(R6),C'N'          NON-RSM NUCLEUS
         MVI   0(R7),X'02'         RED
         LA    R6,1(,R6)           POINT TO NEXT FRAME'S DISPLAY
         LA    R7,1(,R7)           POINT TO NEXT FRAME'S DISPLAY
         LA    R4,PFTEND           POINT TO NEXT (PRETEND) PFTE
         BCT   R0,MEMNUCNX         PROCESS NEXT NUCLEUS FRAME
         LA    R0,128              GET FRAMES PER SCREEN LINE
         SR    R6,R0               GO BACK TO START OF ROW
         SR    R7,R0               GO BACK TO START OF ROW
         S     R6,SCRNCOLS         GO UP ONE SCREEN LINE
         S     R7,SCRNCOLS         GO UP ONE SCREEN LINE
MEMNUCNX BCT   R5,MEMNUCLP         READY FOR NEXT NUCLEUS FRAME
         ICM   R5,3,PVTLPFN        GET LAST PFTE NUMBER BY 16
         SR    R1,R1               CLEAR FOR INSERT
         LA    R5,16(,R5)          GET TOTAL PAGE FRAME COUNT BY 16
         ICM   R1,3,PVTFPFN        GET FIRST PFTE NUMBER BY 16
         SR    R5,R1               GET NON-NUCLEUS FRAME COUNT BY 16
         SRL   R5,4                GET NON-NUCLEUS FRAME COUNT
         DROP  R3                  PVT
         SR    R3,R3               RESET AVAILABLE FRAM COUNT
MEMFRMLP MVI   0(R6),C'-'          DASH FOR AVAILABLE
         MVI   0(R7),X'01'         BLUE FOR AVAILABLE
         LA    R3,1(,R3)           COUNT AVAILABLE FRAME
         TM    PFTFLAG1,PFTONAVQ   AVAILABLE FRAME?
         BO    MEMXTFRM            YES, SKIP ASID CHECK
         BCTR  R3,0                WHOOPS, IT WASN'T REALLY AVAILABLE
         MVI   0(R6),C'O'          O FOR OFFLINE
         MVI   0(R7),X'02'         RED FOR NON-RSM
         TM    PFTFLAG1,PFTBADPG+PFTOFFLN
         BO    MEMXTFRM            RED FOR BAD AND OFFLINE FRAMES
         TM    PFTFLAG1,PFTLSQA    SQA OR LSQA?
         BNO   MEMONSQA            NO, NON-SQA
         MVI   0(R7),X'05'         TURQUOISE FOR SQA AND LSQA
         MVI   0(R6),C'L'          INDICATE LSQA
         ICM   R1,3,PFTASID        SENSIBLE ASID?
         BP    MEMFRMNX            YES
         MVI   0(R6),C'S'          INDICATE SQA
         CLI   PFTQNDX,PFTSRQN     SQA RESERVE QUEUE?
         BNE   MEMXTFRM            NO, ACTUAL SQA OR LSQA FRAME
         MVI   0(R6),X'06'         YES, REALLY SUBPOOL 227 OR 228
         B     MEMXTFRM            SO COUNT AS PAGE-FIXED CSA
MEMONSQA TM    PFTASID,X'80'       COMMON FRAME?
         BO    MEMCOMON            YES
         MVI   0(R7),X'03'         PINK FOR PRIVATE PAGE-FIXED FRAME
         MVI   0(R6),C'P'          INDICATE PRIVATE
         TM    PFTFLAG1,PFTVRALC   ALLOCATED TO V=R?
         BO    MEMFRMNX            YES
         ICM   R1,3,PFTFXCT        PAGE-FIXED?
         BNZ   MEMFRMNX            YES
         MVI   0(R7),X'04'         GREEN FOR PRIVATE PAGABLE FRAME
         B     MEMFRMNX            YES
MEMCOMON MVI   0(R7),X'06'         YELLOW FOR COMMON PAGE-FIXED FRAME
         MVI   0(R6),C'C'          INDICATE COMMON
         CLC   PFTVBN,MENLPDIA+1   PLPA PAGE?
         BL    *+8                 NO
         MVI   0(R6),C'A'          INDICATE PLPA
         ICM   R1,3,PFTFXCT        PAGE-FIXED?
         BNZ   MEMXTFRM            YES
         MVI   0(R7),X'01'         BLUE FOR COMMON PAGABLE FRAME
MEMFRMNX CLM   R2,3,PFTASID        CURRENT ASID PRIVATE FRAME?
         BNE   MEMXTFRM            NO
         MVI   0(R6),C'U'          YES, INDICATE THIS
MEMXTFRM LA    R6,1(,R6)           POINT TO NEXT FRAME'S DISPLAY
         LA    R7,1(,R7)           POINT TO NEXT FRAME'S DISPLAY
         LA    R4,PFTEND           POINT TO NEXT PFTE
         BCT   R0,MEMFRMOK         PROCESS NEXT NON-NUCLEUS FRAME
         DROP  R4                  PFTE
         LA    R0,128              GET FRAMES PER SCREEN LINE
         SR    R6,R0               GO BACK TO START OF ROW
         SR    R7,R0               GO BACK TO START OF ROW
         S     R6,SCRNCOLS         GO UP ONE SCREEN LINE
         S     R7,SCRNCOLS         GO UP ONE SCREEN LINE
MEMFRMOK BCT   R5,MEMFRMLP         READY FOR NEXT NON-NUCLEUS FRAME
         L     R5,DOUBLE           POINT TO AFC DISPLAY AREA
         CVD   R3,DOUBLE
         ED    0(6,R5),DOUBLE+5    SHOW AVAILABLE FRAME COUNT
         SPACE
*  LABEL LARGE PLOT
         LA    R0,23
         MH    R0,SCRNCOLS+2
         L     R6,SHADOWBF
         SR    R6,R0
         L     R0,SCRNCOLS
         SRA   R0,1
         AR    R6,R0
         LA    R0,64+2
         SR    R6,R0
         LR    R5,R6
         A     R5,SCREENSZ
         LA    R0,13               GET LENGTH OF LABEL
         LA    R1,=C'REAL  STORAGE'  & POINT TO IT
MEMLBLLP MVC   0(1,R6),0(R1)       LOAD A LABEL CHARACTER
         MVI   0(R5),X'07'         SHOW LABEL IN WHITE
         A     R6,SCRNCOLS         POINT TO NEXT LINE
         A     R5,SCRNCOLS         POINT TO NEXT LINE'S SHADOW
         LA    R1,1(,R1)           POINT TO NEXT CHARACTER OF LABEL
         BCT   R0,MEMLBLLP
         B     MENGRFOK            PLOT DONE - NOW GO MAKE ACTUAL MENU
         SPACE
*  EMPLOY 3270 PROGRAMMED SYMBOL GRAPHICS -
*  DETERMINE IF USING COLOUR OR MONOCHROME GRAPHICS
MENDOLPS CLI   SYMSTG3+1,0         AT LEAST 2 ARE TRIPLE-PLANE?
         BH    *+8                 YES, COLOUR CAN BE USED
         OI    MENFLGS,$MFMONO     NO, ONLY USE MONOCHROME
         SPACE
*  ACQUIRE STORAGE FOR GRAPHICS PIXEL ARRAY
         LA    R0,132              128 X 128 SQUARE WITH BORDER OF 2
         LR    R1,R0
         MR    R0,R0
         LR    R0,R1               GET ARRAY BYTE COUNT
         LR    R7,R1               GET ARRAY BYTE COUNT
         L     R1,HSEACTIV         LOAD RESIDUAL ADDRESS
         C     R0,PICSTGSZ         DOES IT ALREADY EXIST?
         BE    MENGRSTG            YES, REUSE SAME STORAGE
         MVI   GETMNTRC,31         TRACK GETMAIN IN CASE OF FAILURE
         GETMAIN RC,LV=(0),SP=17,LOC=(31,64)
         LTR   R15,R15             NEW ARRAY STORAGE ACQUIRED?
         BNZ   MEMMAPCK            NO, SKIP GRAPHIC, TRY BIG PLOT
         ST    R1,HSEACTIV         YES, SAVE ADDRESS FOR CLEAN-UP
         ST    R7,PICPELCT         SAVE PIXEL COUNT
         ST    R7,PICSTGSZ         SAVE STORAGE SIZE (MULTIPLE OF 8)
MENGRSTG EQU   *
         SPACE
*  CHOOSE SCREEN LINES FOR ALL THREE GRAPHICS
         L     R14,SCRNLNES        GET SCREEN LINE COUNT
         LA    R0,24
         SR    R14,R0              GET LINES IN EXCESS OF 24
         SRA   R14,1               HALVE IT
         LA    R14,14(,R14)        SAY LINE 15 FOR 24-LINE SCREEN
         STH   R14,Y_OFFSET        SET TOP BORDER SCREEN LINE
         L     R14,SCRNCOLS        GET SCREEN WIDTH
         LA    R0,80
         SR    R14,R0
         SRA   R14,1
         STH   R14,MENUMRGN        SAVE WIDE SCREEN COLUMN OFFSET
         SPACE
*  INITIALIZE PIXELS TO YELLOW FOR REAL STORAGE FRAME DISPLAY
*    (THIS PROVIDES A QUICK WAY TO GET THE YELLOW BORDER, BECAUSE
*    ALL FRAME ARRAY ELEMENTS WILL BE PROCESSED LATER)
         LR    R6,R1               POINT TO PIXEL STORAGE
         AR    R1,R7               POINT PAST END OF PICTURE ARRAY
         ST    R1,PICENDAD         SAVE FOR DISPLAY ROUTINE
         MVI   PICCOLOR,X'F7'      DISPLAY PICTURE IN NEUTRAL
         MVI   X_PELS+3,132        SET PICTURE WIDTH
         MVI   Y_PELS+3,132        SET PICTURE HEIGHT
         LA    R15,X'06'           BORDER COLOUR IS YELLOW
         SLL   R15,24              ZERO LENGTH AND SET PAD
         MVCL  R6,R14              SET ALL PIXELS TO THE BORDER COLOUR
         MVI   X_BYTES+1,15        PICTURE COLUMN COUNT
         LA    R0,57
         AH    R0,MENUMRGN
         STH   R0,X_OFFSET         LEFT BORDER IN COLUMN 58
         MVI   Y_BYTES+1,9         PICTURE LINE COUNT
         MVI   X_Y_SYMS+3,135      PICTURE MAXIMUM SYMBOL COUNT
         MVI   PICOLRES+3,3        INDICATE COLOUR PICTURE
         MVI   PICFLAGS,PICNBW     NEW PICTURE AND NO SOURCE DATA
         SPACE
*  LOAD FRAME STATUS INDICATIONS AND GATHER UIC DISTRIBUTION DATA
         XC    MENUIC(256),MENUIC  RESET UIC DISTRIBUTION COUNTERS
         SR    R14,R14             CLEAR FOR INSERT
         L     R3,PSAAOLD          POINT TO THE CURRENT ASCB
         USING ASCB,R3
         LH    R2,ASCBASID         GET CURRENT ASID
         DROP  R3                  ASCB
         L     R3,CVTPTR(,0)       POINT TO THE CVT
         L     R3,CVTPVTP-CVT(,R3) POINT TO THE PVT
         USING PVT,R3
         L     R4,PVTPFTP          POINT TO PFT APPARENT ORIGIN
         USING PFTE,R4
         SR    R5,R5
         ICM   R5,3,PVTFPFN        GET FIRST PFTE NUMBER
         SRL   R5,4                GET NUCLEUS FRAME COUNT
         L     R6,PICENDAD         POINT PAST PIXEL ARRAY
         LA    R0,132*3+130
         SR    R6,R0               POINT TO PIXEL DATA FOR PSA
         LA    R0,64               GET FRAMES PER PIXEL SCAN LINE
MENNUCLP MVI   0(R6),X'02'         RED FOR NON-RSM (NUCLEUS)
         MVI   1(R6),X'02'         DOUBLE THE WIDTH
         LA    R6,2(,R6)           POINT TO NEXT FRAME'S PIXEL DATA
         LA    R4,PFTEND           POINT TO NEXT (PRETEND) PFTE
         BCT   R0,MENNUCNX         PROCESS NEXT NUCLEUS FRAME
         LA    R0,132*2+128        PIXEL SCAN LINE NOW COMPLETE
         SR    R6,R0               POINT TO NEXT SCAN LINE DATA
         MVC   132*3(128,R6),132*2(R6)   DOUBLE THE HEIGHT
         LA    R0,64               GET FRAMES PER PIXEL SCAN LINE
MENNUCNX BCT   R5,MENNUCLP         READY FOR NEXT NUCLEUS FRAME
         ICM   R5,3,PVTLPFN        GET LAST PFTE NUMBER BY 16
         SR    R1,R1               CLEAR FOR INSERT
         LA    R5,16(,R5)          GET TOTAL PAGE FRAME COUNT BY 16
         ICM   R1,3,PVTFPFN        GET FIRST PFTE NUMBER BY 16
         SR    R5,R1               GET NON-NUCLEUS FRAME COUNT BY 16
         SRL   R5,4                GET NON-NUCLEUS FRAME COUNT
MENFRMLP MVI   0(R6),X'00'         BLACK FOR AVAILABLE
         TM    PFTFLAG1,PFTONAVQ   AVAILABLE FRAME?
         BO    MENFRMN2            YES, SKIP ASID CHECK
         MVI   0(R6),X'02'         RED FOR NON-RSM
         TM    PFTFLAG1,PFTBADPG+PFTOFFLN
         BO    MENFRMN2            RED FOR BAD AND OFFLINE FRAMES
         TM    PFTFLAG1,PFTLSQA    SQA OR LSQA?
         BNO   MENONSQA            NO, NON-SQA
         MVI   0(R6),X'05'         TURQUOISE FOR SQA AND LSQA
         CLI   PFTQNDX,PFTSRQN     SQA RESERVE QUEUE?
         BNE   MENFRMNX            NO, ACTUAL SQA OR LSQA FRAME
         MVI   0(R6),X'06'         YES, REALLY SUBPOOL 227 OR 228
         B     MENFRMNX            SO COUNT AS PAGE-FIXED CSA
MENONSQA TM    PFTASID,X'80'       COMMON FRAME?
         BO    MENCOMON            YES
         MVI   0(R6),X'03'         PINK FOR PRIVATE PAGE-FIXED FRAME
         TM    PFTFLAG1,PFTVRALC   ALLOCATED TO V=R?
         BO    MENFRMNX            YES
         ICM   R1,3,PFTFXCT        PAGE-FIXED?
         BNZ   MENFRMNX            YES
         MVI   0(R6),X'04'         GREEN FOR PRIVATE PAGABLE FRAME
         B     MENFRMNX            YES
MENCOMON MVI   0(R6),X'06'         YELLOW FOR COMMON PAGE-FIXED FRAME
         ICM   R1,3,PFTFXCT        PAGE-FIXED?
         BNZ   MENFRMNX            YES
         MVI   0(R6),X'01'         BLUE FOR COMMON PAGABLE FRAME
MENFRMNX CLM   R2,3,PFTASID        CURRENT ASID PRIVATE FRAME?
         BNE   MENFRMN2            NO
         MVI   0(R6),X'07'         YES, FLAG THIS WITH WHITE ON LEFT
MENFRMN2 MVC   1(1,R6),0(R6)       DOUBLE THE WIDTH
         ICM   R14,1,PFTUIC        GET FRAME UIC
         BZ    MENXTFRM            ZERO SO DO NOT COUNT IT
         SRL   R14,1               SHIFT OUT LOW-ORDER BIT
         SLL   R14,1               GET ARRAY INDEX
         LA    R15,1
         AH    R15,MENUIC(R14)     INCREMENT ARRAY COUNTER ELEMENT
         STH   R15,MENUIC(R14)
MENXTFRM LA    R6,2(,R6)           POINT TO NEXT FRAME'S PIXEL DATA
         LA    R4,PFTEND           POINT TO NEXT PFTE
         BCT   R0,MENFRMOK         PROCESS NEXT NON-NUCLEUS FRAME
         DROP  R4                  PFTE
         LA    R0,132*2+128        PIXEL SCAN LINE NOW COMPLETE
         SR    R6,R0               POINT TO NEXT SCAN LINE DATA
         MVC   132*3(128,R6),132*2(R6)   DOUBLE THE HEIGHT
         LA    R0,64               GET FRAMES PER PIXEL SCAN LINE
MENFRMOK BCT   R5,MENFRMLP         READY FOR NEXT NON-NUCLEUS FRAME
         SPACE
*  DISPLAY REAL STORAGE FRAME STATUS
         TM    MENFLGS,$MFMONO     CAN COLOUR GRAPHIC BE SHOWN?
         BNO   *+8                 YES, PROCEED
         BAS   R14,MENUMONO        NO, TRANSFORM TO MONOCHROME
         SPACE
         L     R15,=A(REVIMAGE)    POINT TO SYMBOL ROUTINE
         BASR  R14,R15             GO LOAD SYMBOL DATA
         SPACE
         TM    MENFLGS,$MFMONO     WERE SINGLE-PLANE SYMBOLS USED?
         BNO   MENDONE1            NO, PROCEED
         IC    R1,SYMSTGF          YES
         LA    R1,1(,R1)           ONE SYMBOL SET NOW UNAVAILABLE
         STC   R1,SYMSTGF          TELL REVIMAGE TO USE THE NEXT ONE
MENDONE1 EQU   *
         SPACE
*  CLEAR PIXELS AND LOAD X-AXIS FOR UIC BAR GRAPH
         L     R6,HSEACTIV         POINT TO PIXEL STORAGE
         L     R7,PICSTGSZ         GET ITS SIZE
         MVI   PICCOLOR,X'F7'      SHOW GRAPH IN WHITE
         SR    R15,R15             ZERO PAD AND SOURCE LENGTH
         LA    R0,132+132          GET LENGTH OF TWO SCAN LINES
         SR    R7,R0               SAVE TWO SCAN LINES
         MVCL  R6,R14              SET ALL PIXELS TO BLACK
         LR    R7,R0               GET LENGTH OF TWO SCAN LINES
         LA    R15,X'01'           GET CODE FOR NON-BLACK
         SLL   R15,24              ZERO LENGTH AND SET PAD
         MVCL  R6,R14              COLOUR LAST TWO SCAN LINES AS BASE
         LA    R0,32
         AH    R0,MENUMRGN
         STH   R0,X_OFFSET         LEFT BORDER IN COLUMN 33
         MVI   PICOLRES+3,1        INDICATE MONOCHROME PICTURE
         MVI   PICFLAGS,0          NEW PICTURE AND NO SOURCE DATA
         SPACE
*  PROVIDE A Y-AXIS LEFT OF FIRST POSSIBLE BAR PLOT
         L     R15,HSEACTIV        POINT TO PIXEL STORAGE
         LA    R0,132              INCLUDE X-AXIS IN SCANLINE COUNT
MNUICYLP MVI   0(R15),X'00'        SET LEFT-MOST PIXEL TO BLACK
         MVI   1(R15),X'01'        ILLUMINATE SECOND PIXEL FOR Y-AXIS
         LA    R15,132(,R15)       POINT TO NEXT SCAN LINE
         BCT   R0,MNUICYLP         CONTINUE MAKING Y-AXIS
         SPACE
*  CONSTRUCT UNREFERENCED INTERVAL COUNT FRAME DISTRIBUTION BAR GRAPH
         LA    R0,132+132+132-2    GET LENGTH OF THREEISH SCAN LINES
         SR    R6,R0               POINT TO BOTTOM OF FIRST BAR PLOT
         LA    R15,MENUIC          POINT TO UIC DISTRIBUTION ARRAY
         SR    R5,R5               CLEAR FOR INSERT
         L     R2,HSEACTIV         POINT TO PIXEL STORAGE
         LA    R1,132              GET SCAN LINE LENGTH
         LA    R14,128             GET ARRAY ELEMENT COUNT
MENUICLP ICM   R5,3,0(R15)         LOAD FRAME COUNT WITH THIS UIC
         BZ    MENUICNX            ZERO SO DON'T PLOT IT
         LA    R5,1(,R5)           ENSURE IT WILL SHOW
         SRA   R5,1                SCALE IT
         LR    R4,R6               POINT TO FIRST POINT TO PLOT
MENPLTLP MVI   0(R4),X'01'         SET PIXEL ON
         SR    R4,R1               GO UP A SCAN LINE
         CLR   R4,R2               BEFORE START OF PIXELS?
         BL    MENUICNX            YES, DONE PLOT FOR THIS ELEMENT
         BCT   R5,MENPLTLP         NO, DO NOT TRUNCATE (YET)
MENUICNX LA    R6,1(,R6)           POINT TO NEXT BOTTOM PIXEL ALONG
         LA    R15,2(,R15)         POINT TO NEXT UIC ARRAY ELEMENT
         BCT   R14,MENUICLP        GO PLOT IT
         SPACE
*  DISPLAY UNREFERENCED INTERVAL COUNT FRAME DISTRIBUTION BAR GRAPH
         L     R15,=A(REVIMAGE)    POINT TO SYMBOL ROUTINE
         BASR  R14,R15             GO LOAD SYMBOL DATA
         SPACE
*  CLEAR PIXELS AND LOAD YELLOW BORDER FOR VIRTUAL STORAGE DISPLAY
*    (NOT ALL PAGE ARRAY ELEMENTS WILL BE PROCESSED LATER,
*     SO THEY MUST BE CLEARED BEFOREHAND)
         L     R6,HSEACTIV         POINT TO PIXEL STORAGE
         L     R7,PICSTGSZ         GET ITS SIZE
         MVI   PICCOLOR,X'F7'      DISPLAY PICTURE IN NEUTRAL
         SR    R15,R15             ZERO PAD AND SOURCE LENGTH
         LA    R0,132+132+2        GET LENGTH OF TWO SCAN LINES + 2
         SR    R7,R0               SAVE TWO SCAN LINES
         MVCL  R6,R14              SET ALL PIXELS TO BLACK
         LR    R7,R0               GET LENGTH OF TWO SCAN LINES + 2
         LA    R15,X'06'           BORDER COLOUR IS YELLOW
         SLL   R15,24              ZERO LENGTH AND SET PAD
         MVCL  R6,R14              COLOUR LAST TWO SCAN LINES
         L     R6,HSEACTIV         POINT TO PIXEL STORAGE
         LR    R7,R0               GET LENGTH OF TWO SCAN LINES + 2
         MVCL  R6,R14              COLOUR FIRST TWO SCAN LINES
         LA    R0,127
MEMVSMLP MVI   128(R6),X'06'       COLOUR RIGHT BORDER OF THIS LINE
         MVC   129(3,R6),128(R6)   AND LEFT BORDER OF NEXT
         LA    R6,132(,R6)         GO DOWN A LINE
         BCT   R0,MEMVSMLP
         LA    R0,7
         AH    R0,MENUMRGN
         STH   R0,X_OFFSET         LEFT BORDER IN COLUMN 8
         MVI   PICOLRES+3,3        INDICATE COLOUR PICTURE
         MVI   PICFLAGS,PICNBW     NEW PICTURE AND NO SOURCE DATA
         MVC   SYMSTG3(6),SYMSTG3+1
         MVI   SYMSTG3+6,0         PREVENT REVIMAGE SYMBOL OVERLAY
         SPACE
*  PLOT NUCLEUS PAGES
         SR    R5,R5
         ICM   R5,3,PVTFPFN        GET FIRST PFTE NUMBER
         SRL   R5,4                GET NUCLEUS FRAME COUNT
         L     R6,PICENDAD         POINT PAST PIXEL ARRAY
         LA    R0,132*3+130
         SR    R6,R0               POINT TO PIXEL DATA FOR PSA
         LA    R0,64               GET FRAMES PER PIXEL SCAN LINE
MENUC2LP MVI   0(R6),X'02'         RED FOR V=R NUCLEUS PAGES
         MVI   1(R6),X'02'         DOUBLE THE WIDTH
         LA    R6,2(,R6)           POINT TO NEXT FRAME'S PIXEL DATA
         BCT   R0,MENUC2NX         PROCESS NEXT NUCLEUS FRAME
         LA    R0,132*2+128        PIXEL SCAN LINE NOW COMPLETE
         SR    R6,R0               POINT TO NEXT SCAN LINE DATA
         LA    R0,64               GET FRAMES PER PIXEL SCAN LINE
MENUC2NX BCT   R5,MENUC2LP         READY FOR NEXT NUCLEUS FRAME
         SPACE
*  PLOT SQA AND LSQA PAGES - FIND THEM IN REAL STORAGE
         L     R2,PSAAOLD          POINT TO THE CURRENT ASCB
         USING ASCB,R2
         LH    R2,ASCBASID         GET CURRENT ASID
         DROP  R2                  ASCB
         L     R5,PVTPFTP          POINT TO PFT APPARENT ORIGIN
         LR    R4,R5               COPY THIS ADDRESS
         USING PFTE,R4
         SR    R15,R15
         ICM   R15,3,PVTLPFN
         AR    R5,R15
         ICM   R15,3,PVTFPFN
         AR    R4,R15              POINT TO FIRST PFTE
MENPGLP1 TM    PFTFLAG1,PFTLSQA    SQA OR LSQA?
         BNO   MENPGNX1            NO, NOT INTERESTED IN THIS ONE
         LA    R0,X'05'            SET COLOUR FOR SQA/LSQA PAGE
         CLI   PFTASID,X'FF'       SQA PAGE?
         BE    MENPGSQA            YES, PLOT IT
         LA    R0,X'03'            SET COLOUR FOR SQA/LSQA PAGE
         CLM   R2,3,PFTASID        CURRENT ASID PRIVATE FRAME?
         BNE   MENPGNX1            NO, NOT INTERESTED IN THIS ONE
MENPGSQA SR    R6,R6               CLEAR FOR INSERT
         ICM   R6,6,PFTVBN         GET VIRTUAL STORAGE ADDRESS
         BAS   R14,MENPGPLT
MENPGNX1 LA    R4,PFTEND           POINT TO NEXT PFTE
         CR    R4,R5               GONE PAST LAST PFTE?
         BNH   MENPGLP1            NO, GO CHECK IT OUT
         DROP  R3,R4               PVT, PFTE
         SPACE
*  PLOT CSA PAGES
         L     R3,CVTPTR(,0)       POINT TO THE CVT
         L     R3,CVTGDA-CVT(,R3)  POINT TO THE GLOBAL DATA AREA
         USING GDA,R3
         L     R3,CSASPQEP         POINT TO FIRST SUBPOOL ENTRY
         DROP  R3                  GDA
         USING SPQESECT,R3
NEXTSPQE LA    R0,X'01'            BLUE FOR PAGABLE COMMON
         CLI   SPQEID,230          227 OR 228?
         BH    NXTENTYP            NO, 231 AND 241 ARE PAGABLE
         LA    R0,X'06'            YELLOW FOR PAGE-FIXED COMMON
NXTENTYP LR    R4,R3               POINT TO FIRST DQE POINTER
         USING DQESECT,R4
NEXTDQE  ICM   R4,15,DQEPTR        POINT TO DQE
         BZ    DONSPKEY            ZERO POINTER SO END OF CHAIN
         CR    R4,R3               END OF CHAIN?
         BE    DONSPKEY            YES, DONE THIS KEY FOR THIS SUBPOOL
         L     R2,DQEBLKAD         NO, GET BLOCK ADDRESS
         L     R5,DQELNTH          GET ALLOCATED BLOCK LENGTH
         SRA   R5,12               CONVERT TO PAGE COUNT
         BZ    NEXTDQE             SKIP IF ZERO
PLOTCSA  LR    R6,R2               LOAD PAGE ADDRESS
         BAS   R14,MENPGPLT        PLOT THIS PAGE
         AH    R2,=H'4096'         POINT TO THE NEXT PAGE
         BCT   R5,PLOTCSA          GO PLOT THE NEXT CSA PAGE
         B     NEXTDQE             LOOK AT THE NEXT DQE
DONSPKEY ICM   R3,15,SPQEPTR       POINT TO NEXT SPQE
         BNZ   NEXTSPQE            PROCESS IT
         DROP  R3,R4               SPQESECT, DQESECT
         SPACE
*  PLOT USER PAGES
         L     R3,PSAAOLD          POINT TO THE CURRENT ASCB
         USING ASCB,R3
         L     R3,ASCBASXB         POINT TO THE CURRENT ASXB
         DROP  R3                  ASCB
         USING ASXB,R3
         MVC   DOUBLE(4),ASXBFTCB  COPY RCT TCB ADDRESS
         DROP  R3                  ASXB
MENTCBLP ICM   R3,15,DOUBLE        POINT TO NEXT TCB TO PROCESS
         BZ    MENTCBOK            DONE ALL TCBS ON DISPATCHING QUEUE
         USING TCB,R3
         MVC   DOUBLE(4),TCBTCB    SET NEXT TCB TO PROCESS
         L     R14,TCBMSS          GET FIRST TCB SPQE ANCHOR
         L     R15,TCBUKYSP        GET SECOND TCB SPQE ANCHOR
         L     R0,TCBSWA           GET THIRD TCB SPQE ANCHOR
         SR    R1,R1               GET LOW VALUES
         BCTR  R1,0                GET HIGH VALUES
         STM   R14,R1,MENUIC       SAVE THIS LIST
         LA    R0,MENUIC           POINT TO THIS LIST
         ST    R0,DOUBLE+4         SAVE ADDRESS OF NEXT ONE TO DO
MENANKLP L     R3,DOUBLE+4         POINT TO NEXT ANCHOR TO PROCESS
         CLI   0(R3),X'FF'         END OF SPQE ANCHOR LIST?
         BE    MENTCBLP            YES, GO LOOK AT NEXT TCB
         LA    R0,4(,R3)           NO, POINT TO NEXT ANCHOR
         ST    R0,DOUBLE+4         SAVE ITS ADDRESS
         USING SPQESECT,R3
MENSPQLP ICM   R3,15,SPQEPTR       POINT TO NEXT SPQE
         BZ    MENANKLP            END OF THIS SPQE CHAIN
         LA    R0,X'07'            WHITE FOR SYSTEM KEY PAGES
         CLI   SPQEKEY,X'80'       KEY LESS THAN 8?
         BL    *+8                 YES
         LA    R0,X'04'            GREEN FOR USER KEY PAGES
         LR    R4,R3               POINT TO FIRST DQE POINTER
         USING DQESECT,R4
MENDQELP ICM   R4,15,DQEPTR        POINT TO DQE
         BZ    MENSPQLP            ZERO POINTER SO END OF CHAIN
         CR    R4,R3               END OF CHAIN?
         BE    MENSPQLP            YES, DONE THIS KEY FOR THIS SUBPOOL
         L     R2,DQEBLKAD         NO, GET BLOCK ADDRESS
         L     R5,DQELNTH          GET ALLOCATED BLOCK LENGTH
         SRA   R5,12               CONVERT TO PAGE COUNT
         BZ    MENDQELP            SKIP IF ZERO
PLOTTCB  LR    R6,R2               LOAD PAGE ADDRESS
         BAS   R14,MENPGPLT        PLOT THIS PAGE
         AH    R2,=H'4096'         POINT TO THE NEXT PAGE
         BCT   R5,PLOTTCB          GO PLOT THE NEXT CSA PAGE
         B     MENDQELP            LOOK AT THE NEXT DQE
         DROP  R3,R4               SPQESECT, DQESECT
MENTCBOK EQU   *
         SPACE
*  COPY ELEMENT TOP SCAN LINES TO THEIR BOTTOM SCAN LINES
         L     R6,HSEACTIV         POINT TO PIXEL DATA
         LA    R0,66-1             GET 2-PIXEL LINE COUNT (BORDER OK)
MENPGLP2 MVC   132(132,R6),0(R6)   MAKE SECOND ROW A COPY OF FIRST
         LA    R6,132+132(,R6)     POINT TO NEXT SCAN LINE PAIR
         BCT   R0,MENPGLP2         KEEP FIXING EVERY SECOND SCAN LINE
         SPACE
*  PLOT LPA PAGES - USES SHADING SO DO AFTER SCAN LINE REPLICATION
         L     R3,CVTPTR(,0)       POINT TO THE CVT
         L     R4,CVTGDA-CVT(,R3)  POINT TO THE GLOBAL DATA AREA
         USING GDA,R4
         L     R3,SQASPQEP         POINT TO THE SQA SPQE
         USING SPQESECT,R3
         L     R3,SPDQEPTR         POINT TO FIRST DQE
         DROP  R3                  SPQESECT
         USING DQESECT,R3
         L     R5,DQEBLKAD         GET SQA ADDRESS - JUST PAST LPA
         DROP  R3                  DQESECT
         L     R3,CSAPQEP          POINT TO THE CSA PQE
         DROP  R4                  GDA
         USING PQESECT,R3
         L     R2,PQEREGN          GET THE CSA START ADDRESS
         L     R1,PQESIZE          GET THE CSA SIZE
         DROP  R3                  PQESECT
         AR    R2,R1               POINT PAST CSA TO LPA
         SR    R5,R2               GET TOTAL SIZE OF LPA
         SRA   R5,12               CONVERT TO PAGE COUNT
         LA    R0,X'04'            GREEN FOR LINK PACK AREA
         OI    MENFLGS,$MFDIM      USE HALF TONE SHADING
PLOTLPA  LR    R6,R2               LOAD PAGE ADDRESS
         BAS   R14,MENPGPLT        PLOT THIS PAGE
         AH    R2,=H'4096'         POINT TO THE NEXT PAGE
         BCT   R5,PLOTLPA          GO PLOT THE NEXT LPA PAGE
         NI    MENFLGS,255-$MFDIM  RESET HALF TONE SHADING FLAG
         SPACE
*  DISPLAY VIRTUAL STORAGE PAGE STATUS
         TM    MENFLGS,$MFMONO     CAN COLOUR GRAPHIC BE SHOWN?
         BNO   MENPAGES            YES, PROCEED
         BAS   R14,MENUMONO        NO, TRANSFORM TO MONOCHROME
         IC    R1,SYMSTGF
         LA    R1,1(,R1)           DO NOT OVERLAY UIC GRAPH SYMBOLS
         STC   R1,SYMSTGF
         SPACE
MENPAGES L     R15,=A(REVIMAGE)    POINT TO SYMBOL ROUTINE
         BASR  R14,R15             GO LOAD SYMBOL DATA
         SPACE
         MVC   SYMSTGF(9),MENUSYM  RESTORE SYMSTGF+SYMSTGL+SYMSTG3
         SPACE
*  LABEL GRAPHICS
         LH    R6,Y_OFFSET         GET LINE COUNT BEFORE GRAPHICS
         MH    R6,SCRNCOLS+2       GET SCREEN BYTES TO SKIP
         A     R6,SCREENBF         POINT TO THE GRAPHIC LINE
         AH    R6,MENUMRGN         ADJUST FOR WIDE SCREEN
         LR    R7,R6
         A     R7,SCREENSZ         POINT TO THE SHADOW LINE
         LA    R1,=CL8'FRAMES  '   POINT TO Y-AXIS LABEL
         LA    R0,8                GET THE LENGTH OF THE LABEL TEXT
MENYLBLP MVC   31(1,R6),0(R1)      COPY A LABEL CHARACTER
         MVI   31(R7),X'05'        SHOW IT IN TURQUOISE
         LA    R1,1(,R1)           POINT TO NEXT CHARACTER
         A     R6,SCRNCOLS         POINT TO NEXT LINE
         A     R7,SCRNCOLS         POINT TO NEXT LINE
         BCT   R0,MENYLBLP         CONTINUE WRITING LABEL
         MVI   31(R6),C'0'         SUPPLY X AXIS SCALE
         MVI   31(R7),X'01'        SHOW IT IN BLUE
         MVC   47(3,R6),=C'255'
         MVI   47(R7),X'01'
         MVC   48(2,R7),47(R7)
         A     R6,SCRNCOLS         POINT TO NEXT LINE
         A     R7,SCRNCOLS         POINT TO NEXT LINE
         L     R1,SHADOWBF         POINT TO SHADOW BUFFER
         SR    R1,R6               GET LENGTH TILL END OF SCREEN
         LR    R0,R7               POINT TO SHADOW LINE AFTER GRAPHICS
         LA    R15,X'05'           MAKE REST OF SCREEN TURQUOISE
         SLL   R15,24              PROMOTE PAD AND ZERO SOURCE LENGTH
         MVCL  R0,R14              SET REST OF SCREEN TO TURQUOISE
         MVC   7(15,R6),=C'VIRTUAL STORAGE'
         MVC   38(3,R6),=C'UIC'
         MVC   58(13,R6),=C'REAL  STORAGE'
MENGRFOK EQU   *
         OI    STATUS17,$17NWT     USE TGET NOWAIT
MENPICOK EQU   *
         L     R14,DOWNR           RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         SPACE
************************************************************
*                                                          *
*         CONVERT COLOUR GRAPHIC TO BLACK-AND-WHITE        *
*                                                          *
************************************************************
         SPACE
MENUMONO L     R15,HSEACTIV        POINT TO GRAPHIC ARRAY
         L     R0,PICSTGSZ         GET ITS SIZE
         AR    R15,R0              POINT PAST IT
MENMONLP BCTR  R15,0               POINT TO PREVIOUS BYTE
         CLI   0(R15),0            IS IT BLACK?
         BE    *+8                 YES, LEAVE IT UNCHANGED
         MVI   0(R15),1            NO, MAKE IT WHITE
         BCT   R0,MENMONLP         PROCESS ARRAY BACK TO ITS ORIGIN
         MVI   PICOLRES+3,1        CHANGE COLOUR REQUEST TO MONOCHROME
         MVI   PICFLAGS,0          CLEAR NON-BLACK/WHITE FLAG
         BR    R14                 RETURN TO CALLER
         SPACE
************************************************************
*                                                          *
*         PLOT PAGE IN GRAPHIC STORAGE SQUARE ARRAY        *
*                                                          *
************************************************************
         SPACE
*         R0=PLOT-COLOUR-CODE   R6=ADDRESS   R6/R7/R15 ARE ALTERED
         SPACE
MENPGPLT SR    R7,R7               CLEAR FOR SHIFT
         SRDL  R6,24-6             GET TOP 6 BITS OF ADDRESS/VBN
         LA    R6,2(,R6)           GET VERTICAL PIXELS TO CLIMB
         MH    R6,=Y(132+132)      SCALE UP BY ARRAY LINE PIXELS
         L     R15,PICENDAD        POINT PAST PIXEL ARRAY
         SRL   R7,32-6-1           GET LOW 6 BITS OF VBN TIMES 2
         SR    R15,R6              POINT TO RELEVANT SCANLINE
         STC   R0,2(R7,R15)        COLOUR TOP-LEFT PIXEL
         STC   R0,3(R7,R15)        COLOUR TOP-RIGHT PIXEL
         TM    MENFLGS,$MFDIM      USING HALF TONE "SHADING"?
         BNOR  R14                 NO, RETURN TO CALLER
         LA    R15,2(R7,R15)       YES, POINT TO TOP-LEFT PIXEL
         MVI   1(R15),0            DARKEN TOP-RIGHT PIXEL
         STC   R0,133(,R15)        COLOUR BOTTOM-RIGHT PIXEL
         BR    R14                 RETURN TO CALLER
         SPACE
         DROP  R9,R12,R13          @DATA, MENUGRAF, @MENUWK
         SPACE
         SPACE
         LTORG
LEGENDTX DC    C'N=NUCLEUS  O=OFFLINE  S=SQA  A=PLPA  C=COMMON  L=LSQA +
                P=PRIVATE  U='
LEDGAFC  DC    CL4'AFC:',XL6'402020202120'
LEDGCPU  DC    CL4'CPU:',XL4'40202120',C'%'
LEDGRGN  DC    CL7'REGION:'
         SPACE
.NOMGRAF ANOP
         SPACE
         DC    0D'0'               END OF CSECT
         TITLE '  R E V M E N U   -   D Y N A M I C   A R E A  '
@MENUWK  DSECT
         DS    18F
@MENUMK  DS    CL8
MENSAVE2 DS    18F
         AIF   (&ENV390).MENUIC
MENLPDIA DS    A                   PLPA DIRECTORY ADDRESS
         ORG   MENSAVE2
MENUIC   DS    128H                UIC DISTRIBUTION ARRAY
         ORG
.MENUIC  ANOP
MENSTK@  DS    A      \_ 1 LM _/   ADDRESS OF TEXT TO PARSE
MENSTK#  DS    F      /  +STM  \   BYTE COUNT LEFT TO PARSE
MENPROFN DS    CL8                 SAVED PROFILE MEMBER NAME
MENPROF@ DS    A                   PROFILE CONTENTS ADDRESS
MENPROFL EQU   ($P_HD#+$P_DS#)*80  PROFILE CONTENTS LENGTH
MENTSO@  DS    A                   ADDRESS OF SAVED TSO COMMANDS
MENUCRNT EQU   *,20                CURRENT MENU STATUS
MENTIT@  DS    A                   ADDRESS OF MENU TITLE
MENOPT@  DS    A                   ADDRESS OF MENU OPTIONS
MENCMD@  DS    A                   ADDRESS OF COMMAND TABLE
MENOPTN  DS    XL8                 MENU OPTION
MENUPREV DS    XL20                PREVIOUS MENU STATUS
DSCUSTEP DS    A                   CUSTOMIZATION ROUTINE ENTRY POINT
PROJECT@ DS    A                   INPUT ADDRESS SAVE AREA
OTHERDS@ DS    A                   INPUT ADDRESS SAVE AREA
DSNHIST@ DS    A                   HISTORY ADDRESS SAVE AREA
MNSAVSEL DS    0CL78               DATA SET SELECTION SAVE AREA
MNSAVDSN DS    CL56  \          /  &DSN1 SAVE AREA
MNSAVVOL DS    CL6    \__ ONE _/   &VOL1 SAVE AREA
MNSAVMEM DS    CL8    /   XC   \   &MEM1 SAVE AREA
MNSANMEM DS    CL8   /          \  &MEM2 SAVE AREA
MENFLGS  DS    X
$MFPRIM  EQU   X'80'               SHOWING THE PRIMARY OPTION MENU
$MFMONO  EQU   X'40'               ALL GRAPHICS USE MONOCHROME
$MFDIM   EQU   X'20'               ONLY COLOUR HALF THE PIXELS
$MFDSEL  EQU   X'10'               DATA SET ENTRY PANEL
$MFCAT   EQU   X'08'               FILES HAVE BEEN CONCATENATED
$MFRFU   EQU   X'04'               CONCAT'D DD INCLUDES A RECFM=U FILE
$MFNMN   EQU   X'02'               NEW MEMBER NAME EVENT
$MFREC   EQU   X'01'               EDIT RECOVERY CHECK PERFORMED
MENFLG2  DS    X
$M2FROM  EQU   X'80'               "FROM" DATA SET IS ALLOCATED
$M2FRDS  EQU   X'40'               "FROM" SPECIFED VIA "OTHER"
$M2TODS  EQU   X'20'               "TO" SPECIFED VIA "OTHER"
$M2CAN   EQU   X'10'               CANCEL REQUESTED
         AIF   (&ENV390).MENSYM
MENUSYM  DS    XL9                 SYMBOL STORAGE DETAILS SAVE AREA
.MENSYM  ANOP
MENUMRGN DS    H                   DISPLAY OFFSET FOR WIDE SCREEN
MAINRDAT DS    (MAINR#)CL10        RIGHT SIDE DISPLAY ITEMS
PLTCOUNT DS    H                   NUMBER OF ACTIVE PLT AREAS
*    PROJECT-LIBRARY-TYPE AREAS ARE ONLY REQUIRED FOR
*    OPTIONS 1 AND 2 BECAUSE ONLY THESE TWO OPTIONS ALLOW
*    CONCATENATED LIBRARIES.  CONSEQUENTLY, THIS STORAGE
*    CAN BE USED FOR OTHER PURPOSES BY OTHER OPTIONS.
PLTAREA  DS    0F                  PROJECT-LIBRARY-TYPE (PLT) AREA
$PLTDDN  EQU   0                   OFFSET TO DDNAME - CL8
$PLTDSN  EQU   8                   OFFSET TO DSNAME - H,CL26
$PLTUCB  EQU   36                  OFFSET TO UCB ADDRESS - A
$PLTVOL  EQU   40                  OFFSET TO VOLUME - CL6
$PLTDSO  EQU   46                  OFFSET TO DSORG - XL1
$PLTRFM  EQU   47                  OFFSET TO RECFM - XL1
$PLTREC  EQU   48                  OFFSET TO LRECL - H
$PLTBLK  EQU   50                  OFFSET TO BLKSI - H
$PLTLEN  EQU   52                  SIZE OF A PLT ELEMENT
PLT#01   DS    XL($PLTLEN)         PLT AREA # 1
PLT#02   DS    XL($PLTLEN)         PLT AREA # 2
PLT#03   DS    XL($PLTLEN)         PLT AREA # 3
PLT#04   DS    XL($PLTLEN)         PLT AREA # 4
         ORG   PLT#02
FROMAREA DS    XL($DSVARSZ)        "FROM" DATA SET DETAILS
FROMDSCB DS    XL140               "FROM" DATA SET VTOC ENTRY
**OMPROJ DS    CL8                 "FROM" &PROJ
**OMLIB1 DS    CL8                 "FROM" &LIB1
**OMTYPE DS    CL8                 "FROM" &TYPE
FROMALEN EQU   *-FROMAREA          "FROM" AREA TO CLEAR
         ORG
         SPACE
         DS    0D                  END OF DSECT
@MENUWKL EQU   *-@MENUWK
         TITLE '  R E V P R O F  '
**********************************************************************
*                                                          *         *
*         PROFILE MEMBER INPUT AND OUTPUT                  *  R43.0  *
*                                                          * JAN2010 *
**********************************************************************
         SPACE
**********************************************************************
*                                                                    *
*        THIS ROUTINE READS AND WRITES MEMBERS TO THE PROFILE        *
*        PDS FILE.  THE FILE NAME IS 'ISPPROF'.  (USE OF THE         *
*        'REVPROF' DD FOR PRE-ESA WAS DROPPED IN R50.0.)             *
*                                                                    *
*        THE PROFILE MEMBER NAME TO BE PROCESSED IS SPECIFIED        *
*        IN THE 'DOUBLE' VARIABLE.  WHEN THE MEMBER IS READ IN       *
*        THE FIRST WORD OF THE 'DOUBLE' VARIABLE CONTAINS THE        *
*        NUMBER OF BYTES READ IN, AND THE SECOND WORD OF THE         *
*        'DOUBLE' VARIABLE POINTS TO AN AREA HAVING THE SIZE         *
*        REQUESTED BY THE CALLER (EVEN IF THE INPUT BYTE COUNT       *
*        IS LESS) CONTAINING THE INPUT PROFILE MEMBER DATA.          *
*                                                                    *
*        WHEN 'DOUBLE' IS ALL ZEROS THEN NO DATA WAS READ IN AND     *
*        THERE IS NO DANGLING PROFILE DATA AREA LEFT TO BE FREED.    *
*                                                                    *
*        WHEN SAVING THE PROFILE, UPDATE-IN-PLACE IS ATTEMPTED       *
*        FIRST TO CONSERVE DISK SPACE.  IF THE PROFILE MEMBER        *
*        DOES NOT ALREADY EXIST OR IS TOO SHORT OR AN I/O ERROR      *
*        IS ENCOUNTERED THE SAVE IS PERFORMED USING OUTPUT-ONLY.     *
*                                                                    *
**********************************************************************
         SPACE
**********************************************************************
*                                                                    *
*        ALTERNATE PROCESSING:                                       *
*                                                                    *
*        WHEN '$14ALT' IS SET, THE FILE NAME IS FETCHED FROM         *
*        '$SUBCOM' AND NO RESTRICTION IS PLACED ON THE LOGICAL       *
*        RECORD LENGTH.  THE FILE MUST STILL HAVE FIXED-LENGTH       *
*        RECORDS.                                                    *
*                                                                    *
*        CURRENTLY, THIS FUNCTION IS ONLY USED BY EDIT RECOVERY.     *
*                                                                    *
**********************************************************************
         SPACE
**********************************************************************
*                                                                    *
* REGISTERS ON ENTRY: R0  = BYTE COUNT - MUST BE A MULTIPLE OF 80    *
*                           > 0 => INPUT                             *
*                           < 0 => OUTPUT                            *
*                     R1 -> PROFILE DATA (GETMAIN FOR READ IF 0)     *
*                     R9 -> @DATA                                    *
*                     R13-> SAVE AREA                                *
*                     R14-> RETURN ADDRESS                           *
*                     R15-> REVPROF                                  *
*                                                                    *
* DURING PROCESSING:  R11-> REVPROF                                  *
*                     R13-> @PROFWK  (LOCAL GETMAINED AREA)          *
*                                                                    *
* RETURN CODES:       R15 = 0  PROCESSING COMPLETE                   *
*                                                                    *
**********************************************************************
         EJECT
         USING @DATA,R9
REVPROF  RSECT
REVPROF  AMODE 31
REVPROF  RMODE 24
         B     @PROF-*(,R15)
         DC    AL1(7),CL7'REVPROF'
@PROF    STM   R14,R12,12(R13)
         LR    R11,R15             SET BASE
         USING REVPROF,R11
         LR    R2,R0               SAVE INPUT SIZE
         LR    R3,R1               SAVE INPUT ADDRESS
         LA    R0,@PROFWKL
         MVI   GETMNTRC,33         TRACK GETMAIN IN CASE OF FAILURE
         GETMAIN R,LV=(0)          GET LOCAL WORKING STORAGE
         LA    R15,@PROFWKL
         LR    R14,R1
         SR    R5,R5
         MVCL  R14,R4              CLEAR WORKING STORAGE
         ST    R1,8(,R13)          CHAIN SAVE AREAS
         ST    R13,4(,R1)
         LR    R13,R1              POINT TO GETMAINED AREA
         MVI   0(R13),33           IDENTIFY THE AREA
         USING @PROFWK,R13
         STM   R2,R3,PROFGPR0      SAVE INPUT GPR0 AND GPR1 VALUES
         MVC   PROFMEM,DOUBLE      SET PROFILE MEMBER NAME
         XC    DOUBLE,DOUBLE       RESET OUTPUT DATA
         MVI   PROFFF+1,1          NUMBER OF BLDL ENTRIES
         MVI   PROFLL+1,76         SIZE OF FIRST ENTRY
         SPACE
************************************************************
*                                                          *
*         ESTABLISH PROFILE FILE NAME                      *
*                                                          *
************************************************************
         SPACE
         LA    R1,PROFDDNM         PIGGY BACK ON ISPF DD
         L     R15,=A(REVDDLOC)
         BASR  R14,R15             FIND PROFILE DD TIOT ENTRY
         LTR   R15,R15             IS IT ALLOCATED?
         BZ    PROFEXIT            NO, NOT IN TIOT SO NO PROFILE FILE
         LA    R4,PROFDYN          POINT TO ACTUAL DCB AREA TO BE USED
         MVC   PROFDYN,PROFDCB     INITIALIZE THE PROFILE DCB
         USING IHADCB,R4
         MVC   DCBDDNAM,0(R1)      SET DD NAME INTO DCB
         MVI   OPEND,X'80'         FIRST DCB IN LIST IS ALSO LAST
         SPACE
************************************************************
*                                                          *
*         DETERMINE REQUESTED FUNCTION                     *
*                                                          *
************************************************************
         SPACE
         TM    STATUS14,$14ALT     ALTERNATE FILE PROCESSING?
         BNO   PROFDDOK            NO, NORMAL PROFILE
         MVI   DCBLRECL+1,0        YES, ZERO THE LRECL
         MVC   DCBDDNAM,$SUBCOM    LOAD ALTERNATE DDNAME
PROFDDOK LTR   R3,R2               REQUESTING INPUT?
         BM    PROFSAVE            NO, GO SAVE PROFILE
         SPACE
         SPACE
************************************************************
*                                                          *
*         READ PROFILE MEMBER                              *
*                                                          *
************************************************************
         SPACE
         LM    R0,R1,PROFGPR0      RESTORE CALLER'S GPR0 AND GPR1
         LTR   R1,R1               WAS AN AREA SUPPLIED?
         BNZ   PROFOPNI            YES, SKIP GETMAIN
         MVI   GETMNTRC,34         TRACK GETMAIN IN CASE OF FAILURE
         GETSTOR RU,LV=(0),LOC=(31,64)
         LR    R2,R1               POINT TO THE PROFILE AREA
         LR    R0,R3               GET ITS LENGTH
         SR    R15,R15             ZERO PAD AND SOURCE LENGTH
         MVCL  R2,R14              ZERO THE PROFILE HOLD AREA
PROFOPNI STM   R0,R1,PROFBUFR      SAVE PROFILE AREA SIZE AND ADDRESS
         OPEN  ((R4),(INPUT)),MF=(E,OPEND)
         MVI   SYNADSW,0           RESET I/O ERROR FLAG
         SPACE
         LM    R1,R2,PROFBUFR      GET PROFILE AREA SIZE AND ADDRESS
         LR    R3,R1               COPY THE SIZE FOR MVCL IN READ LOOP
         TM    STATUS6,HELSW       INVOKED AS FULLSCREEN HELP?
         BO    PROFBILD            YES, AVOID NEEDLESS BLDL
         TM    STATUS14,$14ALT     ALTERNATE FILE PROCESSING?
         BO    PROFRECO            YES, CHECK FOR EDIT RECOVERY
         AIF   (NOT &ENV390).KEYLOK1
         CLC   PROFMEM,PROFREV     BASIC REVIEW PROFILE?
         BNE   PROFBILD            NO, KEYLIST ALREADY CHECKED
         MVC   PROFNAME,PROFKEYL   LOAD KEYLIST PROFILE MEMBER NAME
         BLDL  (R4),PROFBLDL       VERIFY EXISTENCE OF PROFILE MEMBER
         LTR   R15,R15             DOES PROFILE MEMBER EXIST?
         BNZ   PROFBILD            NO
         OI    STATUS7,KEYLOK      YES
.KEYLOK1 ANOP
         B     PROFBILD
         SPACE
PROFRECO CLC   PROFMEM,PROFEDID    VERIFYING EDIT RECOVERY PDS?
         BNE   PROFBILD            NO
         MVC   PROFNAME,PROFUNDO   YES, LOAD REQUIRED UNDO MEMBER NAME
         SR    R0,R0
         ST    R0,PROFTTRP         ZERO RESIDUAL TTR DATA
         BLDL  (R4),PROFBLDL       ACQUIRE TTR OF EDIT RECOVERY DATA
         MVC   TTR,PROFTTRP        SAVE IT FOR RECOVEDT AND REVEDIT
         SPACE
PROFBILD MVC   PROFNAME,PROFMEM    LOAD PROFILE MEMBER NAME
         BLDL  (R4),PROFBLDL       VERIFY EXISTENCE OF PROFILE MEMBER
         LTR   R15,R15             DOES PROFILE MEMBER EXIST?
         BNZ   PROFCLSI            NO
**       CLI   PROFCNCT,0          MEMBER FROM A CONCATENATION?
**       BNE   PROFCLSI            YES, CAN'T WRITE TO IT
         XASAM24
         FIND  (R4),PROFTTRP,C     POINT TO MEMBER FOR FIRST READ
         XASAM31
         LH    R7,DCBBLKSI         GET THE REQUIRED BUFFER SIZE
         MVI   GETMNTRC,35         TRACK GETMAIN IN CASE OF FAILURE
         GETSTOR RU,LV=(R7),LOC=(31,64)
         LR    R6,R1               POINT TO NEW I/O BUFFER
         LR    R0,R7               COPY ITS SIZE
         STM   R0,R1,PROFIOBF      SAVE I/O BUFFER SIZE AND ADDRESS
         SPACE
PROFINLP L     R6,PROFIOBF+4       POINT TO THE PROFILE READ BUFFER
         XASAM24
         READ  DYNDECBW,SF,(R4),(R6),'S',MF=E
         CHECK DYNDECBW            WAIT FOR THE READ
         XASAM31
         CLI   SYNADSW,0           I/O ERROR?
         BNE   PROFEODI            YES, ASSUME NO FURTHER READABLE DATA
         LH    R7,DCBBLKSI
         L     R15,DYNDECBW+16     POINT TO THE IOB
         SH    R7,14(,R15)         GET LENGTH OF BLOCK READ
         CR    R3,R7               MORE DATA THAN WILL FIT?
         BNL   PROFMVSZ            NO
         LR    R7,R3               YES, TRUNCATE PROFILE DATA
PROFMVSZ LR    R3,R7               GET BYTES TO LOAD FROM READ BLOCK
         MVCL  R2,R6               ACCUMULATE PROFILE DATA
         L     R3,PROFBUFR+4       POINT TO LOADED PROFILE DATA
         A     R3,PROFBUFR         POINT PAST PROFILE DATA STORAGE
         SR    R3,R2               NEED MORE DATA?
         BP    PROFINLP            YES, READ ANOTHER BLOCK
PROFEODI DS    0H
         XASAM31
         LM    R0,R1,PROFIOBF      GET I/O BUFFER DETAILS
         FREEMAIN RU,LV=(0),A=(1)  FREE THE PROFILE I/O BUFFER
PROFCLSI MVI   CLOSED,X'80'
         CLOSE ((R4)),MF=(E,CLOSED)
         SPACE
         LM    R0,R1,PROFBUFR      GET PROFILE DATA SIZE AND ADDRESS
         CR    R0,R3               ANY DATA READ?
         BH    PROFKEEP            YES, DO NOT FREE THE HOLD AREA
         ICM   R15,15,PROFGPR1     WAS THE AREA SUPPLIED BY THE CALLER?
         BNZ   PROFKEEP            YES, SO DO NOT FREE IT
         FREEMAIN RU,LV=(0),A=(1)  NO, FREE THE PROFILE HOLD AREA
         SR    R0,R0
PROFKEEP SR    R0,R3               GET READ BYTE COUNT
         BNP   PROFEXIT            NO DATA WAS READ
         STM   R0,R1,DOUBLE        SAVE READ SIZE AND ADDRESS
         B     PROFEXIT            PROFILE INPUT COMPLETE
         SPACE
         SPACE
************************************************************
*                                                          *
*         SAVE PROFILE MEMBER                              *
*                                                          *
************************************************************
         SPACE
PROFSAVE LPR   R3,R3               GET PROFILE SIZE TO SAVE
         ST    R3,PROFBUFR         SAVE IT
         L     R2,PROFGPR1         POINT TO PROFILE DATA TO WRITE
         LA    R0,PROFEODU
         STCM  R0,7,DCBEODA        SET END-OF-FILE ADDRESS
         OPEN  ((R4),(UPDAT)),MF=(E,OPEND)
         MVI   SYNADSW,0           RESET I/O ERROR FLAG
         TIME  DEC
         STM   R0,R1,DOUBLE        SUPPLY UPDATE TIMESTAMP
         AP    DOUBLE,=P'1900000'  GET PROPER 4-DIGIT YEAR
         OI    DOUBLE+7,X'0F'      PREPARE FOR UNPACK
         UNPK  17(15,R13),DOUBLE   GET TIME+DATE IN SAVE AREA
         SPACE
         MVI   0(R2),C' '
         MVC   1(79,R2),0(R2)      BLANK FIRST RECORD
         L     R1,PSATOLD          POINT TO THE CURRENT TCB
         L     R1,TCBTIO-TCB(,R1)  POINT TO THE TIOT
         MVC   0(8,R2),0(R1)       COPY THE JOB NAME
         MVC   8(8,R2),PROFMEM     COPY THE MEMBER NAME
         MVC   17(7,R2),25(R13)    LOAD 7-DIGIT DATE
         MVC   25(8,R2),17(R13)    LOAD 8-DIGIT TIME
         MVC   34(8,R2),=CL8'&REL' SHOW RELEASE
         SPACE
         SR    R3,R3               RESET FETCHED BYTE COUNTER
         MVC   PROFNAME,PROFMEM    LOAD PROFILE MEMBER NAME
         BLDL  (R4),PROFBLDL       VERIFY EXISTENCE OF PROFILE MEMBER
         LTR   R15,R15             DOES PROFILE MEMBER EXIST?
         BNZ   PROFCLSU            NO
         CLI   PROFCNCT,0          MEMBER FROM A CONCATENATION?
         BNE   PROFCLSO            YES, CAN'T WRITE TO IT
         XASAM24
         FIND  (R4),PROFTTRP,C     POINT TO MEMBER FOR FIRST READ
         XASAM31
         LH    R7,DCBBLKSI         GET THE REQUIRED BUFFER SIZE
         MVI   GETMNTRC,36         TRACK GETMAIN IN CASE OF FAILURE
         GETSTOR RU,LV=(R7),LOC=(31,64)
         LR    R6,R1               POINT TO NEW I/O BUFFER
         LR    R0,R7               COPY ITS SIZE
         STM   R0,R1,PROFIOBF      SAVE I/O BUFFER SIZE AND ADDRESS
         SPACE
PROFUPLP L     R7,PROFIOBF+4       POINT TO THE I/O BUFFER
         XASAM24
         READ  DYNDECBW,SF,(R4),(R7),'S',MF=E
         CHECK DYNDECBW            WAIT FOR THE READ
         XASAM31
         CLI   SYNADSW,0           I/O ERROR?
         BNE   PROFEODU            YES, RETRY WITH OPEN FOR OUTPUT
         LH    R7,DCBBLKSI
         L     R1,DYNDECBW+16      POINT TO THE IOB
         SH    R7,14(,R1)          GET LENGTH OF BLOCK READ
         LA    R5,0(R3,R2)         POINT TO DATA TO REWRITE
         AR    R3,R7               ACCUMULATE BYTE COUNT SO FAR
         XASAM24
         WRITE DYNDECBW,SF,(R4),(R5),'S',MF=E
         CHECK DYNDECBW            WAIT FOR THE WRITE
         XASAM31
         CLI   SYNADSW,0           I/O ERROR?
         BNE   PROFCLSU            YES, RETRY WITH OPEN FOR OUTPUT
         C     R3,PROFBUFR         UPDATED ENOUGH YET?
         BL    PROFUPLP            NO, READ ANOTHER BLOCK
PROFEODU LM    R0,R1,PROFIOBF      GET I/O BUFFER DETAILS
         FREEMAIN RU,LV=(0),A=(1)  FREE THE PROFILE I/O BUFFER
PROFCLSU MVI   CLOSED,X'80'
         CLOSE ((R4)),MF=(E,CLOSED)
         C     R3,PROFBUFR         UPDATED ENOUGH DATA?
         BNL   PROFEXIT            YES, GO AND EXIT
         SPACE
         OPEN  ((R4),(OUTPUT)),MF=(E,OPEND)
         MVI   SYNADSW,0           RESET I/O ERROR FLAG
         SR    R3,R3               RESET WRITTEN BYTE COUNTER
PROFOTLP LA    R6,0(R3,R2)         POINT TO DATA TO WRITE
         L     R5,PROFBUFR         GET PROFILE MEMBER SIZE
         SR    R5,R3               GET DATA LEFT TO WRITE
         CH    R5,DCBBLKSI         NEED TO WRITE LESS THAN A BLOCK?
         BNL   *+8                 NO
         STH   R5,DCBBLKSI         YES, SAVE THIS LESSER AMOUNT
         AH    R3,DCBBLKSI         ACCUMULATE BYTES ABOUT TO BE WRITTEN
         XASAM24
         WRITE DYNDECBW,SF,(R4),(R6),'S',MF=E
         CHECK DYNDECBW            WAIT FOR THE READ
         XASAM31
         CLI   SYNADSW,0           I/O ERROR?
         BNE   PROFCLSO            YES, GIVE UP
         C     R3,PROFBUFR         WRITTEN ENOUGH YET?
         BL    PROFOTLP            NO, WRITE ANOTHER BLOCK
         SR    R0,R0
         STCM  R0,15,PROFTTRP      ENSURE NO DIRECTORY ENTRY USERDATA
         STOW  (R4),PROFNAME,R     REPLACE THE MEMBER
PROFCLSO MVI   CLOSED,X'80'
         CLOSE ((R4)),MF=(E,CLOSED)
         DROP  R4                  IHADCB
         SPACE
         SPACE
************************************************************
*                                                          *
*         TERMINATE                                        *
*                                                          *
************************************************************
         SPACE
PROFEXIT LR    R1,R13              POINT TO LOCAL WORKING STORAGE
         L     R13,4(,R13)         POINT TO CALLER'S SAVE AREA
         LA    R0,@PROFWKL         GET LOCAL WORKING STORAGE LENGTH
         FREEMAIN RU,LV=(0),A=(1)  FREE LOCAL WORKING STORAGE
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         SR    R15,R15             ZERO LOCAL RETURN CODE
*        BR    R14                 RETURN TO CALLER
         XABSM14
         TITLE '  R E V P R O F   -   S T A T I C   A R E A  '
         DC    0D'0'
PROFHEX  DC    CL16'0123456789ABCDEF'
PROFREV  DC    CL8'$$REVIEW'
PROFKEYL DC    CL8'REVPROF '
PROFDDNM DC    CL8'ISPPROF '
PROFEDID DC    CL8'$REVEDID'
PROFUNDO DC    CL8'UNDOMEM0'
         LTORG
         SPACE
         PRINT NOGEN
PROFDCB  DCB   DSORG=PO,DDNAME=--PROF--,MACRF=(R,W),RECFM=FB,LRECL=80, +
               EODAD=PROFEODI,SYNAD=DYNSYNAD
PROFDCBL EQU   *-PROFDCB
         PRINT GEN
         SPACE
         DROP  R11                 REVPROF
         SPACE
         DC    0D'0'               END OF CSECT
         TITLE '  R E V P R O F   -   D Y N A M I C   A R E A  '
@PROFWK  DSECT
         DS    18F
PROFGPR0 DS    F                   CALLER'S GPR0 CONTENTS
PROFGPR1 DS    F                   CALLER'S GPR1 CONTENTS
PROFBUFR DS    2F                  PROFILE DATA BUFFER DETAILS
PROFIOBF DS    2F                  PROFILE I/O BUFFER DETAILS
PROFMEM  DS    CL8                 PROFILE MEMBER NAME
PROFBLDL DS    0XL80               BLDL AREA
PROFFF   DS    H                   COUNT OF MEMBERS IN BUILD LIST
PROFLL   DS    H                   MAXIMUM ENTRY LENGTH
PROFNAME DS    CL8                 MEMBER NAME
PROFTTRP DS    XL3                 MEMBER START TTR
PROFCNCT DS    XL1                 CONCATENATION NUMBER ("K")
PROFLIBF DS    XL1                 LOCATION CODE ("Z")
PROFINDC DS    XL1                 INDICATOR BYTE (ALIAS, ETC.)
         ORG   PROFBLDL+80
PROFDYN  DS    XL(PROFDCBL)        DCB AREA
         DS    0D                  END OF DSECT
@PROFWKL EQU   *-@PROFWK
