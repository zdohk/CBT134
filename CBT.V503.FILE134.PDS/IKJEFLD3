//ZGXP30D3 JOB (HUB00100),IKJEFLD3,NOTIFY=&SYSUID,
//             CLASS=A,MSGCLASS=X,COND=(0,NE)
//* MULTITSO:
//* ASSEMBLE AND LINK IKJEFLD3 - TSO LOGON POST-PROMPT EXIT
//*
//HLASM   EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF,TERM)
//SYSIN    DD  *
***********************************************************************
*                                                                     *
* MODULE NAME = IKJEFLD3                                              *
*                                                                     *
* DESCRIPTIVE NAME = TSO Logon Post-Prompt Exit                       *
*                                                                     *
* FUNCTION = 1. This TSO Logon exit copies the RACF user name         *
*            from the ACEE into the programmer name field of          *
*            the JOB card image of the TSO session JCL.               *
*                                                                     *
*            2. This TSO Logon exit allows a single TSO Userid        *
*            to have up to forty (40) TSO sessions by adding          *
*            1 of 40 suffix characters to the TSO userid to           *
*            form a unique job name.  The SYSIKJUA enqueue has        *
*            already been converted to SHARED by a front-end to       *
*            SVC 56 (ENQ/RESERVE).                                    *
*                                                                     *
*                                                                     *
* AUTHOR = Greg Price  <Greg.Price@hancorp.com.au>                    *
*          Hansen Corporation                                         *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = MVS/ESA or OS/390                                 *
*                   TSO/E V2                                          *
*                                                                     *
*    AUTHORIZATION = APF                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
* MODULE TYPE = PROCEDURE, (TSO Logon Exit)                           *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 1K                                                 *
*                                                                     *
*    ATTRIBUTES = RENT, REFR, RMODE ANY, AMODE 31,                    *
*                 SUPERVISOR STATE, KEY 8                             *
*                                                                     *
* INSTALLATION = This exit must be installed in an authorized system  *
*             library (LPA or link-list) under the name IKJEFLD3.     *
*             No SYS1.PARMLIB change is necessary to activate this    *
*             exit - its presence is a system library triggers its    *
*             invocation.                                             *
*             To deactivate this exit and remove it from the system,  *
*             simply delete it and refresh LLA if it was in a         *
*             link-list library.                                      *
*                                                                     *
* OPERATION = Retrieve the user name from the ACEE and copy it        *
*             into the JOB card if there is sufficient room.          *
*                                                                     *
* CALLED BY = TSO Logon (re: TSO/E Customization manual).             *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*                                                                     *
* 07SEP00 Initial write                                               *
* 12DEC00 Initial implementation                                      *
* 09JAN01 Allow multiple sessions per TSO Userid                      *
*                                                                     *
***********************************************************************
IKJEFLD3 CSECT
IKJEFLD3 AMODE 31
IKJEFLD3 RMODE ANY
         USING IKJEFLD3,R15
         USING PSA,0
         B     $START
         DROP  R15                 IKJEFLD3
         DC    AL1(17),C'IKJEFLD3 &SYSDATC'
$START   STM   R14,R12,12(R13)
         LR    R12,R15             BASE
         USING IKJEFLD3,R12
         LR    R11,R1              PLIST
         USING PARMLIST,R11
*
*        VERIFY JOB STATEMENT
*
         L     R4,PARM11           POINT TO JCL PARAMETER
         L     R4,8(,R4)           POINT TO JCL
         CLC   =C'//',0(R4)        JCL STATEMENT PRESENT?
         BNE   $EXIT               DOES NOT LOOK LIKE IT
         CLI   2(R4),C' '          DOES STATEMENT HAVE A LABEL?
         BNH   $EXIT               NO, CAN'T BE A JOB CARD
*
*        FIND THE RACF USER NAME
*
         L     R2,PSAAOLD          POINT TO CURRENT ASCB
         USING ASCB,R2
         L     R2,ASCBASXB         POINT TO CURRENT ASXB
         DROP  R2                  ASCB
         USING ASXB,R2
         ICM   R2,15,ASXBSENV      POINT TO ACEE
         BZ    $DUPUSER            EXIT IF NONE
         DROP  R2                  AXCB
         USING ACEE,R2
         ICM   R3,15,ACEEUNAM      POINT TO USER NAME
         BZ    $DUPUSER            EXIT IF NONE
         DROP  R2                  ACEE
         CLI   0(R3),1             CHECK NAME LENGTH
         BNH   $DUPUSER            EXIT IF NONE
*
*        FIND JOB VERB
*
         LA    R0,12               ARBITRARY SCAN LIMIT
         LA    R1,3(,R4)           POINT TO FIRST CANDIDATE
JOBVRBLP CLC   =C' JOB ''',0(R1)   FOUND JOB CARD VERB + ACCT QUOTE?
         BE    ISJOB               YES, DEFINITELY A JOB STATEMENT
         LA    R1,1(,R1)           NO, TRY NEXT ONE ALONG
         BCT   R0,JOBVRBLP
         B     $DUPUSER            PROBABLY NOT A JOB STATEMENT
*
*        FIND WHERE NAME WOULD GO, MAKE ROOM, AND INSERT NAME
*
ISJOB    LA    R0,41               ASSUME MAX ACCOUNT LENGTH IS 40
         LA    R1,6(,R1)           POINT PAST ACCOUNT LEADING QUOTE
QUOTELP  CLI   0(R1),C''''         FOUND TRAILING QUOTE?
         BE    GETPOSI             YES
         LA    R1,1(,R1)           NO
         BCT   R0,QUOTELP
         B     $DUPUSER            COULD NOT FIND TRAILING QUOTE
TRTBLANK TRT   0(0,R5),BLANKTAB    <<< EXECUTED >>>
LOADNAME MVC   1(0,R5),1(R3)       <<< EXECUTED >>>
GETPOSI  LA    R6,1(,R1)           POINT PAST ACCOUNT TRAILING QUOTE
         LA    R5,2(,R1)           POINT TO WHERE NAME IS TO GO
         CLI   1(R1),C' '          ANY OPERANDS AFTER ACCOUNT?
         BE    TACKITON            NO, TACK ON PROGRAMMER NAME
         CLI   1(R1),C','          EXPECTED SYNTAX?
         BNE   $DUPUSER            NO, BETTER LEAVE
         LA    R6,72(,R4)          POINT PAST LAST VALID COLUMN
         SR    R6,R5               GET AREA LENGTH AFTER COMMA
         BCTR  R6,0                DECREMENT FOR EXECUTE
         EX    R6,TRTBLANK         FIND THE NEXT BLANK
         BZ    $DUPUSER            NO BLANKS FOUND
         LA    R6,71-23(,R4)       POINT TO LATEST BLANK FOR ROOM
         CR    R1,R6               IS THE FIRST BLANK TOO LATE?
         BH    $DUPUSER            YES, NOT ENOUGH ROOM
         LA    R6,1(,R6)           HANDLE INITIAL DECREMENT
SHUFLELP BCTR  R6,0                BACK UP ONE
         MVC   23(1,R6),0(R6)      NO, SHUFFLE UP BY 23 BYTES
         CR    R6,R5               BACK TO INSERT AREA START?
         BNL   SHUFLELP            NO, KEEP SHUFFLING
TACKITON MVI   0(R6),C','          ENSURE COMMA AFTER ACCOUNT NUMBER
         MVI   0(R5),C''''         SUPPLY LEADING QUOTE
         MVI   1(R5),C' '          BLANK WHOLE NAME FIELD
         MVC   2(19,R5),1(R5)
         MVI   21(R5),C''''        SUPPLY TRAILING QUOTE
         SLR   R15,R15
         IC    R15,0(,R3)          GET NAME LENGTH
         BCTR  R15,0               DO NOT COUNT LENGTH INDICATOR BYTE
         CH    R15,=H'20'          TOO LONG?
         BNH   *+8                 NO
         LA    R15,20              YES, REDUCE TO MAXIMUM
         BCTR  R15,0               DECREMENT FOR EXECUTE
         EX    R15,LOADNAME        LOAD IN THE PROGRAMMER NAME
*
*        FIND USERID SUFFIX NOT IN USE
*
$DUPUSER TRT   2(8,R4),BLANKTAB    POINT PAST USERID
         BZ    $EXIT               USERID IS 8 NON-BLANKS - BAD FOR TSO
         CLI   1(R1),C' '          ROOM FOR A SUFFIX CHARACTER?
         BNE   $EXIT               NO, BAD LUCK
         LA    R5,SUFXCHRS         POINT TO POSSIBLE SUFFIX LIST
         L     R3,CVTPTR           POINT TO THE CVT
         USING CVT,R3
         L     R3,CVTASVT          POINT TO THE ASVT
         DROP  R3                  CVT
         USING ASVT,R3
SUFFIXLP L     R0,ASVTMAXU         GET ASID COUNT
         LA    R6,ASVTENTY         POINT TO FIRST SLOT
         MVC   0(1,R1),0(R5)       UPDATE JOB NAME WITH SUFFIX
ASIDLOOP ICM   R2,15,0(R6)         POINT TO ASCB
         BM    NEXTASID            ASID NOT ASSIGNED
         C     R2,PSAAOLD          CURRENT ADDRESS SPACE?
         BE    NEXTASID            YES, SKIP CHECK
         USING ASCB,R2
         ICM   R15,15,ASCBTSB      TSO USER ADDRESS SPACE?
         BZ    NEXTASID            NO
         ICM   R15,15,ASCBJBNS     POINT TO USERID
         BZ    NEXTASID            USER LOGGING ON OR OFF
         CLC   0(8,R15),2(R4)      SAME TSO USER AND SUFFIX?
         BE    NXTSUFIX            YES, BETTER TRY NEXT SUFFIX
NEXTASID LA    R6,4(,R6)           POINT TO NEXT ASVT SLOT
         BCT   R0,ASIDLOOP         TRY IT
         DROP  R2                  ASCB
*
*        ADD AVAILABLE SUFFIX TO JOB NAMES IN KEY ZERO STORAGE
*
         L     R6,PSAAOLD          POINT TO THE CURRENT ASCB
         USING ASCB,R6
         IPK                       SAVE THE CURRENT PSW KEY IN R2
         SPKA  0                   GET INTO KEY ZERO
         ICM   R15,15,ASCBJBNS     POINT TO THE JOB NAME
         BZ    NOASNAME            NO JOB NAME
         MVC   0(8,R15),2(R4)      UPDATE JOB NAME
NOASNAME ICM   R15,15,ASCBCSCB     POINT TO THE CSCB
         BZ    NOCSCB              THERE IS NO CSCB
         MVC   8(8,R15),2(R4)      OVERLAY CHKEY WITH NEW NAME
NOCSCB   SPKA  0(R2)               RESTORE PSW KEY
         B     $EXIT               SUCCESS - NOW ALL DONE
         DROP  R6                  ASCB
*
*        LOOP THROUGH ALL SUFFIX LIST CHARACTERS
*
NXTSUFIX CLI   0(R5),C'9'          PROCESSED LAST SUFFIX?
         LA    R5,1(,R5)           POINT TO NEXT SUFFIX
         BL    SUFFIXLP            NO, SO PROCESS NEXT SUFFIX
         WTO   'IKJEFLD3 FOUND ALL TSO USER JOB NAME SUFFIXES IN USE', +
               ROUTCDE=(2,11)
         DROP  R3                  ASVT
*
*        TERMINATE
*
$EXIT    LM    R14,R12,12(R13)     RESTORE REGISTERS
         SLR   R15,R15             SET RETURN CODE TO ZERO
         BR    R14                 RETURN TO CALLER

BLANKTAB DC    64X'00',X'40',191X'00'
SUFXCHRS DC    C' $#@ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'

         LTORG

         DS    0D                  END OF CSECT

***********************************************************************
*        PARAMETER LIST                                               *
***********************************************************************
PARMLIST DSECT
PARM1    DS    A                       COMMAND BUFFER
PARM2    DS    A                       NEW COMMAND BUFFER
PARM3    DS    A                       UPT
PARM4    DS    A                       ECT
PARM5    DS    A                       PSCB
PARM6    DS    A                       EXIT-TO-EXIT COMMUNICATION WORD
PARM7    DS    A                       EXIT REASON CODE
PARM8    DS    A                       RESERVED
PARM9    DS    A                       RESERVED
*                                      EXIT-DEPENDENT PARAMETER LIST
PARM10   DS    A                       CONTROL SWITCHES
PARM11   DS    A                       JCL PARAMETER
         PRINT NOGEN
PRINT    OPSYN ANOP
         YREGS                         R0-R15
         IEZBITS
         IHAPSA DSECT=YES              PREFIXED SAVE AREA
         CVT   DSECT=YES
         IHAASVT DSECT=YES             ADDRESS SPACE VECTOR TABLE
         IHAASCB DSECT=YES             ADDRESS SPACE CONTROL BLOCK
         IHAASXB DSECT=YES             ADDRESS SPACE EXTENSION BLOCK
         IHAACEE                       ACCESSOR ENVIRONMENT ELEMENT
         END   IKJEFLD3
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSTERM  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LKED    EXEC PGM=IEWL,PARM='MAP,LIST,RENT,REFR'
//SYSLIN   DD DSN=*.HLASM.SYSLIN,DISP=(OLD,PASS)
//SYSPRINT DD SYSOUT=*
//SYSLMOD  DD DISP=SHR,DSN=SYS1.HANSEN.LINKLIB(IKJEFLD3)
//
